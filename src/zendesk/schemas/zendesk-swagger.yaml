swagger: "2.0"
info:
  description: "Zendesk Support API endpoints"
  title: "Support API"
  version: "2.0.0"
host: "example.zendesk.com"
basePath: "/"
schemes:
- "https"
paths:
  /api/lotus/assignables/autocomplete.json:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Query string used to search assignable groups & agents in the AssigneeField"
        in: "query"
        name: "name"
        required: true
        type: "string"
        x-example: "Johnny Agent"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AssigneeFieldAssignableGroupsAndAgentsSearchResponse"
      tags:
      - "AssigneeFieldAssignableGroups"
      - "AssigneeFieldAssignableAgents"
      description: "List assignable groups and agents based on query matched against name\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListAssigneeFieldAssignableGroupsAndAgentsSearch"
      summary: "List assignable groups and agents based on query matched against name"
  /api/lotus/assignables/groups.json:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AssigneeFieldAssignableGroupsResponse"
      tags:
      - "AssigneeFieldAssignableAgents"
      description: "List assignable groups on the AssigneeField\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListAssigneeFieldAssignableGroups"
      summary: "List assignable groups on the AssigneeField"
  /api/lotus/assignables/groups/{group_id}/agents.json:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the group"
        in: "path"
        name: "group_id"
        required: true
        type: "integer"
        x-example: 122
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AssigneeFieldAssignableGroupAgentsResponse"
      tags:
      - "AssigneeFieldAssignableAgents"
      description: "List assignable agents from a group on the AssigneeField\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListAssigneeFieldAssignableGroupAgents"
      summary: "List assignable agents from a group on the AssigneeField"
  /api/v2/account/settings:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AccountSettingsResponse"
      tags:
      - "Account Settings"
      description: "Shows the settings that are available for the account.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ShowAccountSettings"
      summary: "Show Settings"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AccountSettingsResponse"
      tags:
      - "Account Settings"
      description: "Updates settings for the account. See [JSON Format](#json-format) above for the settings you can update.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateAccountSettings"
      summary: "Update Account Settings"
  /api/v2/accounts:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/TrialAccountResponse"
      tags:
      - "Reseller"
      operationId: "CreateTrialAccount"
      summary: "Create Trial Account"
  /api/v2/accounts/available:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Specify the name of the subdomain you want to verify. The name can't contain underscores, hyphens, or spaces.\n"
        in: "query"
        name: "subdomain"
        required: true
        type: "string"
        x-example: "z3ndesk"
      responses:
        200:
          description: "Success response"
          examples:
            application/json:
              success: true
          schema:
            properties:
              success:
                type: "boolean"
            type: "object"
      tags:
      - "Reseller"
      description: "Zendesk Support credentials are not required to access this endpoint. You can use any Zendesk Support subdomain.\n\nReturns \"true\" if the subdomain is available.\n"
      operationId: "VerifySubdomainAvailability"
      summary: "Verify Subdomain Availability"
  /api/v2/activities:
    parameters:
    - description: "A UTC time in ISO 8601 format to return ticket activities since said date."
      in: "query"
      name: "since"
      type: "string"
      x-example: "2013-04-03T16:02:46Z"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ActivitiesResponse"
      tags:
      - "Activity Stream"
      description: "Lists ticket activities in the last 30 days affecting the agent making the request.\nAlso sideloads the following arrays of user records:\n\n- actors - All actors involved in the listed activities\n- users - All users involved in the listed activities\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListActivities"
      summary: "List Activities"
  /api/v2/activities/count:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Count of ticket activities"
          schema:
            $ref: "#/definitions/ActivitiesCountResponse"
      tags:
      - "Activity Stream"
      description: "Returns an approximate count of ticket activities in the last 30 days affecting the agent making the request. If the count exceeds 100,000, the count will return a cached result. This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
      operationId: "CountActivities"
      summary: "Count Activities"
  /api/v2/activities/{activity_id}:
    parameters:
    - description: "The activity ID"
      in: "path"
      name: "activity_id"
      required: true
      type: "integer"
      x-example: 29183462
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ActivityResponse"
      tags:
      - "Activity Stream"
      description: "Lists a specific activity.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ShowActivity"
      summary: "Show Activity"
  /api/v2/any_channel/channelback/report_error:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Channel Framework"
      description: "#### Allowed For\n\n* Admins\n\n#### Request parameters\n\nThe POST request takes a JSON object parameter which contains information about the\nproblematic [channelback](/documentation/channel_framework/understanding-the-channel-framework/channelback/).\n\n| Name               | Type      | Required  | Comments\n| ------------------ | ----------| --------- | -------------------\n| instance_push_id   | string    | yes       | The ID of the account to which data will be pushed.  This was passed to the integration service when the administrator set up the account\n| external_id        | string    | yes       | Unique identifier of the external resource from the original channelback (string)\n| description        | string    | no        | A human readable description of the error\n| request_id         | string    | no        | A unique identifier for the request\n\n\n#### Response format\n\nThe response does not include a response body\n"
      operationId: "ReportChannelbackError"
      summary: "Report Channelback Error to Zendesk"
  /api/v2/any_channel/push:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ChannelFrameworkPushResultsResponse"
      tags:
      - "Channel Framework"
      description: "Pushes Channel framework content to Zendesk.\n\n#### Allowed For\n\n* Admins\n\n#### Request parameters\n\nThe POST request takes a JSON object parameter which contains data about all\nthe resources that the client is pushing.\n\n| Name               | Type      | Required  | Comments\n| ------------------ | ----------| --------- | -------------------\n| instance_push_id   | string    | yes       | The account ID where data will be pushed. This was passed to the integration service when the administrator set up the account\n| request_id         | string    | no        | A unique identifier for the push request\n| external_resources | array     | yes       | The [resources](#external_resource-object) to push\n\n#### external_resource object\n\n| Name               | Type                               | Max length | Mandatory | Comments\n|------------------- | ---------------------------------- |------------| --------- | ----------\n| external_id        | string                             | 255        | yes       | Unique identifier of the external resource. Must be ASCII characters\n| internal_note      | boolean                            |            | no        | If true creates a new internal note comment\n| message            | string                             | 65535      | yes       | Text to be converted to a ticket or comment\n| html_message       | string                             | 65535      | no        | HTML version of message\n| parent_id          | string                             | 511        | no        | Unique identifier of the external resource for which this is a response. Used to choose the correct thread. Responses may include `parent_id` or `thread_id`, but not both. See [Conversation threads](/documentation/channel_framework/understanding-the-channel-framework/pull_endpoint/#conversation-threads)\n| thread_id          | string                             | 255        | no        | Arbitrary identifier of the thread to which this item should belong. Responses may include `parent_id` or `thread_id`, but not both. See [Conversation threads](/documentation/channel_framework/understanding-the-channel-framework/pull_endpoint/#conversation-threads)\n| created_at         | string                             |            | yes       | When the resource was created in the origin system, as an ISO 8601 extended format date-time. Example: '2015-09-08T22:48:09Z'\n| author             | object                             |            | yes       | See [author object](#author-object) below\n| display_info       | array                              |            | no        | Array of integration-specific data used by apps to modify the agent UI. See [display_info object](#display_info-object) below\n| allow_channelback  | boolean                            |            | no        | If false, prevents the agent from making additional comments on the message in the Zendesk interface\n| fields             | array                              |            | no        | Array of ticket fields to set in Zendesk and their values. See [fields array](#fields-array)\n| file_urls          | array                              | 10         | no        | Array of files to be imported into Zendesk. See [file urls](/documentation/channel_framework/understanding-the-channel-framework/pull_endpoint/#file-urls) in the Channel framework docs\n\n#### author object\n\n| Name        | Type   | Max chars | Mandatory | Comments\n|------------ | ------ |---------- |---------- |-----------\n| external_id | string | 255       | yes       | Unique identifier of the user in the origin service\n| name        | string | 255       | no        | If not supplied, defaults to external id\n| image_url   | string | 255       | no        | URL to an image for the user\n| locale      | String | 255       | no        | The user's locale. Must be one of the supported [locales](/api-reference/ticketing/account-configuration/locales/#list-available-public-locales) in Zendesk\n| fields      | array  |           | no        | Array of items containing user field identifier ('id') and value of field ('value'.)  For system fields ('notes' or 'details'), the identifier is the English name. For custom fields, the identifier may be the ID or the name\n\n#### display_info object\n\n| Name | Type   | Max chars | Mandatory | Comments\n|----- | ------ |---------- |---------- |-----------\n| type | string | 255       | yes       | Globally unique type identifier defined by the integration origin service. Examples: a GUID or URI\n| data | string | 65535     | yes       | JSON data containing display hints\n\n#### fields array\n\nThe `fields` array lists ticket fields to set in Zendesk and their values. Each item consists of a field identifier (`id`) and a value (`value`) for the field. For Zendesk system fields such as `subject`, the identifier is the English name. For custom fields, the identifier may be a field ID or a name. See [Ticket Fields](/api-reference/ticketing/tickets/ticket_fields/).\n\nThe `fields` array can only set ticket values on ticket creation, not on ticket updates.\n\n#### Response format\n\nThe response is a JSON object containing a single key:\n\n| Name      | Type     | Comments\n| --------- | -------- | -------------------\n| results   | array    | An array of [result objects](#result-object)\n\nThe `results` array contains an entry for each item in the incoming `external_resources` array, in the\nsame order.  For example, if you call `push` with 3 external resources, a successful response will include\n`results` with three entries, corresponding to your 3 resources.\n\n#### result object\n\n| Name                 | Type                           | Comments\n| -------------------- | ------------------------------ | -------------------\n| external_resource_id | string                         | The external ID of the resource, as passed in\n| status               | object                         | The status of the import for the indicated resource. See [status object](#status-object)\n\n#### status object\n\n| Name        | Type   | Comments\n| ----------- | ------ | -------------------\n| code        | string | A code indicating the status of the import of the resource, as described in [status codes](#status-codes)\n| description | string | In the case of an exception, a description of the exception. Otherwise, not present.\n\n#### status codes\n\n| Key                                       | Description\n| ----------------------------------------- | ----------------\n| success                                   | The external resource was successfully converted to a ticket or comment\n| already_imported                          | Reimport of the external resource was skipped due to a pre-existing ticket or comment for the resource\n| could_not_locate_parent_external_resource | The parent resource, as identified by parent_id in the [request](#request-parameters), could not be found. The unrecognized parent ID is returned in the description of the [status](#status-object)\n| processing_error                          | An internal exception occurred while processing the resource. See `description` in the [status object](#status-object)\n| halted                                    | This resource was not processed because processing of previous resources failed\n"
      operationId: "PushContentToSupport"
      summary: "Push Content to Support"
  /api/v2/any_channel/validate_token:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Channel Framework"
      description: "#### Allowed For\n\n* Admins\n\n#### Request parameters\n\nThe POST request takes a JSON object parameter which contains the token to be validated.\n\n| Name               | Type      | Required  | Comments\n| ------------------ | ----------| --------- | -------------------\n| instance_push_id   | string    | yes       | The ID of the account to which data will be pushed. This was passed to the integration service when the administrator set up the account\n| request_id         | string    | no        | A unique identifier for the push request\n\n#### Response format\n\nThe response body is empty.\n"
      operationId: "ValidateToken"
      summary: "Validate Token"
  /api/v2/attachments/{attachment_id}:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the attachment"
        in: "path"
        name: "attachment_id"
        required: true
        type: "integer"
        x-example: 498483
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/AttachmentResponse"
      tags:
      - "Attachments"
      description: "Shows attachment details. You can get the value of the `attachment_id` parameter by listing the ticket's comments.\nSee [List Comments](/api-reference/ticketing/tickets/ticket_comments/#list-comments). Each comment\nin the list has an `attachments` list that specifies an `id` for each attachment.\n\n\n #### Allowed for\n\n * Agents\n"
      operationId: "ShowAttachment"
      summary: "Show Attachment"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the attachment"
        in: "path"
        name: "attachment_id"
        required: true
        type: "integer"
        x-example: 498483
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/AttachmentUpdateRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AttachmentResponse"
      tags:
      - "Attachments"
      description: "Toggles enabling or restricting agent access to attachments with detected malware.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateAttachment"
      summary: "Update Attachment for Malware"
  /api/v2/audit_logs:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Filter audit logs by the source type. For example, user or rule"
        in: "query"
        name: "filter[source_type]"
        type: "string"
      - description: "Filter audit logs by the source id. Requires `filter[source_type]` to also be set"
        in: "query"
        name: "filter[source_id]"
        type: "integer"
      - description: "Filter audit logs by the actor id"
        in: "query"
        name: "filter[actor_id]"
        type: "integer"
      - description: "Filter audit logs by the ip address"
        in: "query"
        name: "filter[ip_address]"
        type: "string"
      - description: "Filter audit logs by the time of creation. When used, you must specify `filter[created_at]` twice in your request, first with the start time and again with an end time"
        in: "query"
        name: "filter[created_at]"
        type: "string"
      - description: "Filter audit logs by the action"
        in: "query"
        name: "filter[action]"
        type: "string"
      - description: "Offset pagination only. Sort audit logs. Default is `sort_by=created_at`"
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "Offset pagination only. Sort audit logs. Default is `sort_order=desc`"
        in: "query"
        name: "sort_order"
        type: "string"
      - description: "Cursor pagination only. Sort audit logs. Default is `sort=-created_at`"
        in: "query"
        name: "sort"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AuditLogsResponse"
      tags:
      - "Audit Logs"
      description: "#### Allowed For\n\n* Admins on accounts that have audit log access\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n"
      operationId: "ListAuditLogs"
      summary: "List Audit Logs"
  /api/v2/audit_logs/export:
    post:
      produces:
      - "application/json"
      parameters:
      - description: "Filter audit logs by the source type. For example, user or rule"
        in: "query"
        name: "filter[source_type]"
        type: "string"
      - description: "Filter audit logs by the source id. Requires `filter[source_type]` to also be set."
        in: "query"
        name: "filter[source_id]"
        type: "integer"
      - description: "Filter audit logs by the actor id"
        in: "query"
        name: "filter[actor_id]"
        type: "integer"
      - description: "Filter audit logs by the ip address"
        in: "query"
        name: "filter[ip_address]"
        type: "string"
      - description: "Filter audit logs by the time of creation. When used, you must specify `filter[created_at]` twice in your request, first with the start time and again with an end time"
        in: "query"
        name: "filter[created_at]"
        type: "string"
      - description: "Filter audit logs by the action"
        in: "query"
        name: "filter[action]"
        type: "string"
      responses:
        202:
          description: "Accepted description"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Audit Logs"
      description: "#### Allowed For\n\n* Admins on accounts that have audit log access\n"
      operationId: "ExportAuditLogs"
      summary: "Export Audit Logs"
  /api/v2/audit_logs/{audit_log_id}:
    parameters:
    - description: "The ID of the audit log"
      in: "path"
      name: "audit_log_id"
      required: true
      type: "integer"
      x-example: 498483
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AuditLogResponse"
      tags:
      - "Audit Logs"
      description: "#### Allowed For\n\n* Admins on accounts that have audit-log access\n"
      operationId: "ShowAuditLog"
      summary: "Show Audit Log"
  /api/v2/autocomplete/tags:
    parameters:
    - description: "A substring of a tag to search for"
      in: "query"
      name: "name"
      type: "string"
      x-example: "att"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TagsByObjectIdResponse"
      tags:
      - "Tags"
      description: "Returns an array of registered and recent tag names that start with the characters specified in the `name` query parameter. You must specify at least 2 characters.\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n\n#### Allowed For\n\n* Agents\n"
      operationId: "AutocompleteTags"
      summary: "Search Tags"
  /api/v2/automations:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AutomationsResponse"
      tags:
      - "Automations"
      description: "Lists all automations for the current account.\n\n#### Allowed For\n\n* Agents\n\n#### Available Parameters\n\nYou can pass in any combination of the following optional filters:\n\n| Name       | Type    | Comment\n| ---------- | ------- | -------\n| active     | boolean | Only active automations if true, inactive automations if false\n| sort_by    | string  | Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\"\n| sort_order | string  | One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others\n\n#### Sideloads\n\nThe following sideloads are supported. The usage sideloads are only supported on the Support Professional or Suite Growth plan or above.\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each automation, if present\n| permissions      | The permissions for each automation\n| usage_1h         | The number of times each automation has been used in the past hour\n| usage_24h        | The number of times each automation has been used in the past day\n| usage_7d         | The number of times each automation has been used in the past week\n| usage_30d        | The number of times each automation has been used in the past thirty days\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n"
      operationId: "ListAutomations"
      summary: "List Automations"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/AutomationResponse"
      tags:
      - "Automations"
      description: "Creates an automation.\n\nNew automations must be unique and have at least one condition that is true only once or an action that nullifies at least one of the conditions. Active automations can have overlapping conditions but can't be identical.\n\nThe request must include the following conditions in the `all` array:\n\n- At least one time-based condition\n- At least one condition that checks one of the following fields: `status`, `type`, `group_id`, `assignee_id`, or `requester_id`.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CreateAutomation"
      summary: "Create Automation"
  /api/v2/automations/active:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AutomationsResponse"
      tags:
      - "Automations"
      description: "Lists all active automations.\n\n#### Allowed For\n\n* Agents\n\n#### Available Parameters\n\nYou can pass in any combination of the following optional filters:\n\n| Name       | Type   | Comment\n| ---------- | ------ | -------\n| sort_by    | string | Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\"\n| sort_order | string | One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each automation, if present\n| permissions      | The permissions for each automation\n| usage_1h         | The number of times each automation has been used in the past hour\n| usage_24h        | The number of times each automation has been used in the past day\n| usage_7d         | The number of times each automation has been used in the past week\n| usage_30d        | The number of times each automation has been used in the past thirty days\n"
      operationId: "ListActiveAutomations"
      summary: "List Active Automations"
  /api/v2/automations/destroy_many:
    delete:
      parameters:
      - collectionFormat: "multi"
        description: "The IDs of the automations to delete"
        in: "query"
        items:
          type: "integer"
        name: "ids"
        type: "array"
      responses:
        204:
          description: "No Content response"
      tags:
      - "Automations"
      description: "Deletes the automations corresponding to the provided comma-separated list of IDs.\n\n**Note**: You might be restricted from deleting some default automations. If included in a bulk deletion, the unrestricted automations will be deleted.\n\n#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe DELETE request takes one parameter, an `ids` object that lists the automations to delete.\n\n| Name | Description\n| ---- | -----------\n| ids  | The IDs of the automations to delete\n\n#### Example request\n\n```js\n{\n  \"ids\": \"25,23,27,22\"\n}\n```\n"
      operationId: "BulkDeleteAutomations"
      summary: "Bulk Delete Automations"
  /api/v2/automations/search:
    parameters:
    - description: "Query string used to find all automations with matching title"
      in: "query"
      name: "query"
      required: true
      type: "string"
      x-example: "close"
    - description: "Filter by active automations if true or inactive automations if false"
      in: "query"
      name: "active"
      type: "boolean"
      x-example: true
    - description: "Possible values are \"alphabetical\", \"created_at\", \"updated_at\", and \"position\". If unspecified, the automations are sorted by relevance"
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "position"
    - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "desc"
    - description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
      in: "query"
      name: "include"
      type: "string"
      x-example: "usage_24h"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AutomationsResponse"
      tags:
      - "Automations"
      description: "#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported. For more information, see [Side-loading](/documentation/ticketing/using-the-zendesk-api/side_loading/).\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each automation, if present\n| permissions      | The permissions for each automation\n| usage_1h         | The number of times each automation has been used in the past hour\n| usage_24h        | The number of times each automation has been used in the past day\n| usage_7d         | The number of times each automation has been used in the past week\n| usage_30d        | The number of times each automation has been used in the past thirty days\n"
      operationId: "SearchAutomations"
      summary: "Search Automations"
  /api/v2/automations/update_many:
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AutomationsResponse"
      tags:
      - "Automations"
      description: "**Note**: You might be restricted from updating some default automations. If included in a bulk update, the unrestricted automations will be updated.\n\n#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe PUT request expects an `automations` object that lists the automations to update.\n\nEach automation may have the following properties:\n\n| Name     | Mandatory | Description\n| -------- | --------- | -----------\n| id       | yes       | The ID of the automation to update\n| position | no        | The new position of the automation\n| active   | no        | The active status of the automation (true or false)\n\n#### Example Request\n\n```js\n{\n  \"automations\": [\n    {\"id\": 25, \"position\": 3},\n    {\"id\": 23, \"position\": 5},\n    {\"id\": 27, \"position\": 9},\n    {\"id\": 22, \"position\": 7}\n  ]\n}\n```\n"
      operationId: "UpdateManyAutomations"
      summary: "Update Many Automations"
  /api/v2/automations/{automation_id}:
    parameters:
    - description: "The ID of the automation"
      in: "path"
      name: "automation_id"
      required: true
      type: "integer"
      x-example: 25
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Automations"
      description: "**Note**: You might be restricted from deleting some default automations.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "DeleteAutomation"
      summary: "Delete Automation"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AutomationResponse"
      tags:
      - "Automations"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "ShowAutomation"
      summary: "Show Automation"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/AutomationResponse"
      tags:
      - "Automations"
      description: "Updates an automation.\n\nUpdated automations must be unique and have at least one condition that is true only once or an action that nullifies at least one of the conditions. Active automations can have overlapping conditions but can't be identical.\n\nThe request must include the following conditions in the `all` array:\n- At least one time-based condition\n- At least one condition that checks one of the following fields: 'status', 'type', 'group_id', 'assignee_id', or 'requester_id'\n\n**Note**: Updating a condition or action updates both the `conditions` and `actions` arrays, clearing all existing values of both arrays. Include all your conditions and actions when updating any condition or action.\n**Note**: You might be restricted from updating some default automations.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "UpdateAutomation"
      summary: "Update Automation"
  /api/v2/bookmarks:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/BookmarksResponse"
      tags:
      - "Bookmarks"
      description: "#### Allowed For\n- Agents"
      operationId: "ListBookmarks"
      summary: "List Bookmarks"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/BookmarkCreateRequest"
      responses:
        200:
          description: "Successfully created"
          schema:
            $ref: "#/definitions/BookmarkResponse"
        201:
          description: "Successfully created"
          schema:
            $ref: "#/definitions/BookmarkResponse"
      tags:
      - "Bookmarks"
      description: "#### Allowed For\n- Agents"
      operationId: "CreateBookmark"
      summary: "Create Bookmark"
  /api/v2/bookmarks/{bookmark_id}:
    parameters:
    - description: "The ID of the bookmark"
      in: "path"
      name: "bookmark_id"
      required: true
      type: "integer"
      x-example: 900000001111
    delete:
      parameters: []
      responses:
        204:
          description: "No content"
      tags:
      - "Bookmarks"
      description: "#### Allowed For\n- Agents (own bookmarks only)\n\nIf the bookmark already exists with a specified ticket id, the response status will be `http Status: 200 OK`."
      operationId: "DeleteBookmark"
      summary: "Delete Bookmark"
  /api/v2/brands:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/BrandsResponse"
      tags:
      - "Brands"
      description: "Returns a list of all brands for your account sorted by name.\n\n#### Allowed for\n\n* Admins\n* Agents with the `assign_tickets_to_any_brand` permission can list all brands for the account\n* Agents without the `assign_tickets_to_any_brand` permission can only list brands they are members of\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/)."
      operationId: "ListBrands"
      summary: "List Brands"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/BrandCreateRequest"
      responses:
        201:
          description: "Successful response"
          schema:
            $ref: "#/definitions/BrandResponse"
      tags:
      - "Brands"
      description: "#### Allowed for\n- Admins"
      operationId: "CreateBrand"
      summary: "Create Brand"
  /api/v2/brands/check_host_mapping:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The hostmapping to a brand, if any (only admins view this key)"
        in: "query"
        name: "host_mapping"
        required: true
        type: "string"
        x-example: "brand1.com"
      - description: "Subdomain for a given Zendesk account address"
        in: "query"
        name: "subdomain"
        required: true
        type: "string"
        x-example: "Brand1"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/HostMappingObject"
      tags:
      - "Brands"
      description: "Returns a JSON object determining whether a host mapping is valid for a given subdomain.\n\n#### Allowed for\n\n* Admins"
      operationId: "CheckHostMappingValidity"
      summary: "Check Host Mapping Validity"
  /api/v2/brands/{brand_id}:
    delete:
      parameters:
      - description: "The ID of the brand"
        in: "path"
        name: "brand_id"
        required: true
        type: "integer"
        x-example: 360002783572
      responses:
        204:
          description: "No Content response"
      tags:
      - "Brands"
      description: "Deletes a brand.\n\n#### Allowed for\n- Admins"
      operationId: "DeleteBrand"
      summary: "Delete a Brand"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the brand"
        in: "path"
        name: "brand_id"
        required: true
        type: "integer"
        x-example: 360002783572
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/BrandResponse"
      tags:
      - "Brands"
      description: "Returns a brand for your account.\n\n#### Allowed for\n\n* Admins, Agents"
      operationId: "ShowBrand"
      summary: "Show a Brand"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "image/jpg"
      - "image/png"
      parameters:
      - description: "The ID of the brand"
        in: "path"
        name: "brand_id"
        required: true
        type: "integer"
        x-example: 360002783572
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/BrandUpdateRequest"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/BrandResponse"
      tags:
      - "Brands"
      description: "Returns an updated brand.\n\n#### Allowed for\n* Admins\n\n#### Updating a Brand's Image\nA brand image can be updated by uploading a local file using the update brand endpoint. See the **Using curl** sections below for more information."
      operationId: "UpdateBrand"
      summary: "Update a Brand"
  /api/v2/brands/{brand_id}/check_host_mapping:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the brand"
        in: "path"
        name: "brand_id"
        required: true
        type: "integer"
        x-example: 360002783572
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/HostMappingObject"
      tags:
      - "Brands"
      description: "Returns a JSON object determining whether a host mapping is valid for the given brand.\n\n#### Allowed for\n- Admins"
      operationId: "CheckHostMappingValidityForExistingBrand"
      summary: "Check Host Mapping Validity for an Existing Brand"
  /api/v2/channels/twitter/monitored_twitter_handles:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TwitterChannelsResponse"
      tags:
      - "X Channel"
      description: "#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ListMonitoredTwitterHandles"
      summary: "List Monitored X Handles"
  /api/v2/channels/twitter/monitored_twitter_handles/{monitored_twitter_handle_id}:
    parameters:
    - description: "The ID of the custom agent role"
      in: "path"
      name: "monitored_twitter_handle_id"
      required: true
      type: "integer"
      x-example: 431
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TwitterChannelResponse"
      tags:
      - "X Channel"
      description: "#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ShowMonitoredTwitterHandle"
      summary: "Show Monitored X Handle"
  /api/v2/channels/twitter/tickets:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "description"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "X Channel"
      description: "Turns a tweet into a ticket. You must provide the tweet id as well as the id of a monitored X (formerly Twitter) handle configured for your account.\n\nThe submitter of the ticket is set to be the user submitting the API request.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CreateTicketFromTweet"
      summary: "Create Ticket from Tweet"
  /api/v2/channels/twitter/tickets/{comment_id}/statuses:
    parameters:
    - description: "The ID of the comment"
      in: "path"
      name: "comment_id"
      required: true
      type: "integer"
      x-example: 654321
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Optional comment ids to retrieve tweet information for only particular comments"
        in: "query"
        name: "ids"
        type: "string"
        x-example: "1,3,5"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TwitterChannelTwicketStatusResponse"
      tags:
      - "X Channel"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "GettingTwicketStatus"
      summary: "List Ticket statuses"
  /api/v2/channels/voice/agents/{agent_id}/tickets/{ticket_id}/display:
    post:
      produces:
      - "application/json"
      parameters:
      - description: "ID of an agent"
        examples:
          default:
            value: 385473779372
        in: "path"
        name: "agent_id"
        required: true
        type: "integer"
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Successful response"
          schema:
            description: "empty"
            example: ""
            type: "string"
        404:
          description: "When the `agent_id` or `ticket_id` is invalid"
          schema:
            description: "Invalid attribute"
            example: ""
            type: "string"
      tags:
      - "Basics"
      description: "Allows you to instruct an agent's browser to open a ticket.\n\nWhen the message is successfully delivered to an agent's browser:\n\n```http\nStatus: 200 OK\n```\n\nWhen `agent_id` or `ticket_id` is invalid:\n\n```http\nStatus: 404 Not Found\n```\n\n#### Allowed For\n* Agents"
      operationId: "OpenTicketInAgentBrowser"
      summary: "Open Ticket in Agent's Browser"
  /api/v2/channels/voice/agents/{agent_id}/users/{user_id}/display:
    post:
      produces:
      - "application/json"
      parameters:
      - description: "ID of an agent"
        examples:
          default:
            value: 385473779372
        in: "path"
        name: "agent_id"
        required: true
        type: "integer"
      - description: "The id of the user"
        in: "path"
        name: "user_id"
        required: true
        type: "integer"
        x-example: 35436
      responses:
        200:
          description: "Successful response"
          schema:
            description: "empty"
            example: ""
            type: "string"
        404:
          description: "When the `agent_id` or `user_id` is invalid"
          schema:
            description: "Invalid attribute"
            example: ""
            type: "string"
      tags:
      - "Basics"
      description: "Allows you to instruct an agent's browser to open a user's profile.\n\nWhen the message is successfully delivered to an agent's browser:\n\n```http\nStatus: 200 OK\n```\n\nWhen `agent_id` or `user_id` is invalid:\n\n```http\nStatus: 404 Not Found\n```\n\n#### Allowed For\n* Agents"
      operationId: "OpenUsersProfileInAgentBrowser"
      summary: "Open a User's Profile in an Agent's Browser"
  /api/v2/channels/voice/tickets:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "ID of an agent"
        examples:
          default:
            value: 385473779372
        in: "path"
        name: "agent_id"
        required: true
        type: "integer"
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/TicketCreateVoicemailTicketRequest"
      responses:
        201:
          description: "Successful response"
          schema:
            $ref: "#/definitions/TicketResponse"
        404:
          description: "When the `agent_id` or `ticket_id` is invalid"
          schema:
            description: "Invalid attribute"
            example: ""
            type: "string"
      tags:
      - "Basics"
      description: "#### Allowed For\n* Agents\n\n### Creating tickets\n\n#### Introduction\n\nCreating tickets using Talk Partner Edition follows the same conventions as the Create Ticket endpoint. See [Create Ticket](/api-reference/ticketing/tickets/tickets/#create-ticket).\n\n#### Request parameters\n\nThe POST request takes a mandatory `ticket` object that lists the values to set when the ticket is created.\nYou may also include an optional `display_to_agent` value such as the ID of the agent that will see the newly created ticket.\n\nTickets created using this endpoint must have a `via_id` parameter. See the following\nsection for possible values.\n\n#### Zendesk Talk Integration Via IDs\n\nTickets created using this endpoint must have one of the following `via_id` parameters:\n\n| ID       | Description\n| ---------| -------------\n| 44       | Voicemail\n| 45       | Phone call (inbound)\n| 46       | Phone call (outbound)\n\n### Creating voicemail tickets\n#### Request parameters\n\nThe POST request takes a mandatory `ticket` object that lists the values to set when the ticket is created.\nThe ticket must have a `voice_comment` with the following values:\n\n| Name               | Type                  | Comment\n| ------------------ | ----------------------| -------\n| from               | string                | Incoming phone number\n| to                 | string                | Dialed phone number\n| recording_url      | string                | URL of the recording\n| started_at         | date                  | [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) timestamp of the call starting time\n| call_duration      | integer               | Duration in seconds of the call\n| answered_by_id     | integer               | The agent who answered the call\n| transcription_text | string                | Transcription of the call (optional)\n| location           | string                | Location of the caller (optional)"
      operationId: "CreateTicketOrVoicemailTicket"
      summary: "Create Ticket or Voicemail Ticket"
  /api/v2/chat_file_redactions/{ticket_id}:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketChatCommentRedactionResponse"
      tags:
      - "Ticket Comments"
      description: "Permanently removes one or more chat attachments from a chat ticket.\n\n**Note**: This does not work on active chats. For chat tickets that predate March 2020, consider using [Redact Ticket Comment In Agent Workspace](#redact-ticket-comment-in-agent-workspace).\n\n#### Allowed For\n\n- Agents\n\n[Agent Workspace](https://support.zendesk.com/hc/en-us/articles/360024218473) must enabled for the account. Deleting tickets must be enabled for agents.\n\n#### Request Body Properties\n\n| Name         | Type    | Required | Description                                                                                                                                                                                                                                            |\n| ------------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| chat_id      | string  | true     | The `chat_id` in the `ChatStartedEvent` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits)                                                                                                                 |\n| chat_indexes | array   | false    | The array of `chat_index` in the `ChatFileAttachment` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits). Mandatory if `message_ids` is not used                                                           |\n| message_ids  | array   | false    | The array of `message_id` in the `ChatFileAttachment` event in the ticket audit that is part of a `ChatStartedEvent` history. Used when redacting a ChatFileAttachment that is part of a conversation history. Mandatory if `chat_indexes` is not used |\n\nTo get the required body properties, make a request to the [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits) endpoint. Example response:\n\n```http\nStatus 200 OK\n{\n  \"audits\": [\n    \"events\": [\n      {\n        \"id\": 1932802680168,\n        \"type\": \"ChatStartedEvent\",\n        \"value\": {\n          \"visitor_id\": \"10502823-16EkM3T6VNq7KMd\",\n          \"chat_id\": \"2109.10502823.Sjuj2YrBpXwei\",\n          \"history\": [\n            {\n              \"chat_index\": 0,\n              \"type\": \"ChatFileAttachment\",\n              \"filename\": \"image1.jpg\"\n            },\n            {\n              \"chat_index\": 1,\n              \"type\": \"ChatFileAttachment\",\n              \"filename\": \"image2.jpg\"\n            }\n          ]\n        }\n      }\n    ]\n  ]\n}\n```\n"
      operationId: "RedactChatCommentAttachment"
      summary: "Redact Chat Comment Attachment"
  /api/v2/chat_redactions/{ticket_id}:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketChatCommentRedactionResponse"
      tags:
      - "Ticket Comments"
      description: "Permanently removes words or strings from a chat ticket's comment. \n\nWrap `<redact>` tags around the content in the chat comment you want redacted. Example: \n\n```json\n{\n  \"text\": \"My ID number is <redact>847564</redact>!\"\n}\n```\n\nThe characters contained in the tag will be replaced by the ▇ symbol.\n\n**Note**: This does not work on active chats. For chat tickets that predate March 2020, consider using [Redact Ticket Comment In Agent Workspace](#redact-ticket-comment-in-agent-workspace).\n\n#### Allowed For\n\n- Agents\n\n[Agent Workspace](https://support.zendesk.com/hc/en-us/articles/360024218473) must enabled for the account. Deleting tickets must be enabled for agents.\n\n#### Request Body Properties\n\n| Name                     | Type    | Required | Description                                                                                                                                                                                                                                       |\n| ------------------------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| chat_id                  | string  | true     | The `chat_id` in the `ChatStartedEvent` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits)                                                                                                            |\n| chat_index               | integer | false    | The `chat_index` in the `ChatMessage` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits). Mandatory if `message_id` is not used                                                                       |\n| message_id               | string  | false    | The `message_id` of the `ChatMessage` event in the ticket audit that is part of a `ChatStartedEvent` history. Used when redacting a ChatMessage that is part of a conversation history. Mandatory if `chat_index` is not used                     |\n| text                     | string  | true     | The `message` in the `ChatMessage` event in the ticket audit. See [Ticket Audits](/api-reference/ticketing/tickets/ticket_audits).  Wrap `message` with `<redact>` tags                                                                           |\n\nTo get the required body properties, make a request to the [Ticket Audit](/api-reference/ticketing/tickets/ticket_audits) endpoint. Example response:\n\n```http\nStatus 200 OK\n{\n  \"audits\": [\n    \"events\": [\n      {\n        \"id\": 1932802680168,\n        \"type\": \"ChatStartedEvent\",\n        \"value\": {\n          \"visitor_id\": \"10502823-16EkM3T6VNq7KMd\",\n          \"chat_id\": \"2109.10502823.Sjuj2YrBpXwei\",\n          \"history\": [\n            {\n              \"chat_index\": 0,\n              \"type\": \"ChatMessage\",\n              \"message\": \"My ID number is 847564!\"\n            }\n          ]\n        }\n      }\n    ]\n  ]\n}\n```\n"
      operationId: "RedactChatComment"
      summary: "Redact Chat Comment"
  /api/v2/comment_redactions/{ticket_comment_id}:
    parameters:
    - description: "The ID of the ticket comment"
      in: "path"
      name: "ticket_comment_id"
      required: true
      type: "integer"
      x-example: 35436
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketCommentResponse"
      tags:
      - "Ticket Comments"
      description: "Redaction allows you to permanently remove words, strings, or attachments from a ticket comment.\n\nIn the `html_body` of the comment, wrap the content you want redacted in `<redact>` tags. Example:\n\n```json\n{\n  \"html_body\": \"<div class=\\\"zd-comment\\\" dir=\\\"auto\\\">My ID number is <redact>847564</redact>!</div>\",\n  \"ticket_id\":100\n}\n```\n\nThe characters in the redact tag will be replaced by the ▇ symbol.\n\nTo redact HTML elements such inline images, anchor tags, and links, add the `redact` tag attribute to the element as well as the `<redact>` tag to inner text, if any. Example: \n\n`<a href=\"http://example.com\" redact><redact>some link</redact></a>`\n\nThe `redact` attribute only redacts the tag. Any inner text will be left behind if not enclosed in a `<redact>` tag.\n\nRedaction is permanent and can not be undone. Data is permanently deleted from Zendesk servers with no way to recover it.\n\nThis endpoint provides all the same functionality that the [Redact String in Comment](/api-reference/ticketing/tickets/ticket_comments/#redact-string-in-comment) endpoint provides, plus:\n\n- Redaction of comments in closed tickets\n\n- Redaction of comments in archived tickets\n\n- Redaction of formatted text (bold, italics, hyperlinks)\n\n**Limitations**: When content is redacted from an email comment, the content is also redacted from the original email through a background job. It may take a while for the changes to be completed.\n\n**Note**: We recommend using this endpoint instead of the [Redact String in Comment](/api-reference/ticketing/tickets/ticket_comments/#redact-string-in-comment) endpoint, which will eventually be deprecated.\n\n#### Allowed For\n\n- Agents\n\n[Agent Workspace](https://support.zendesk.com/hc/en-us/articles/360024218473) must be enabled on the account. For professional accounts, deleting tickets must be enabled for agents. On Enterprise accounts, you can assign agents to a custom role with permissions to redact ticket content.\n\n#### Request Body Properties\n\n| Name                     | Type    | Required | Description                                                                                                                                      |\n| -------------------------| ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------ |\n| ticket_id                | integer | true     | The ID of the ticket                                                                                                                             |\n| html_body                | string  | false    | The `html_body` of the comment containing `<redact>` tags or `redact` attributes                                           |\n| external_attachment_urls | array   | false    | Array of attachment URLs belonging to the comment to be redacted. See [`content_url` property of Attachment](/api-reference/ticketing/tickets/ticket-attachments/) |\n"
      operationId: "RedactTicketCommentInAgentWorkspace"
      summary: "Redact Ticket Comment In Agent Workspace"
  /api/v2/custom_objects:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectsResponse"
      tags:
      - "Custom Objects"
      description: "Lists all undeleted custom objects for the account\n#### Allowed For\n* Agents"
      operationId: "ListCustomObjects"
      summary: "List Custom Objects"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/CustomObjectsCreateRequest"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/CustomObjectResponse"
      tags:
      - "Custom Objects"
      description: "Creates an object describing all the properties required to create a custom object record\n#### Allowed For\n* Admins\n"
      operationId: "CreateCustomObject"
      summary: "Create Custom Object"
  /api/v2/custom_objects/limits/object_limit:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectLimitsResponse"
      tags:
      - "Custom Objects"
      description: "List the current count and the limit for custom objects\n#### Allowed For\n* Admins"
      operationId: "CustomObjectsLimit"
      summary: "Custom Objects Limit"
  /api/v2/custom_objects/limits/record_limit:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectLimitsResponse"
      tags:
      - "Custom Object Records"
      description: "List the current count and the limit for custom object records\n#### Allowed For\n* Agents"
      operationId: "CustomObjectRecordsLimit"
      summary: "Custom Object Records Limit"
  /api/v2/custom_objects/{custom_object_key}:
    delete:
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      responses:
        204:
          description: "No content response"
      tags:
      - "Custom Objects"
      description: "Permanently deletes the custom object with the specified key\n#### Allowed For\n* Admins"
      operationId: "DeleteCustomObject"
      summary: "Delete Custom Object"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      responses:
        200:
          description: "Custom Object"
          schema:
            $ref: "#/definitions/CustomObjectResponse"
      tags:
      - "Custom Objects"
      description: "Returns an object with the specified key\n#### Allowed For\n* Agents\n"
      operationId: "ShowCustomObject"
      summary: "Show Custom Object"
    patch:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectResponse"
      tags:
      - "Custom Objects"
      description: "Updates an individual custom object. The updating rules are as follows:\n* Takes a `custom_object` object that specifies the properties to update\n* The `key` property cannot be updated\n#### Allowed For\n* Admins"
      operationId: "UpdateCustomObject"
      summary: "Update Custom Object"
  /api/v2/custom_objects/{custom_object_key}/fields:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "Include standard fields if true. Exclude them if false"
        in: "query"
        name: "include_standard_fields"
        type: "boolean"
        x-example: true
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectFieldsResponse"
      tags:
      - "Custom Object Fields"
      description: "Lists all undeleted custom fields for the specified object.\n\n#### Allowed For\n* Agents\n\n#### Pagination\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/)."
      operationId: "ListCustomObjectFields"
      summary: "List Custom Object Fields"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/CustomObjectFieldsCreateRequest"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/CustomObjectFieldResponse"
      tags:
      - "Custom Object Fields"
      description: "Creates any of the following custom field types:\n\n* text (default when no \"type\" is specified)\n* textarea\n* checkbox\n* date\n* integer\n* decimal\n* regexp\n* dropdown\n* lookup\n* multiselect\n\nSee [About custom field types](https://support.zendesk.com/hc/en-us/articles/203661866) in Zendesk help.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateCustomObjectField"
      summary: "Create Custom Object Field"
  /api/v2/custom_objects/{custom_object_key}/fields/reorder:
    put:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      responses:
        200:
          description: "Reordered"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Custom Object Fields"
      description: "Sets a preferred order of custom fields for a specific object by providing field ids in the desired order.\n#### Allowed For\n\n* Admins\n"
      operationId: "ReorderCustomObjectFields"
      summary: "Reorder Custom Fields of an Object"
  /api/v2/custom_objects/{custom_object_key}/fields/{custom_object_field_key_or_id}:
    delete:
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The key or id of a custom object field"
        in: "path"
        name: "custom_object_field_key_or_id"
        required: true
        type: "string"
        x-example: "make"
      responses:
        204:
          description: "No content response"
      tags:
      - "Custom Object Fields"
      description: "Deletes a field with the specified key. Note: You can't delete standard fields.\n#### Allowed For\n* Admins"
      operationId: "DeleteCustomObjectField"
      summary: "Delete Custom Object Field"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The key or id of a custom object field"
        in: "path"
        name: "custom_object_field_key_or_id"
        required: true
        type: "string"
        x-example: "make"
      responses:
        200:
          description: "Custom Object Field"
          schema:
            $ref: "#/definitions/CustomObjectFieldResponse"
      tags:
      - "Custom Object Fields"
      description: "Returns a custom field for a specific object using a provided key or id of the field.\n#### Allowed For\n* Agents\n"
      operationId: "ShowCustomObjectField"
      summary: "Show Custom Object Field"
    patch:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The key or id of a custom object field"
        in: "path"
        name: "custom_object_field_key_or_id"
        required: true
        type: "string"
        x-example: "make"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectFieldResponse"
      tags:
      - "Custom Object Fields"
      description: "Updates individual custom object fields. The updating rules are as follows:\n* Takes a `custom_object_field` object that specifies the properties to update\n* The `key` property cannot be updated\n* If updating a standard field, only the `title` and `description` properties can be updated.\n#### Allowed For\n* Admins"
      operationId: "UpdateCustomObjectField"
      summary: "Update Custom Object Field"
  /api/v2/custom_objects/{custom_object_key}/jobs:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/CustomObjectRecordsBulkCreateRequest"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/CustomObjectRecordsJobsResponse"
      tags:
      - "Custom Object Records"
      description: "Queues a background job to perform bulk actions on up to 100 custom object records per single request.\nTakes a `job` object with two nested fields:\n* `action`, one of:\n    * `\"create\"`\n    * `\"delete\"`\n    * `\"delete_by_external_id\"`\n    * `\"create_or_update_by_external_id\"`\n    * `\"update\"`\n* `items`\n    * For a `\"create\"` action, an array of JSON objects representing the custom object records being created\n    * For a `\"delete\"` action, an array of strings representing Zendesk record ids\n    * For a `\"delete_by_external_id\"` action, an array of strings representing external ids\n    * For a `\"create_or_update_by_external_id\"` action, an array of JSON objects representing the custom object records being created or updated\n    * For an `\"update\"` action, an array of JSON objects representing the custom object records being updated\n\n#### Allowed For\n* Agents\n\n#### Response ###\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n"
      operationId: "CustomObjectRecordBulkJobs"
      summary: "Custom Object Record Bulk Jobs"
  /api/v2/custom_objects/{custom_object_key}/limits/field_limit:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectLimitsResponse"
      tags:
      - "Custom Object Fields"
      description: "List the current count and the limit for a custom object's fields\n#### Allowed For\n* Agents"
      operationId: "CustomObjectFieldsLimit"
      summary: "Custom Object Fields Limit"
  /api/v2/custom_objects/{custom_object_key}/records:
    delete:
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The external id of a custom object record"
        in: "query"
        name: "external_id"
        required: true
        type: "string"
        x-example: "X90001"
      responses:
        204:
          description: "No content response"
      tags:
      - "Custom Object Records"
      description: "Deletes a record with the specified external id.\n#### Allowed For\n* Agents\n"
      operationId: "DeleteCustomObjectRecordByExternalId"
      summary: "Delete Custom Object Record by External Id"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "Optional comma-separated list of ids to filter records by. If one or more ids are specified, only matching records are returned. The ids must be unique and are case sensitive."
        examples:
          multipleIds:
            summary: "Example of multiple ids"
            value: "id_1,id_2,id_3"
          oneId:
            summary: "Example of a single id"
            value: "id_1"
        in: "query"
        name: "filter[ids]"
        type: "string"
      - description: "Optional comma-separated list of external ids to filter records by. If one or more ids are specified, only matching records are returned. The ids must be unique and are case sensitive."
        examples:
          multipleIds:
            summary: "Example of multiple ids"
            value: "ex_id_1,ex_id_2,ex_id_3"
          oneId:
            summary: "Example of a single id"
            value: "ex_id_1"
        in: "query"
        name: "filter[external_ids]"
        type: "string"
      - description: "One of `id`, `updated_at`, `-id`, or `-updated_at`. The `-` denotes the sort will be descending.\n"
        in: "query"
        name: "sort"
        type: "string"
      - description: "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
        in: "query"
        name: "page[before]"
        type: "string"
      - description: "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
        in: "query"
        name: "page[after]"
        type: "string"
      - description: "Specifies how many records should be returned in the response. You can specify up to 100 records per page.\n"
        in: "query"
        name: "page[size]"
        type: "integer"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectRecordsResponse"
      tags:
      - "Custom Object Records"
      description: "Lists all undeleted custom object records for the specified object\n\n #### Pagination\n\n* [Cursor pagination](/api-reference/introduction/pagination/#cursor-pagination) only.\n#### Allowed For\n* Agents"
      operationId: "ListCustomObjectRecords"
      summary: "List Custom Object Records"
    patch:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The external id of a custom object record"
        in: "query"
        name: "external_id"
        required: true
        type: "string"
        x-example: "X90001"
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/CustomObjectRecordsUpsertRequest"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/CustomObjectRecordResponse"
      tags:
      - "Custom Object Records"
      description: "If a record exists for the given external id, updates it. Only the specified attributes are updated. Otherwise, creates a new record with the provided external id and attributes.\n#### Allowed For\n* Agents\n"
      operationId: "UpsertCustomObjectRecord"
      summary: "Set Custom Object Record by External Id"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/CustomObjectRecordsCreateRequest"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/CustomObjectRecordResponse"
      tags:
      - "Custom Object Records"
      description: "Creates a custom object record according to all the properties described by a custom object definition\n#### Allowed For\n* Agents\n"
      operationId: "CreateCustomObjectRecord"
      summary: "Create Custom Object Record"
  /api/v2/custom_objects/{custom_object_key}/records/autocomplete:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "Part of a name of the record you are searching for"
        in: "query"
        name: "name"
        type: "string"
      - description: "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
        in: "query"
        name: "page[before]"
        type: "string"
      - description: "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
        in: "query"
        name: "page[after]"
        type: "string"
      - description: "The number of records to return in the response. You can specify up to 100 records per page.\n"
        in: "query"
        name: "page[size]"
        type: "integer"
      - description: "The id of the lookup field. If the field has a relationship filter, the filter is applied to the results. Must be used with `source` param.\n"
        in: "query"
        name: "field_id"
        type: "string"
      - description: "One of \"zen:user\", \"zen:ticket\", \"zen:organization\", or \"zen:custom_object:CUSTOM_OBJECT_KEY\". Represents the object `field_id` belongs to. Must be used with field_id param.\n"
        in: "query"
        name: "source"
        type: "string"
      - description: "The id of the requester. For use with dynamic filters.\n"
        in: "query"
        name: "requester_id"
        type: "integer"
        x-example: 264817272
      - description: "The id of the selected assignee. For use with dynamic filters.\n"
        in: "query"
        name: "assignee_id"
        type: "integer"
        x-example: 7334148660734
      - description: "The id of the organization the requester belongs to. For use with dynamic filters.\n"
        in: "query"
        name: "organization_id"
        type: "integer"
        x-example: 5633330889598
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectRecordsResponse"
      tags:
      - "Custom Object Records"
      description: "Retrieves an array of custom object records that have a field value that matches the value specified in the `name` parameter.\n\n#### Pagination\n\n* [Cursor pagination](/api-reference/introduction/pagination/#cursor-pagination) only.\n* Returns the first 10,000 records sorted by relevancy with page limits.\n#### Allowed For\n* Agents"
      operationId: "AutocompleteCustomObjectRecordSearch"
      summary: "Autocomplete Custom Object Record Search"
  /api/v2/custom_objects/{custom_object_key}/records/count:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      responses:
        200:
          description: "Success response"
          schema:
            properties:
              count:
                additionalProperties:
                  properties:
                    refreshed_at:
                      description: "The time the last count was performed"
                      format: "date-time"
                      readOnly: true
                      type: "string"
                    value:
                      description: "Number of records at the time of the latest count operation"
                      readOnly: true
                      type: "integer"
                type: "object"
            type: "object"
      tags:
      - "Custom Object Records"
      description: "Returns a total count of records for a specific custom object as well as the time the count was refreshed.\n#### Allowed For\n* Agents"
      operationId: "CountCustomObjectRecords"
      summary: "Count Custom Object Records"
  /api/v2/custom_objects/{custom_object_key}/records/search:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The query parameter is used to search text-based fields for records that match specific query terms.\nThe query can be multiple words or numbers. Every record that matches the beginning of any word or number in the query string is returned.<br/><br/>\n\nFuzzy search is supported for the following text-based field types: : Text fields, Multi Line Text fields, and RegExp fields.<br/><br/>\n\nFor example, you might want to search for records related to Tesla vehicles: `query=Tesla`. In this example the API would return every record for the given custom object where any of the supported text fields contain the word 'Tesla'.<br/><br/>\n\nYou can include multiple words or numbers in your search. For example: `query=Tesla Honda 2020`. This search phrase would be URL encoded as `query=Tesla%20Honda%202020` and return every record for the custom object for which any of the supported text fields contained 'Tesla', 'Honda', or '2020'.\n"
        in: "query"
        name: "query"
        type: "string"
        x-example: "jdoe"
      - description: "One of `name`, `created_at`, `updated_at`, `-name`, `-created_at`, or `-updated_at`. The `-` denotes the sort will be descending. Defaults to sorting by relevance.\n"
        in: "query"
        name: "sort"
        type: "string"
      - description: "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
        in: "query"
        name: "page[before]"
        type: "string"
      - description: "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
        in: "query"
        name: "page[after]"
        type: "string"
      - description: "Specifies how many records should be returned in the response. You can specify up to 100 records per page.\n"
        in: "query"
        name: "page[size]"
        type: "integer"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectRecordsResponse"
      tags:
      - "Custom Object Records"
      description: "Returns an array of custom object records that meet the search criteria\n\n#### Pagination\n\n* [Cursor pagination](/api-reference/introduction/pagination/#cursor-pagination) only.\n* Returns the records sorted by relevancy with page limits. Without a `sort` parameter, only the first 10,000 records are returned. With a `sort` parameter, all records are returned.\n#### Allowed For\n* Agents"
      operationId: "SearchCustomObjectRecords"
      summary: "Search Custom Object Records"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The query parameter is used to search text-based fields for records that match specific query terms.\nThe query can be multiple words or numbers. Every record that matches the beginning of any word or number in the query string is returned.<br/><br/>\n\nFuzzy search is supported for the following text-based field types: Text fields, Multi Line Text fields, and RegExp fields.<br/><br/>\n\nFor example, you might want to search for records related to Tesla vehicles: `query=Tesla`. In this example the API would return every record for the given custom object where any of the supported text fields contain the word 'Tesla'.<br/><br/>\n\nYou can include multiple words or numbers in your search. For example: `query=Tesla Honda 2020`. This search phrase would be URL encoded as `query=Tesla%20Honda%202020` and return every record for the custom object for which any of the supported text fields contained 'Tesla', 'Honda', or '2020'.\n"
        in: "query"
        name: "query"
        type: "string"
        x-example: "jdoe"
      - description: "One of `name`, `created_at`, `updated_at`, `-name`, `-created_at`, or `-updated_at`. The `-` denotes the sort will be descending. Defaults to sorting by relevance.\n"
        in: "query"
        name: "sort"
        type: "string"
      - description: "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.before_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
        in: "query"
        name: "page[before]"
        type: "string"
      - description: "A [pagination cursor](/documentation/api-basics/pagination/paginating-through-lists-using-cursor-pagination) that tells the endpoint which page to start on. It should be a `meta.after_cursor` value from a previous request. Note: `page[before]` and `page[after]` can't be used together in the same request.\n"
        in: "query"
        name: "page[after]"
        type: "string"
      - description: "Specifies how many records should be returned in the response. You can specify up to 100 records per page.\n"
        in: "query"
        name: "page[size]"
        type: "integer"
      - in: "body"
        name: "body"
        schema: {}
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectRecordsResponse"
      tags:
      - "Custom Object Records"
      description: "Returns an array of custom object records that meet the search and filter criteria.\n\nFilters can contain either an individual [comparison object](#comparison-object) or an array of [comparison objects](#comparison-object) within logical namespaces.\n\nA filter is a JSON object that has the following properties:\n\n| Name      | Type   | Required | Description\n| --------- | ------ | -------- | -----------\n| ATTRIBUTE | object | no       | A [comparison object](#comparison-object) specifying an attribute value condition to be met for records to match.<br/><br/>Examples are marked below.\n| $and      | array  | no       | Array of conjunctive filter objects (logical AND)\n| $or       | array  | no       | Array of conjunctive filter objects (logical OR)\n\n##### Examples\n\n\n```js\n{\n  \"filter\": {\n    \"custom_object_fields.field_key\": { \"$eq\": \"value\" } // ATTRIBUTE\n  }\n}\n```\n\n```js\n// $or\n{\n  \"filter\": {\n    \"$or\": [\n      { \"custom_object_fields.field_key\": { \"$eq\": \"value\" } }, // ATTRIBUTE\n      { \"external_id\": { \"$eq\": \"Record123\" } } // ATTRIBUTE\n    ]\n  }\n}\n```\n\n#### Comparison Object\n\nA comparison object defines a condition a record must meet to be considered a match. The condition is based on an attribute value or object type.\n\nA comparison object is a JSON object that has the following properties:\n\n| Name      | Type          | Required | Description\n| --------- | ------------- | -------- | -----------\n| FIELD_KEY | string        | yes      | When filtering on a custom field, they must be namedspaced with `custom_object_fields.`. ex. `custom_object_fields.field_key`<br/><br/>When filtering on a standard field, no namespace is required. The following fields are considered standard: `created_at`, `updated_at`, `created_by_user`, `updated_by_user`, `name`, `external_id`\n| OPERATOR  | string        | yes      | [Supported operators](/documentation/custom-data/v2/searching-custom-object-records/) vary by the value's data type\n| VALUE     | string, array | yes      | The value you're filtering for\n\n#### Pagination\n\n* [Cursor pagination](/api-reference/introduction/pagination/#cursor-pagination) only.\n* Returns the records sorted by relevancy with page limits. Without a `sort` parameter, only the first 10,000 records are returned. With a `sort` parameter, all records are returned.\n\n#### Allowed For\n\n* Agents\n* End users (when an admin [configures](https://support.zendesk.com/hc/en-us/articles/6034260247066) the custom object to be accessible to end users)"
      operationId: "FilteredSearchCustomObjectRecords"
      summary: "Filtered Search of Custom Object Records"
  /api/v2/custom_objects/{custom_object_key}/records/{custom_object_record_id}:
    delete:
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The id of a custom object record"
        in: "path"
        name: "custom_object_record_id"
        required: true
        type: "string"
        x-example: "01GCSJW391QVSC80GYDH7E93Q6"
      responses:
        204:
          description: "No content response"
      tags:
      - "Custom Object Records"
      description: "Deletes a record with the specified id\n#### Allowed For\n* Agents"
      operationId: "DeleteCustomObjectRecord"
      summary: "Delete Custom Object Record"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The id of a custom object record"
        in: "path"
        name: "custom_object_record_id"
        required: true
        type: "string"
        x-example: "01GCSJW391QVSC80GYDH7E93Q6"
      responses:
        200:
          description: "Custom Object Record"
          schema:
            $ref: "#/definitions/CustomObjectRecordResponse"
      tags:
      - "Custom Object Records"
      description: "Returns a custom record for a specific object using a provided id.\n#### Allowed For\n* Agents\n"
      operationId: "ShowCustomObjectRecord"
      summary: "Show Custom Object Record"
    patch:
      produces:
      - "application/json"
      parameters:
      - description: "The key of a custom object"
        in: "path"
        name: "custom_object_key"
        required: true
        type: "string"
        x-example: "car"
      - description: "The id of a custom object record"
        in: "path"
        name: "custom_object_record_id"
        required: true
        type: "string"
        x-example: "01GCSJW391QVSC80GYDH7E93Q6"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomObjectRecordResponse"
      tags:
      - "Custom Object Records"
      description: "Updates an individual custom object record. The updating rules are as follows:\n* Takes a `custom_object_record` object that specifies the properties to update\n* The custom object fields should be nested inside a `custom_object_fields` object\n#### Allowed For\n* Agents"
      operationId: "UpdateCustomObjectRecord"
      summary: "Update Custom Object Record"
  /api/v2/custom_objects/{custom_object_key}/triggers:
    parameters:
    - description: "The key of a custom object"
      in: "path"
      name: "custom_object_key"
      required: true
      type: "string"
      x-example: "car"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Filter by active triggers if true or inactive triggers if false"
        in: "query"
        name: "active"
        type: "boolean"
        x-example: true
      - description: "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
        in: "query"
        name: "sort_by"
        type: "string"
        x-example: "position"
      - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
        in: "query"
        name: "sort_order"
        type: "string"
        x-example: "desc"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ObjectTriggersResponse"
      tags:
      - "Object Triggers"
      description: "Lists all triggers for the specified custom object.\n\n#### Allowed For \n* Agents\n"
      operationId: "ListObjectTriggers"
      summary: "List Object Triggers"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ObjectTriggerRequest"
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/ObjectTriggerResponse"
      tags:
      - "Object Triggers"
      description: "Creates a new object trigger for a specified object.\n\n#### Allowed For\n\n* Administrators\n* Agents in custom roles with the `manage_triggers` permission (Enterprise only)\n"
      operationId: "CreateObjectTrigger"
      summary: "Create Object Trigger"
  /api/v2/custom_objects/{custom_object_key}/triggers/active:
    parameters:
    - description: "The key of a custom object"
      in: "path"
      name: "custom_object_key"
      required: true
      type: "string"
      x-example: "car"
    - description: "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "position"
    - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "desc"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ObjectTriggersResponse"
      tags:
      - "Object Triggers"
      description: "Lists all active object triggers.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Administrators\n* Agents in custom roles with the `manage_triggers` permission (Enterprise only)\n"
      operationId: "ListActiveObjectTriggers"
      summary: "List Active Object Triggers"
  /api/v2/custom_objects/{custom_object_key}/triggers/definitions:
    parameters:
    - description: "The key of a custom object"
      in: "path"
      name: "custom_object_key"
      required: true
      type: "string"
      x-example: "car"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ObjectTriggerDefinitionResponse"
      tags:
      - "Object Triggers"
      description: "Lists the conditions and actions of all triggers for the specified custom object.\n\n#### Allowed For \n* Agents\n"
      operationId: "ListObjectTriggersDefinitions"
      summary: "List Object Trigger Action and Condition Definitions"
  /api/v2/custom_objects/{custom_object_key}/triggers/destroy_many:
    parameters:
    - description: "The key of a custom object"
      in: "path"
      name: "custom_object_key"
      required: true
      type: "string"
      x-example: "car"
    - description: "A comma separated list of trigger IDs"
      in: "query"
      name: "ids"
      required: true
      type: "string"
      x-example: "131,178,938"
    delete:
      parameters: []
      responses:
        204:
          description: "No content response"
      tags:
      - "Object Triggers"
      description: "Deletes the object triggers corresponding to the provided comma-separated list of ids. \n\n**Note**: You can only bulk-delete triggers associated with one object at a time, specified by the `custom_object_key` in the request.\n\n#### Allowed For\n\n* Administrators\n* Agents in custom roles with the `manage_triggers` permission (Enterprise only)\n\n#### Request Parameters\n\nThe DELETE request takes an `ids` object that lists the\nobject triggers to delete. All of the specified object trigger `ids` must be associated with a single object.\n\n| Name | Description\n| ---- | -----------\n| ids  | The ids of the triggers to delete\n\n#### Example request\n\n```js\n{\n  \"ids\": \"25,23,27,22\"\n}\n```\n"
      operationId: "DeleteManyObjectTriggers"
      summary: "Delete Many Object Triggers"
  /api/v2/custom_objects/{custom_object_key}/triggers/search:
    parameters:
    - description: "The key of a custom object"
      in: "path"
      name: "custom_object_key"
      required: true
      type: "string"
      x-example: "car"
    - description: "Query string used to find all triggers with matching title"
      in: "query"
      name: "query"
      required: true
      type: "string"
      x-example: "important_trigger"
    - description: "Trigger attribute filters for the search. See [Filter](#filter)"
      in: "query"
      name: "filter"
      type: "object"
    - description: "Filter by active triggers if true or inactive triggers if false"
      in: "query"
      name: "active"
      type: "boolean"
      x-example: true
    - description: "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
      in: "query"
      name: "sort"
      type: "string"
      x-example: "position"
    - description: "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "position"
    - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "desc"
    - description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
      in: "query"
      name: "include"
      type: "string"
      x-example: "usage_24h"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ObjectTriggersResponse"
      tags:
      - "Object Triggers"
      description: "Returns a list of object triggers that meet your filter or search criteria.\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n\n#### Filter\n\nUse the `filter` query parameter to filter an object trigger search by one or more attributes. For example, the following `filter` argument filters object triggers by the `title` attribute:\n\n```json\n{\n  \"json\": {\n    \"title\": \"test\"\n  }\n}\n```\n"
      operationId: "SearchObjectTriggers"
      summary: "Search Object Triggers"
  /api/v2/custom_objects/{custom_object_key}/triggers/update_many:
    parameters:
    - description: "The key of a custom object"
      in: "path"
      name: "custom_object_key"
      required: true
      type: "string"
      x-example: "car"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ObjectTriggerBulkUpdateRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ObjectTriggersResponse"
      tags:
      - "Object Triggers"
      description: "Updates the position or the active status of multiple object triggers. Any additional properties are ignored.\n\n**Note**: You can only bulk-update triggers associated with one object at a time, specified by the `custom_object_key` in the request.\n\n#### Allowed For\n\n* Administrators\n* Agents in custom roles with the `manage_triggers` permission (Enterprise only)\n\n#### Request Parameters\n\nThe PUT request expects a `triggers` object that lists the object triggers to update. All of the specified object trigger `ids` must be associated with a single object.\n\nYou can specify the following properties for each object trigger you're updating:\n\n| Name        | Mandatory | Description\n| --------    | --------- | -----------\n| id          | yes       | The ID of the object trigger to update\n| position    | no        | The new position of the object trigger\n| active      | no        | The active status of the object trigger (true or false)\n\n#### Example Request\n\n```js\n{\n  \"triggers\": [\n    {\"id\": 25, \"position\": 3},\n    {\"id\": 23, \"active\": true},\n    {\"id\": 27, \"position\": 9, \"active\": false},\n    {\"id\": 22, \"position\": 7}\n  ]\n}\n```\n"
      operationId: "UpdateManyObjectTriggers"
      summary: "Update Many Object Triggers"
  /api/v2/custom_objects/{custom_object_key}/triggers/{trigger_id}:
    parameters:
    - description: "The key of a custom object"
      in: "path"
      name: "custom_object_key"
      required: true
      type: "string"
      x-example: "car"
    - description: "The ID of the trigger"
      in: "path"
      name: "trigger_id"
      required: true
      type: "integer"
      x-example: 198
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Object Triggers"
      description: "Deletes a specified object trigger.\n\n#### Allowed For\n\n* Administrators\n* Agents in custom roles with the `manage_triggers` permission (Enterprise only)\n"
      operationId: "DeleteObjectTrigger"
      summary: "Delete Object Trigger"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ObjectTriggerResponse"
      tags:
      - "Object Triggers"
      description: "Returns details of a specific object trigger.\n#### Allowed For\n\n* Agents\n"
      operationId: "GetObjectTrigger"
      summary: "Show Object Trigger"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ObjectTriggerRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ObjectTriggerResponse"
      tags:
      - "Object Triggers"
      description: "Updates a specified object trigger.\n\n**Note**: Updating a condition or action updates both the conditions and actions arrays,\nclearing all existing values of both arrays. Include all your conditions\nand actions when updating any condition or action.\n\n#### Allowed For\n\n* Administrators\n* Agents in custom roles with the `manage_triggers` permission (Enterprise only)\n"
      operationId: "UpdateObjectTrigger"
      summary: "Update Object Trigger"
  /api/v2/custom_roles:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomRolesResponse"
      tags:
      - "Custom Roles"
      description: "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListCustomRoles"
      summary: "List Custom Roles"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Created response"
          schema:
            $ref: "#/definitions/CustomRoleResponse"
      tags:
      - "Custom Roles"
      description: "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed for\n\n* Administrators\n* Agents with the `manage_roles` permission\n"
      operationId: "CreateCustomRole"
      summary: "Create Custom Role"
  /api/v2/custom_roles/{custom_role_id}:
    parameters:
    - description: "The ID of the custom agent role"
      in: "path"
      name: "custom_role_id"
      required: true
      type: "integer"
      x-example: 10127
    delete:
      parameters: []
      responses:
        204:
          description: "No Contetnt response"
      tags:
      - "Custom Roles"
      description: "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed for\n\n* Administrators\n* Agents with the `manage_roles` permission\n"
      operationId: "DeleteCustomRoleById"
      summary: "Delete Custom Role"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomRoleResponse"
      tags:
      - "Custom Roles"
      description: "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed for\n\n* Administrators\n* Agents with the `manage_roles` permission\n"
      operationId: "ShowCustomRoleById"
      summary: "Show Custom Role"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomRoleResponse"
      tags:
      - "Custom Roles"
      description: "#### Availability\n\n* Accounts on the Enterprise plan or above\n\n#### Allowed for\n\n* Administrators\nAgents with the `manage_roles` permission\n"
      operationId: "UpdateCustomRoleById"
      summary: "Update Custom Role"
  /api/v2/custom_status/default:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/BulkUpdateDefaultCustomStatusRequest"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/BulkUpdateDefaultCustomStatusResponse"
      tags:
      - "Custom Ticket Statuses"
      description: "Updates the default values for many custom ticket statuses at once.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "BulkUpdateDefaultCustomStatus"
      summary: "Bulk Update Default Custom Ticket Status"
  /api/v2/custom_statuses:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Filter the list of custom ticket statuses by a comma-separated list of status categories"
        in: "query"
        name: "status_categories"
        type: "string"
      - description: "If true, show only active custom ticket statuses. If false, show only inactive custom ticket statuses. If the filter is not used, show all custom ticket statuses"
        in: "query"
        name: "active"
        type: "boolean"
      - description: "If true, show only default custom ticket statuses. If false, show only non-default custom ticket statuses. If the filter is not used, show all custom ticket statuses"
        in: "query"
        name: "default"
        type: "boolean"
      responses:
        200:
          description: "List custom ticket statuses"
          schema:
            $ref: "#/definitions/CustomStatusesResponse"
      tags:
      - "Custom Ticket Statuses"
      description: "Lists all undeleted custom ticket statuses for the account. No pagination is provided.\n\n#### Allowed For\n\n* End Users\n"
      operationId: "ListCustomStatuses"
      summary: "List Custom Ticket Statuses"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/CustomStatusCreateRequest"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/CustomStatusResponse"
      tags:
      - "Custom Ticket Statuses"
      description: "Takes a `custom_status` object that specifies the custom ticket status properties to create.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateCustomStatus"
      summary: "Create Custom Ticket Status"
  /api/v2/custom_statuses/{custom_status_id}:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The id of the custom status"
        in: "path"
        name: "custom_status_id"
        required: true
        type: "integer"
        x-example: 1234567
      responses:
        200:
          description: "Custom Status"
          schema:
            $ref: "#/definitions/CustomStatusResponse"
      tags:
      - "Custom Ticket Statuses"
      description: "Returns the custom ticket status object.\n\n#### Allowed For\n\n* End Users\n"
      operationId: "ShowCustomStatus"
      summary: "Show Custom Ticket Status"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The id of the custom status"
        in: "path"
        name: "custom_status_id"
        required: true
        type: "integer"
        x-example: 1234567
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/CustomStatusUpdateRequest"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/CustomStatusResponse"
      tags:
      - "Custom Ticket Statuses"
      description: "Takes a `custom_status` object that specifies the properties to update.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateCustomStatus"
      summary: "Update Custom Ticket Status"
  /api/v2/deleted_tickets:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Sort by"
        enum:
        - "id"
        - "subject"
        - "deleted_at"
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "Sort order. Defaults to \"asc\""
        enum:
        - "asc"
        - "desc"
        in: "query"
        name: "sort_order"
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ListDeletedTicketsResponse"
      tags:
      - "Tickets"
      description: "Returns a maximum of 100 deleted tickets per page. See [Pagination](/api-reference/introduction/pagination/).\n\nThe results includes all deleted (and not yet archived) tickets that\nhave not yet been [scrubbed](https://support.zendesk.com/hc/en-us/articles/4408845703194#topic_fv5_w51_sdb) in the past 30 days. Archived tickets are\nnot included in the results. See [About archived tickets](https://support.zendesk.com/hc/en-us/articles/203657756)\nin the Support Help Center.\n\nThe tickets are ordered chronologically by created date, from oldest to newest.\nThe first ticket listed may not be the oldest ticket in your\naccount due to [ticket archiving](https://support.zendesk.com/hc/en-us/articles/203657756).\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n\n#### Rate Limit\n\nYou can make 10 requests every 1 minute using this endpoint.\nWhen making requests beyond page 100, you can make 5 requests every 1 minute.\nThe rate limiting mechanism behaves as described in\n[Monitoring your request activity](/api-reference/ticketing/account-configuration/usage_limits/#monitoring-your-request-activity) in the API introduction."
      operationId: "ListDeletedTickets"
      summary: "List Deleted Tickets"
  /api/v2/deleted_tickets/destroy_many:
    delete:
      produces:
      - "application/json"
      parameters:
      - description: "Comma-separated list of ticket ids"
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "35436,35437"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Tickets"
      description: "Permanently deletes up to 100 soft-deleted tickets. See [Soft delete](https://support.zendesk.com/hc/en-us/articles/4408834005530#topic_zrm_wbj_1db)\nin the Zendesk GDPR docs. To soft delete tickets, use the [Bulk Delete Tickets](#bulk-delete-tickets) endpoint.\n\nThis endpoint accepts a comma-separated list of up to 100 ticket ids. It enqueues\na ticket deletion job and returns a payload with the jobs status.\n\nIf one ticket fails to be deleted, the endpoint still attempts to delete the others. If the job succeeds,\nthe tickets that were successfully deleted are permanently deleted. This operation can't be undone.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents"
      operationId: "BulkPermanentlyDeleteTickets"
      summary: "Delete Multiple Tickets Permanently"
  /api/v2/deleted_tickets/restore_many:
    put:
      produces:
      - "application/json"
      parameters:
      - description: "Comma-separated list of ticket ids"
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "35436,35437"
      responses:
        200:
          description: "Empty response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Tickets"
      description: "#### Allowed For\n\n* Agents"
      operationId: "BulkRestoreDeletedTickets"
      summary: "Restore Previously Deleted Tickets in Bulk"
  /api/v2/deleted_tickets/{ticket_id}:
    delete:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Tickets"
      description: "Permanently deletes a soft-deleted ticket. See [Soft delete](https://support.zendesk.com/hc/en-us/articles/4408834005530#topic_zrm_wbj_1db)\nin the Zendesk GDPR docs. To soft delete a ticket, use the [Delete Ticket](#delete-ticket) endpoint.\n\nThis endpoint enqueues a ticket deletion job and returns a payload with the jobs status.\n\nIf the job succeeds, the ticket is permanently deleted. This operation can't be undone.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work.\nUse the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion.\n\n#### Allowed For\n\n* Agents"
      operationId: "DeleteTicketPermanently"
      summary: "Delete Ticket Permanently"
  /api/v2/deleted_tickets/{ticket_id}/restore:
    put:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Empty response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Tickets"
      description: "#### Allowed For\n\n* Agents"
      operationId: "RestoreDeletedTicket"
      summary: "Restore a Previously Deleted Ticket"
  /api/v2/deleted_users:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DeletedUsersResponse"
      tags:
      - "Users"
      description: "Returns deleted users, including permanently deleted users.\n\nIf the results contains permanently deleted users, the users' properties\nthat normally contain personal data, such as `email` and `phone`,\nare null. The `name` property is \"Permanently Deleted User\".\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListDeletedUsers"
      summary: "List Deleted Users"
  /api/v2/deleted_users/count:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CountResponse"
      tags:
      - "Users"
      description: "Returns an approximate count of deleted users, including permanently deleted users. If the count exceeds 100,000, it is updated every 24 hours.\n\nThe response includes a `refreshed_at` property in a `count` object that contains a timestamp indicating when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CountDeletedUsers"
      summary: "Count Deleted Users"
  /api/v2/deleted_users/{deleted_user_id}:
    parameters:
    - description: "The ID of the deleted user"
      in: "path"
      name: "deleted_user_id"
      required: true
      type: "integer"
      x-example: 35436
    delete:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DeletedUserResponse"
      tags:
      - "Users"
      description: "Before permanently deleting a user, you must delete the user first. See [Delete User](/api-reference/ticketing/users/users/#delete-user).\n\nWARNING: Permanently deleting a user deletes all of their information. This information is not recoverable.\n\n#### Permanent user deletion rate limit\n\nYou can permanently delete 700 users every 10 minutes.\nThe rate limiting mechanism behaves as described in\n[Rates Limits](/api-reference/introduction/rate-limits/#monitoring-your-request-activity) in the API introduction.\nZendesk recommends that you obey the Retry-After header values.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n"
      operationId: "PermanentlyDeleteUser"
      summary: "Permanently Delete User"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DeletedUserResponse"
      tags:
      - "Users"
      description: "Returns users that have been deleted but not permanently yet. See [Permanently Delete User](#permanently-delete-user).\n\n#### Allowed For:\n\n* Agents\n"
      operationId: "ShowDeletedUser"
      summary: "Show Deleted User"
  /api/v2/deletion_schedules:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            properties:
              deletion_schedules:
                items:
                  $ref: "#/definitions/DeletionSchedule"
                type: "array"
            type: "object"
      tags:
      - "Deletion Schedules"
      description: "Lists all deletion schedules for the account. Deletion schedules are used to automatically delete data from the account after a certain period of time.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ListDeletionSchedules"
      summary: "List Deletion Schedules"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          properties:
            deletion_schedule:
              $ref: "#/definitions/DeletionSchedule"
          type: "object"
      responses:
        201:
          description: "Success Response"
          schema:
            properties:
              deletion_schedule:
                $ref: "#/definitions/DeletionSchedule"
            type: "object"
      tags:
      - "Deletion Schedules"
      description: "Creates a new deletion schedule.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateDeletionSchedule"
      summary: "Create Deletion Schedule"
  /api/v2/deletion_schedules/{deletion_schedule_id}:
    delete:
      parameters:
      - description: "The id of the deletion schedule"
        in: "path"
        name: "deletion_schedule_id"
        required: true
        type: "integer"
        x-example: 132828
      responses:
        204:
          description: "Success Response"
      tags:
      - "Deletion Schedules"
      description: "Deletes a deletion schedule by its id.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "DeleteDeletionSchedule"
      summary: "Delete Deletion Schedule"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The id of the deletion schedule"
        in: "path"
        name: "deletion_schedule_id"
        required: true
        type: "integer"
        x-example: 132828
      responses:
        200:
          description: "Success Response"
          schema:
            properties:
              deletion_schedule:
                $ref: "#/definitions/DeletionSchedule"
            type: "object"
      tags:
      - "Deletion Schedules"
      description: "Gets a deletion schedule by its id.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "GetDeletionSchedule"
      summary: "Get Deletion Schedule"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The id of the deletion schedule"
        in: "path"
        name: "deletion_schedule_id"
        required: true
        type: "integer"
        x-example: 132828
      - in: "body"
        name: "body"
        required: true
        schema:
          properties:
            deletion_schedule:
              $ref: "#/definitions/DeletionSchedule"
          type: "object"
      responses:
        200:
          description: "Success Response"
          schema:
            properties:
              deletion_schedule:
                $ref: "#/definitions/DeletionSchedule"
            type: "object"
      tags:
      - "Deletion Schedules"
      description: "Updates a deletion schedule by its id.\n\n**Note**: Updating a condition updates the conditions array, clearing all existing values of the array. Include all your conditions when updating any condition.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateDeletionSchedule"
      summary: "Update Deletion Schedule"
  /api/v2/dynamic_content/items:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DynamicContentsResponse"
      tags:
      - "Dynamic Content"
      description: "Returns a list of all dynamic content items for your account if accessed as an admin or agents who have permission to manage dynamic content.\n\n#### Allowed For\n\n* Admins, Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ListDynamicContents"
      summary: "List Items"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/DynamicContentResponse"
      tags:
      - "Dynamic Content"
      description: "Create a new content item, with one or more variants in the item's `variants` array. See [Specifying item variants](#specifying-item-variants).\n\nThe `default_locale_id` and variant `locale_id` values must be one of the locales the account has active. You can get the list with the [List Locales](/api-reference/ticketing/account-configuration/locales/#list-locales) endpoint.\n\n#### Allowed For\n\n* Admins, Agents\n"
      operationId: "CreateDynamicContent"
      summary: "Create Item"
  /api/v2/dynamic_content/items/show_many:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Identifiers for the dynamic contents"
        in: "query"
        name: "identifiers"
        type: "string"
        x-example: "item1,item2"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DynamicContentsResponse"
      tags:
      - "Dynamic Content"
      description: "#### Stability\n\n* Development\n\n#### Allowed For\n\n* Admins, Agents\n"
      operationId: "ShowManyDynamicContents"
      summary: "Show Many Items"
  /api/v2/dynamic_content/items/{dynamic_content_item_id}:
    parameters:
    - description: "The ID of the dynamic content item"
      in: "path"
      name: "dynamic_content_item_id"
      required: true
      type: "integer"
      x-example: 47
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Dynamic Content"
      description: "#### Allowed For\n\n* Admins, Agents\n"
      operationId: "DeleteDynamicContentItem"
      summary: "Delete Item"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DynamicContentResponse"
      tags:
      - "Dynamic Content"
      description: "#### Allowed For\n\n* Admins, Agents\n"
      operationId: "ShowDynamicContentItem"
      summary: "Show Item"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DynamicContentResponse"
      tags:
      - "Dynamic Content"
      description: "The only attribute you can change is the name.\n\nTo add a variant to the item, or to update or delete the variants of the item, use the [Item Variants API](/api-reference/ticketing/ticket-management/dynamic_content_item_variants/#update-many-variants).\n\n#### Allowed For\n\n* Admins, Agents\n"
      operationId: "UpdateDynamicContentItem"
      summary: "Update Item"
  /api/v2/dynamic_content/items/{dynamic_content_item_id}/variants:
    parameters:
    - description: "The ID of the dynamic content item"
      in: "path"
      name: "dynamic_content_item_id"
      required: true
      type: "integer"
      x-example: 47
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DynamicContentVariantsResponse"
      tags:
      - "Dynamic Content Item Variants"
      description: "Returns all the variants of the specified dynamic content item.\n\n#### Allowed For\n\n* Admins\n* Agents who have permission to manage dynamic content\n\n#### Pagination\n\n* Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "DynamicContentListVariants"
      summary: "List Variants"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/DynamicContentVariantResponse"
      tags:
      - "Dynamic Content Item Variants"
      description: "You can only create one variant for each locale id. If a locale variant already exists, the request is rejected.\n\n#### Allowed For\n\n* Admins, Agents\n"
      operationId: "CreateDynamicContentVariant"
      summary: "Create Variant"
  /api/v2/dynamic_content/items/{dynamic_content_item_id}/variants/create_many:
    parameters:
    - description: "The ID of the dynamic content item"
      in: "path"
      name: "dynamic_content_item_id"
      required: true
      type: "integer"
      x-example: 47
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/DynamicContentVariantsResponse"
      tags:
      - "Dynamic Content Item Variants"
      description: "#### Allowed For\n\n* Admins, Agents\n"
      operationId: "CreateManyDynamicContentVariants"
      summary: "Create Many Variants"
  /api/v2/dynamic_content/items/{dynamic_content_item_id}/variants/update_many:
    parameters:
    - description: "The ID of the dynamic content item"
      in: "path"
      name: "dynamic_content_item_id"
      required: true
      type: "integer"
      x-example: 47
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DynamicContentVariantsResponse"
      tags:
      - "Dynamic Content Item Variants"
      description: "Updates one or more variants. See [Update Variant](/api-reference/ticketing/ticket-management/dynamic_content_item_variants/#update-variant).\n\nYou must specify the variants by id in the body. To get the variant ids, see [List Variants](/api-reference/ticketing/ticket-management/dynamic_content_item_variants/#list-variants).\n\n#### Allowed For\n\n* Admins, Agents\n"
      operationId: "UpdateManyDynamicContentVariants"
      summary: "Update Many Variants"
  /api/v2/dynamic_content/items/{dynamic_content_item_id}/variants/{dynammic_content_variant_id}:
    parameters:
    - description: "The ID of the dynamic content item"
      in: "path"
      name: "dynamic_content_item_id"
      required: true
      type: "integer"
      x-example: 47
    - description: "The ID of the variant"
      in: "path"
      name: "dynammic_content_variant_id"
      required: true
      type: "integer"
      x-example: 23
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Dynamic Content Item Variants"
      description: "#### Allowed For\n\n* Admins, Agents\n"
      operationId: "DeleteDynamicContentVariant"
      summary: "Delete Variant"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DynamicContentVariantResponse"
      tags:
      - "Dynamic Content Item Variants"
      description: "#### Allowed For\n\n* Admins, Agents\n"
      operationId: "ShowDynamicContentVariant"
      summary: "Show Variant"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DynamicContentVariantResponse"
      tags:
      - "Dynamic Content Item Variants"
      description: "Updates the specified variant. You don't need to include all the properties. If you just want to update content, for example, then include just that.\n\nYou can't switch the active state of the default variant of an item. Similarly, you can't switch the default to false if the variant is the default. You must make another variant default instead.\n\n#### Allowed For\n\n* Admins, Agents\n"
      operationId: "UpdateDynamicContentVariant"
      summary: "Update Variant"
  /api/v2/email_notifications:
    parameters:
    - description: "Filters the email notifications by ticket, comment, or notification id.\n"
      enum:
      - "ticket_id"
      - "comment_id"
      - "notification_id"
      in: "query"
      name: "filter"
      type: "integer"
    - description: "The number of records to return per page"
      in: "query"
      name: "per_page"
      type: "integer"
    - description: "The field to sort the list.  Possible values are \"created_at\", \"updated_at\" (ascending order) or \"-created_at\", \"-updated_at\" (descending order)"
      in: "query"
      name: "sort"
      type: "string"
      x-example: "updated_at"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/EmailNotificationsResponse"
      tags:
      - "Email Notifications"
      description: "#### Allowed For\n\n* Admins\n* Unrestricted agents\n\n#### Filters\n\n* By notification: `api/v2/email_notifications.json?filter[notification_id]=7824075373693`\n* By comment: `api/v2/email_notifications.json?filter[comment_id]=7824075373565`\n* By ticket: `api/v2/email_notifications.json?filter[ticket_id]=623`\n\n#### Pagination\n\n* Cursor pagination: `api/v2/email_notifications.json?page[size]=10`\n\nBy default, a maximum of 100 email notifications are included per page. See [Pagination](/api-reference/introduction/pagination/) for more details.\n\n#### Sorting\n\nBy default, email notifications are sorted by creation time (oldest first). The query parameter is not supported for this endpoint.\n\n* By creation time (newest first): `api/v2/email_notifications.json?sort=created_at`\n* By creation time (oldest first): `api/v2/email_notifications.json?sort=-created_at`\n* By modification time (recently updated first): `api/v2/email_notifications.json?sort=updated_at`\n* By modification time (recently updated last): `api/v2/email_notifications.json?sort=-updated_at`\n"
      operationId: "ListEmailNotifications"
      summary: "List Email Notifications"
  /api/v2/email_notifications/{notification_id}:
    parameters:
    - description: "The id of the email notification"
      in: "path"
      name: "notification_id"
      required: true
      type: "integer"
      x-example: 7824075373693
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/EmailNotificationResponse"
      tags:
      - "Email Notifications"
      description: "Shows email notification details. You can get the value of the `notification_id` parameter by listing the ticket's outbound emails.\n\n#### Allowed For\n\n* Admins\n* Unrestricted agents\n"
      operationId: "ShowEmailNotification"
      summary: "Show Email Notification"
  /api/v2/group_memberships:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the group"
        in: "path"
        name: "group_id"
        required: true
        type: "integer"
        x-example: 122
      - description: "The id of the user"
        in: "path"
        name: "user_id"
        required: true
        type: "integer"
        x-example: 35436
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupMembershipsResponse"
      tags:
      - "Group Memberships"
      description: "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For:\n\n* Agents\n"
      operationId: "ListGroupMemberships"
      summary: "List Memberships"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/GroupMembershipResponse"
      tags:
      - "Group Memberships"
      description: "Assigns an agent to a given group.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage group memberships (Enterprise only)\n"
      operationId: "CreateGroupMembership"
      summary: "Create Membership"
  /api/v2/group_memberships/assignable:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupMembershipsResponse"
      tags:
      - "Group Memberships"
      description: "Returns a maximum of 100 group memberships per page.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For:\n\n* Agents\n"
      operationId: "ListAssignableGroupMemberships"
      summary: "List Assignable Memberships"
  /api/v2/group_memberships/create_many:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Group Memberships"
      description: "Assigns up to 100 agents to given groups.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage group memberships (Enterprise only)\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion.\n"
      operationId: "GroupMembershipBulkCreate"
      summary: "Bulk Create Memberships"
  /api/v2/group_memberships/destroy_many:
    delete:
      produces:
      - "application/json"
      parameters:
      - description: "Id of the group memberships to delete. Comma separated"
        in: "query"
        name: "ids"
        type: "string"
        x-example: "1,2,3"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Group Memberships"
      description: "Immediately removes users from groups and schedules a job to unassign all working tickets that are assigned to the given user and group combinations.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage group memberships (Enterprise only)\n"
      operationId: "GroupMembershipBulkDelete"
      summary: "Bulk Delete Memberships"
  /api/v2/group_memberships/{group_membership_id}:
    parameters:
    - description: "The ID of the group membership"
      in: "path"
      name: "group_membership_id"
      required: true
      type: "integer"
      x-example: 4
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    delete:
      parameters: []
      responses:
        204:
          description: "No content response"
      tags:
      - "Group Memberships"
      description: "Immediately removes a user from a group and schedules a job to unassign all working tickets that are assigned to the given user and group combination.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage group memberships (Enterprise only)\n"
      operationId: "DeleteGroupMembership"
      summary: "Delete Membership"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupMembershipResponse"
      tags:
      - "Group Memberships"
      description: "The 'id' is the group membership id, not a group id.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ShowGroupMembershipById"
      summary: "Show Membership"
  /api/v2/group_slas/policies:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupSLAPoliciesResponse"
      tags:
      - "Group SLA Policies"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ListGroupSLAPolicies"
      summary: "List Group SLA Policies"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/GroupSLAPolicyResponse"
      tags:
      - "Group SLA Policies"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "CreateGroupSLAPolicy"
      summary: "Create Group SLA Policy"
  /api/v2/group_slas/policies/definitions:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupSLAPolicyFilterDefinitionResponse"
      tags:
      - "Group SLA Policies"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "RetrieveGroupSLAPolicyFilterDefinitionItems"
      summary: "Retrieve Supported Filter Definition Items"
  /api/v2/group_slas/policies/reorder:
    put:
      produces:
      - "application/json"
      parameters:
      - collectionFormat: "multi"
        description: "The ids of the Group SLA policies to reorder"
        in: "query"
        items:
          type: "string"
        name: "group_sla_policy_ids"
        type: "array"
      responses:
        200:
          description: "Success response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Group SLA Policies"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ReorderGroupSLAPolicies"
      summary: "Reorder Group SLA Policies"
  /api/v2/group_slas/policies/{group_sla_policy_id}:
    parameters:
    - description: "The id of the Group SLA policy"
      in: "path"
      name: "group_sla_policy_id"
      required: true
      type: "integer"
      x-example: 36
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Group SLA Policies"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "DeleteGroupSLAPolicy"
      summary: "Delete Group SLA Policy"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupSLAPolicyResponse"
      tags:
      - "Group SLA Policies"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ShowGroupSLAPolicy"
      summary: "Show Group SLA Policy"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupSLAPolicyResponse"
      tags:
      - "Group SLA Policies"
      description: "Updates the specified policy.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateGroupSLAPolicy"
      summary: "Update Group SLA Policy"
  /api/v2/groups:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The id of the user"
        in: "path"
        name: "user_id"
        required: true
        type: "integer"
        x-example: 35436
      - description: "Whether to exclude deleted entities"
        in: "query"
        name: "exclude_deleted"
        type: "boolean"
        x-example: false
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupsResponse"
      tags:
      - "Groups"
      description: "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ListGroups"
      summary: "List Groups"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/GroupResponse"
      tags:
      - "Groups"
      description: "#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage groups (Enterprise only)\n"
      operationId: "CreateGroup"
      summary: "Create Group"
  /api/v2/groups/assignable:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupsResponse"
      tags:
      - "Groups"
      description: "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ListAssignableGroups"
      summary: "List Assignable Groups"
  /api/v2/groups/count:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupsCountObject"
      tags:
      - "Groups"
      description: "Returns an approximate count of groups. If the count exceeds 100,000, it is updated every 24 hours.\n\nThe `refreshed_at` property of the `count` object is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `refreshed_at` may occasionally be null. This indicates that the count is being updated in the background, and the `value` property of the `count` object is limited to 100,000 until the update is complete.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "CountGroups"
      summary: "Count Groups"
  /api/v2/groups/{group_id}:
    parameters:
    - description: "The ID of the group"
      in: "path"
      name: "group_id"
      required: true
      type: "integer"
      x-example: 122
    delete:
      parameters: []
      responses:
        204:
          description: "No content response"
      tags:
      - "Groups"
      description: "#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage groups (Enterprise only)\n"
      operationId: "DeleteGroup"
      summary: "Delete Group"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupResponse"
      tags:
      - "Groups"
      description: "#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ShowGroupById"
      summary: "Show Group"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupResponse"
      tags:
      - "Groups"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "UpdateGroup"
      summary: "Update Group"
  /api/v2/imports/tickets:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "If `true`, any ticket created with a `closed` status bypasses the normal ticket lifecycle and will be created directly in your ticket archive"
        in: "query"
        name: "archive_immediately"
        type: "boolean"
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/TicketImportRequest"
      responses:
        201:
          description: "Successfully created"
          schema:
            $ref: "#/definitions/TicketResponse"
      tags:
      - "Ticket Import"
      description: "#### Allowed For\n\n* Admins"
      operationId: "TicketImport"
      summary: "Ticket Import"
  /api/v2/imports/tickets/create_many:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "If `true`, any ticket created with a `closed` status bypasses the normal ticket lifecycle and will be created directly in your ticket archive"
        in: "query"
        name: "archive_immediately"
        type: "boolean"
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/TicketBulkImportRequest"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Ticket Import"
      description: "Accepts an array of up to 100 ticket objects.\n\n#### Allowed For\n\n* Admins"
      operationId: "TicketBulkImport"
      summary: "Ticket Bulk Import"
  /api/v2/incremental/organizations:
    parameters:
    - description: "The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
      in: "query"
      name: "start_time"
      required: true
      type: "integer"
      x-example: 1332034771
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ExportIncrementalOrganizationsResponse"
      tags:
      - "Incremental Export"
      description: "#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Organizations sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints).\n"
      operationId: "IncrementalOrganizationExport"
      summary: "Incremental Organization Export"
  /api/v2/incremental/routing/attribute_values:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/IncrementalSkillBasedRouting"
      tags:
      - "Incremental Skill Based Routing"
      description: "Returns a stream of changes that occurred on routing attribute values.\n\n#### Allowed For\n\n* Admins\n\n#### Parameters\n\nOptional\n\n| Name   | Type   | Comment\n| ------ | ------ | -------\n| cursor | string | The `cursor` parameter is a non-human-readable argument you can use to move forward or backward in time. The cursor is a read-only URL parameter that's only available in API responses. See [Pagination](#pagination).\n"
      operationId: "IncrementalSkilBasedRoutingAttributeValuesExport"
      summary: "Incremental Attributes Values Export"
  /api/v2/incremental/routing/attributes:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/IncrementalSkillBasedRouting"
      tags:
      - "Incremental Skill Based Routing"
      description: "Returns a stream of changes that occurred on routing attributes.\n\n#### Allowed For\n\n* Admins\n\n#### Parameters\n\nOptional\n\n\n| Name   | Type   | Comment\n| ------ | ------ | -------\n| cursor | string | The `cursor` parameter is a non-human-readable argument you can use to move forward or backward in time. The cursor is a read-only URL parameter that's only available in API responses. See [Pagination](#pagination).\n"
      operationId: "IncrementalSkilBasedRoutingAttributesExport"
      summary: "Incremental Attributes Export"
  /api/v2/incremental/routing/instance_values:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/IncrementalSkillBasedRouting"
      tags:
      - "Incremental Skill Based Routing"
      description: "Returns a stream of changes that occurred on routing instance values. Changes are grouped by `attribute_value_id`,\nwith unassociate type events listed with associate type events by the associate event’s timestamp.\n\n#### Allowed For\n\n* Admins\n\n#### Parameters\n\nOptional\n\n| Name   | Type   | Comment\n| ------ | ------ | -------\n| cursor | string | The `cursor` parameter is a non-human-readable argument you can use to move forward or backward in time. The cursor is a read-only URL parameter that's only available in API responses. See [Pagination](#pagination).\n"
      operationId: "IncrementalSkilBasedRoutingInstanceValuesExport"
      summary: "Incremental Instance Values Export"
  /api/v2/incremental/ticket_events:
    parameters:
    - description: "The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
      in: "query"
      name: "start_time"
      required: true
      type: "integer"
      x-example: 1332034771
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ExportIncrementalTicketEventsResponse"
      tags:
      - "Incremental Export"
      description: "Returns a stream of changes that occurred on tickets. Each event is tied\nto an update on a ticket and contains all the fields that were updated in that\nchange. For more information, see:\n\n- [Exporting ticket events](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#exporting-ticket-events) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api)\n- [Time-based incremental exports](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#time-based-incremental-exports) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api)\n\nYou can include comments in the event stream by using the `comment_events`\nsideload. See Sideloading below. If you don't specify the sideload, any comment\npresent in the ticket update is described only by Boolean `comment_present`\nand `comment_public` object properties in the event's `child_events` array.\nThe comment itself is not included.\n\n#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nThe endpoint supports the `comment_events` sideload. Any comment present in the ticket\nupdate is listed as an object in the event's `child_events` array. Example:\n\n```js\n\"child_events\": [\n  {\n    \"id\": 91048994488,\n    \"via\": {\n      \"channel\": \"api\",\n      \"source\": {\"from\":{},\"to\":{},\"rel\":null}},\n    \"via_reference_id\":null,\n    \"type\": \"Comment\",\n    \"author_id\": 5031726587,\n    \"body\": \"This is a comment\",\n    \"html_body\": \"&lt;div class=\"zd-comment\"&gt;&lt;p dir=\"auto\"&gt;This is a comment&lt;/p&gt;\",\n    \"public\": true,\n    \"attachments\": [],\n    \"audit_id\": 91048994468,\n    \"created_at\": \"2009-06-25T10:15:18Z\",\n    \"event_type\": \"Comment\"\n  },\n  ...\n],\n...\n```\n"
      operationId: "IncrementalTicketEvents"
      summary: "Incremental Ticket Event Export"
  /api/v2/incremental/ticket_metric_events:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The Unix UTC epoch time of the oldest event you're interested in. Example: 1332034771."
        in: "query"
        name: "start_time"
        required: true
        type: "integer"
        x-example: 1332034771
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/TicketMetricEventsResponse"
      tags:
      - "Ticket Metric Events"
      description: "Returns ticket metric events that occurred on or after the start time.\n\nCursor pagination returns a maximum of 100 records per page. Events are listed in chronological order.\n\nIf the results are not paginated, events will be returned as a time-based incremental export.\n\nSee [Time-based incremental exports](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#time-based-incremental-exports).\n\n#### Pagination\n* Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Allowed For\n\n* Admins"
      operationId: "ListTicketMetricEvents"
      summary: "List Ticket Metric Events"
  /api/v2/incremental/tickets:
    parameters:
    - description: "The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
      in: "query"
      name: "start_time"
      required: true
      type: "integer"
      x-example: 1332034771
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TimeBasedExportIncrementalTicketsResponse"
      tags:
      - "Incremental Export"
      description: "Returns the tickets that changed since the start time. For more information,\nsee [Exporting tickets](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#exporting-tickets) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api).\n\nThis endpoint supports time-based incremental exports.\nFor more information, see [Time-based incremental exports](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#time-based-incremental-exports) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api). You can also return tickets using cursor-based pagination. See [Incremental Ticket Export, Cursor Based](#incremental-ticket-export-cursor-based).\n\nThe results include tickets that were updated by the system. See\n[Excluding system-updated tickets](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#excluding-system-updated-tickets-time-based-exports) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api).\n\nThe endpoint can return tickets with an `updated_at` time that's earlier than the\n`start_time` time. The reason is that the API compares the `start_time` with the ticket's\n`generated_timestamp` value, not its `updated_at` value. The `updated_at` value is\nupdated only if the update generates a [ticket event](#incremental-ticket-event-export).\nThe `generated_timestamp` value is updated for all ticket updates, including system\nupdates. If a system update occurs after a ticket event, the unchanged\n`updated_at` time will become earlier relative to the updated `generated_timestamp`\ntime.\n\n#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Tickets sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints). For performance reasons,\n`last_audits` sideloads aren't supported.\n"
      operationId: "IncrementalTicketExportTime"
      summary: "Incremental Ticket Export, Time Based"
  /api/v2/incremental/tickets/cursor:
    parameters:
    - description: "The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
      in: "query"
      name: "start_time"
      required: true
      type: "integer"
      x-example: 1332034771
    - description: "The cursor pointer to work with for all subsequent exports after the initial request"
      in: "query"
      name: "cursor"
      type: "string"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CursorBasedExportIncrementalTicketsResponse"
      tags:
      - "Incremental Export"
      description: "Returns the tickets that changed since the start time. For more information,\nsee [Exporting tickets](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#exporting-tickets) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api).\n\nThis endpoint supports cursor-based incremental exports.\nCursor-based exports are highly encouraged because they provide more consistent performance and\nresponse body sizes. For more information, see [Cursor-based incremental exports](/documentation/ticketing/managing-tickets/using-the-incremental-export-api#cursor-based-incremental-exports) in [Using the Incremental Exports API](/documentation/ticketing/managing-tickets/using-the-incremental-export-api).\n\n\n\n#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Tickets sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints). For performance reasons,\n`last_audits` sideloads aren't supported.\n"
      operationId: "IncrementalTicketExportCursor"
      summary: "Incremental Ticket Export, Cursor Based"
  /api/v2/incremental/users:
    parameters:
    - description: "The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
      in: "query"
      name: "start_time"
      required: true
      type: "integer"
      x-example: 1332034771
    - description: "The number of records to return per page"
      in: "query"
      name: "per_page"
      type: "integer"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TimeBasedExportIncrementalUsersResponse"
      tags:
      - "Incremental Export"
      description: "#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Users sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints).\n"
      operationId: "IncrementalUserExportTime"
      summary: "Incremental User Export, Time Based"
  /api/v2/incremental/users/cursor:
    parameters:
    - description: "The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
      in: "query"
      name: "start_time"
      required: true
      type: "integer"
      x-example: 1332034771
    - description: "The cursor pointer to work with for all subsequent exports after the initial request"
      in: "query"
      name: "cursor"
      type: "string"
    - description: "The number of records to return per page"
      in: "query"
      name: "per_page"
      type: "integer"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CursorBasedExportIncrementalUsersResponse"
      tags:
      - "Incremental Export"
      description: "#### Allowed For\n\n * Admins\n\n#### Sideloading\n\nSee [Users sideloads](/documentation/ticketing/using-the-zendesk-api/side_loading/#supported-endpoints).\n"
      operationId: "IncrementalUserExportCursor"
      summary: "Incremental User Export, Cursor Based"
  /api/v2/incremental/{incremental_resource}/sample:
    parameters:
    - description: "The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
      in: "query"
      name: "start_time"
      required: true
      type: "integer"
      x-example: 1332034771
    - description: "The resource requested for incremental sample export"
      in: "path"
      name: "incremental_resource"
      required: true
      type: "string"
      x-example: "tickets"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TimeBasedExportIncrementalTicketsResponse"
      tags:
      - "Incremental Export"
      description: "Use this endpoint to test the incremental export format. It's more strict in terms of rate limiting,\nat 10 requests per 20 minutes instead of 10 requests per minute. It also returns only up to 50\nresults per request. Otherwise, it's identical to the above APIs.\n\nUse the `incremental_resource` parameter to specify the resource. Possible values are \"tickets\", \"ticket_events\", \"users\", or \"organizations\".\n"
      operationId: "IncrementalSampleExport"
      summary: "Incremental Sample Export"
  /api/v2/job_statuses:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/JobStatusesResponse"
      tags:
      - "Job Statuses"
      description: "Shows the statuses for background jobs. Statuses are sorted first by completion date and then by creation date in descending order.\n\n#### Allowed For:\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ListJobStatuses"
      summary: "List Job Statuses"
  /api/v2/job_statuses/show_many:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Comma-separated list of job status ids."
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "8b726e606741012ffc2d782bcb7848fe,e7665094164c498781ebe4c8db6d2af5"
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/JobStatusesResponse"
      tags:
      - "Job Statuses"
      description: "Accepts a comma-separated list of job status ids.\n\n#### Allowed For:\n\n* Agents\n"
      operationId: "ShowManyJobStatuses"
      summary: "Show Many Job Statuses"
  /api/v2/job_statuses/{job_status_id}:
    parameters:
    - description: "the Id of the Job status"
      in: "path"
      name: "job_status_id"
      required: true
      type: "string"
      x-example: "8b726e606741012ffc2d782bcb7848fe"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Job Statuses"
      description: "Shows the status of a background job.\n\n#### Allowed For:\n\n* Agents\n"
      operationId: "ShowJobStatus"
      summary: "Show Job Status"
  /api/v2/locales:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/LocalesResponse"
      tags:
      - "Locales"
      description: "Lists the translation locales available for the account.\n\n**Note**: You can alter the list by passing an updated `locale_ids` array to the [Update Account Settings](/api-reference/ticketing/account-configuration/account_settings/#update-account-settings) endpoint.\n\n#### Allowed For\n\n* Anyone\n"
      operationId: "ListLocales"
      summary: "List Locales"
  /api/v2/locales/agent:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/LocalesResponse"
      tags:
      - "Locales"
      description: "Lists the translation locales that have been localized for agents on a specific account.\n\n#### Allowed For\n\n* Anyone\n"
      operationId: "ListLocalesForAgent"
      summary: "List Locales for Agent"
  /api/v2/locales/current:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/LocaleResponse"
      tags:
      - "Locales"
      description: "This works like [Show Locale](#show-locale), but instead of taking a locale id as an argument, it renders the locale of the user performing the request.\n\n#### Allowed For\n\n* Anyone\n"
      operationId: "ShowCurrentLocale"
      summary: "Show Current Locale"
  /api/v2/locales/detect_best_locale:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/LocaleResponse"
      tags:
      - "Locales"
      description: "#### Allowed For\n\n* Anyone\n"
      operationId: "DetectBestLocale"
      summary: "Detect Best Language for User"
  /api/v2/locales/public:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/LocalesResponse"
      tags:
      - "Locales"
      description: "Lists the translation locales that are available to all accounts.\n\n#### Allowed For\n\n* Anyone\n"
      operationId: "ListAvailablePublicLocales"
      summary: "List Available Public Locales"
  /api/v2/locales/{locale_id}:
    parameters:
    - description: "The ID or the [BCP-47 code](https://en.wikipedia.org/wiki/IETF_language_tag) of the locale. Examples: es-419, en-us, pr-br\n"
      in: "path"
      name: "locale_id"
      required: true
      type: "string"
      x-example: "es-419"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/LocaleResponse"
      tags:
      - "Locales"
      description: "#### Allowed For\n\n* Anyone\n"
      operationId: "ShowLocaleById"
      summary: "Show Locale"
  /api/v2/macros:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
        in: "query"
        name: "include"
        type: "string"
        x-example: "usage_7d"
      - description: "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
        in: "query"
        name: "access"
        type: "string"
        x-example: "personal"
      - description: "Filter by active macros if true or inactive macros if false"
        in: "query"
        name: "active"
        type: "boolean"
        x-example: true
      - description: "Filter macros by category"
        in: "query"
        name: "category"
        type: "integer"
        x-example: 25
      - description: "Filter macros by group"
        in: "query"
        name: "group_id"
        type: "integer"
        x-example: 25
      - description: "If true, returns only macros that can be applied to tickets. If false, returns all macros the current user can manage. Default is false"
        in: "query"
        name: "only_viewable"
        type: "boolean"
        x-example: false
      - description: "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
        in: "query"
        name: "sort_by"
        type: "string"
        x-example: "alphabetical"
      - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
        in: "query"
        name: "sort_order"
        type: "string"
        x-example: "asc"
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacrosResponse"
      tags:
      - "Macros"
      description: "Lists all shared and personal macros available to the current user. For admins, the API returns all macros for the account, including the personal macros of agents and other admins.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n* Agents\n"
      operationId: "ListMacros"
      summary: "List Macros"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          properties:
            macro:
              $ref: "#/definitions/MacroInput"
          type: "object"
      responses:
        200:
          description: "OK"
          schema:
            properties:
              macro:
                $ref: "#/definitions/MacroObject"
            type: "object"
      tags:
      - "Macros"
      description: "#### Allowed For\n* Agents\n"
      operationId: "CreateMacro"
      summary: "Create Macro"
  /api/v2/macros/actions:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            properties:
              actions:
                items:
                  additionalProperties: true
                  type: "object"
                type: "array"
            type: "object"
      tags:
      - "Macros"
      description: "#### Allowed For\n* Agents\n"
      operationId: "ListMacrosActions"
      summary: "List Supported Actions for Macros"
  /api/v2/macros/active:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
        in: "query"
        name: "include"
        type: "string"
        x-example: "usage_7d"
      - description: "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
        in: "query"
        name: "access"
        type: "string"
        x-example: "personal"
      - description: "Filter macros by category"
        in: "query"
        name: "category"
        type: "integer"
        x-example: 25
      - description: "Filter macros by group"
        in: "query"
        name: "group_id"
        type: "integer"
        x-example: 25
      - description: "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
        in: "query"
        name: "sort_by"
        type: "string"
        x-example: "alphabetical"
      - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
        in: "query"
        name: "sort_order"
        type: "string"
        x-example: "asc"
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacrosResponse"
      tags:
      - "Macros"
      description: "Lists all active shared and personal macros available to the current user.\n\n#### Allowed For\n* Agents\n"
      operationId: "ListActiveMacros"
      summary: "List Active Macros"
  /api/v2/macros/attachments:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created Response"
          schema:
            $ref: "#/definitions/MacroAttachmentResponse"
      tags:
      - "Macros"
      description: "Allows an attachment to be uploaded that can be associated with a macro at a later time.\n\n**Note:** To ensure an uploaded attachment is not lost, associate it with a macro as soon as possible. From time to time, old attachments that are not not associated with any macro are purged.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CreateMacroAttachment"
      summary: "Create Unassociated Macro Attachment"
  /api/v2/macros/attachments/{attachment_id}:
    parameters:
    - description: "The ID of the attachment"
      in: "path"
      name: "attachment_id"
      required: true
      type: "integer"
      x-example: 498483
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacroAttachmentResponse"
      tags:
      - "Macros"
      description: "Shows the properties of the specified macro attachment.\n\n#### Allowed For\n* Agents\n"
      operationId: "ShowMacroAttachment"
      summary: "Show Macro Attachment"
  /api/v2/macros/categories:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacroCategoriesResponse"
      tags:
      - "Macros"
      description: "Lists all macro categories available to the current user.\n\n#### Allowed For\n* Agents\n"
      operationId: "ListMacroCategories"
      summary: "List Macro Categories"
  /api/v2/macros/definitions:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            properties:
              definitions:
                properties:
                  actions:
                    items:
                      additionalProperties: true
                      type: "object"
                    type: "array"
                type: "object"
            type: "object"
      tags:
      - "Macros"
      description: "Returns the definitions of the actions a macro can perform. For example,\none action can set the status of a ticket. The definition of the action\nincludes a title (\"Status\"), a type (\"list\"), and possible values. For a\nlist of support actions, see [Actions reference](/documentation/ticketing/reference-guides/actions-reference).\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListMacroActionDefinitions"
      summary: "List Macro Action Definitions"
  /api/v2/macros/destroy_many:
    delete:
      parameters:
      - collectionFormat: "multi"
        description: "The IDs of the macros to delete"
        in: "query"
        items:
          type: "integer"
        name: "ids"
        required: true
        type: "array"
        x-example:
        - 1
        - 2
        - 3
      responses:
        204:
          description: "No Content"
      tags:
      - "Macros"
      description: "Deletes the macros corresponding to the provided comma-separated list of IDs.\n\n#### Allowed For\n* Agents\n"
      operationId: "DeleteManyMacros"
      summary: "Bulk Delete Macros"
  /api/v2/macros/new:
    parameters:
    - description: "The ID of the macro to replicate"
      in: "query"
      name: "macro_id"
      required: true
      type: "integer"
      x-example: 25
    - description: "The ID of the ticket from which to build a macro replica"
      in: "query"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacroResponse"
      tags:
      - "Macros"
      description: "Returns an unpersisted macro representation derived from a ticket or macro.\n\nThe endpoint takes one of the following query parameters: `macro_id` or `ticket_id`. If you include both, `macro_id` is used.\n\n#### Allowed For\n* Agents\n"
      operationId: "ShowDerivedMacro"
      summary: "Show Macro Replica"
  /api/v2/macros/search:
    parameters:
    - description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
      in: "query"
      name: "include"
      type: "string"
      x-example: "usage_7d"
    - description: "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
      in: "query"
      name: "access"
      type: "string"
      x-example: "personal"
    - description: "Filter by active macros if true or inactive macros if false"
      in: "query"
      name: "active"
      type: "boolean"
      x-example: true
    - description: "Filter macros by category"
      in: "query"
      name: "category"
      type: "integer"
      x-example: 25
    - description: "Filter macros by group"
      in: "query"
      name: "group_id"
      type: "integer"
      x-example: 25
    - description: "If true, returns only macros that can be applied to tickets. If false, returns all macros the current user can manage. Default is false"
      in: "query"
      name: "only_viewable"
      type: "boolean"
      x-example: false
    - description: "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "alphabetical"
    - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "asc"
    - description: "Query string used to find macros with matching titles"
      in: "query"
      name: "query"
      required: true
      type: "string"
      x-example: "close"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacrosResponse"
      tags:
      - "Macros"
      description: "#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n* Agents\n"
      operationId: "SearchMacro"
      summary: "Search Macros"
  /api/v2/macros/update_many:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/MacroUpdateManyInput"
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacrosResponse"
      tags:
      - "Macros"
      description: "Updates the provided macros with the specified changes.\n\n#### Allowed For\n* Agents\n"
      operationId: "UpdateManyMacros"
      summary: "Update Many Macros"
  /api/v2/macros/{macro_id}:
    parameters:
    - description: "The ID of the macro"
      in: "path"
      name: "macro_id"
      required: true
      type: "integer"
      x-example: 25
    delete:
      parameters: []
      responses:
        204:
          description: "No Content"
      tags:
      - "Macros"
      description: "#### Allowed For\n* Agents, with restrictions applying on certain actions\n"
      operationId: "DeleteMacro"
      summary: "Delete Macro"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacroResponse"
      tags:
      - "Macros"
      description: "#### Allowed For\n* Agents\n"
      operationId: "ShowMacro"
      summary: "Show Macro"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          properties:
            macro:
              $ref: "#/definitions/MacroInput"
          type: "object"
      responses:
        200:
          description: "OK"
          schema:
            properties:
              macro:
                $ref: "#/definitions/MacroObject"
            type: "object"
      tags:
      - "Macros"
      description: "#### Allowed For\n* Agents\n"
      operationId: "UpdateMacro"
      summary: "Update Macro"
  /api/v2/macros/{macro_id}/apply:
    parameters:
    - description: "The ID of the macro"
      in: "path"
      name: "macro_id"
      required: true
      type: "integer"
      x-example: 25
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacroApplyTicketResponse"
      tags:
      - "Macros"
      description: "Returns the changes the macro would make to a ticket. It doesn't actually\nchange a ticket. You can use the response data in a subsequent API call\nto the [Tickets](/api-reference/ticketing/tickets/tickets/) endpoint to update the ticket.\n\nThe response includes only the ticket fields that would be changed by the\nmacro. To get the full ticket object after the macro is applied,\nsee [Show Ticket After Changes](#show-ticket-after-changes).\n\n#### Allowed For\n* Agents\n"
      operationId: "ShowChangesToTicket"
      summary: "Show Changes to Ticket"
  /api/v2/macros/{macro_id}/attachments:
    parameters:
    - description: "The ID of the macro"
      in: "path"
      name: "macro_id"
      required: true
      type: "integer"
      x-example: 25
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacroAttachmentsResponse"
      tags:
      - "Macros"
      description: "Lists the attachments associated with a macro.\n\n#### Allowed For\n* Agents\n"
      operationId: "ListMacroAttachments"
      summary: "List Macro Attachments"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacroAttachmentResponse"
      tags:
      - "Macros"
      description: "Allows an attachment to be uploaded and associated with a macro at the same time.\n\n**Note:** A macro can be associated with up to five attachments.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CreateAssociatedMacroAttachment"
      summary: "Create Macro Attachment"
  /api/v2/object_layouts/essentials_cards:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/EssentialsCardsResponse"
      tags:
      - "Essentials Card"
      description: "Gets the list of essentials cards.\n#### Allowed For\n* Admins\n"
      operationId: "ShowEssentialsCards"
      summary: "List of Essentials Cards"
  /api/v2/object_layouts/{object_type}/essentials_card:
    parameters:
    - description: "Essentials card type. Example: `zen:user` refers user type\n"
      in: "path"
      name: "object_type"
      required: true
      type: "string"
      x-example: "zen:user"
    delete:
      parameters: []
      responses:
        204:
          description: "Success response"
      tags:
      - "Essentials Card"
      description: "Delete the essentials card for an object type.\n#### Allowed For\n* Admins and agents\n"
      operationId: "DeleteEssentialsCard"
      summary: "Delete Essentials Card"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/EssentialsCardResponse"
      tags:
      - "Essentials Card"
      description: "Gets the essentials card for an object type.\n#### Allowed For\n* Admins and agents\n"
      operationId: "ShowEssentialsCard"
      summary: "Show Essentials Card"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/EssentialsCardResponse"
      tags:
      - "Essentials Card"
      description: "Updates the essentials card for an object type.\n#### Allowed For\n* Admins\n"
      operationId: "UpdateEssentialsCard"
      summary: "Update Essentials Card"
  /api/v2/organization_fields:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationFieldsResponse"
      tags:
      - "Organization Fields"
      description: "Returns a list of custom organization fields in your account. Fields are returned in the order that you specify in your organization fields configuration in Zendesk Support. Clients should cache this resource for the duration of their API usage and map the key for each organization field to the values returned under the `organization_fields` attribute on the [organization](/api-reference/ticketing/organizations/organizations/) resource.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListOrganizationFields"
      summary: "List Organization Fields"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/OrganizationFieldResponse"
      tags:
      - "Organization Fields"
      description: "Creates any of the following custom field types:\n\n* text (default when no \"type\" is specified)\n* textarea\n* checkbox\n* date\n* integer\n* decimal\n* regexp\n* dropdown\n* lookup\n* multiselect\n\nSee [About custom field types](https://support.zendesk.com/hc/en-us/articles/203661866) in Zendesk help.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateOrganizationField"
      summary: "Create Organization Field"
  /api/v2/organization_fields/reorder:
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Organization Fields"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ReorderOrganizationField"
      summary: "Reorder Organization Field"
  /api/v2/organization_fields/{organization_field_id}:
    parameters:
    - description: "The ID or key of the organization field"
      in: "path"
      name: "organization_field_id"
      required: true
      x-example: "my_text_field"
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Organization Fields"
      description: "#### Allowed for\n\n* Admins\n"
      operationId: "DeleteOrganizationField"
      summary: "Delete Organization Field"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationFieldResponse"
      tags:
      - "Organization Fields"
      description: "#### Allowed for\n\n* Agents\n"
      operationId: "ShowOrganizationField"
      summary: "Show Organization Field"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationFieldResponse"
      tags:
      - "Organization Fields"
      description: "#### Updating a Dropdown (Tagger) or Multiselect Field\n\nDropdown and multiselect fields return an array of `custom_field_options` which specify the name, value, and order of dropdown or multiselect options. When updating a dropdown or multiselect field, note the following information:\n\n- All options must be passed on update. Options that are not passed will be removed. As a result, these values will be removed from any organizations\n- To create a new option, pass a null `id` along with the `name` and `value`\n- To update an existing option, pass its `id` along with the `name` and `value`\n- To reorder an option, reposition it in the `custom_field_options` array relative to the other options\n- To remove an option, omit it from the list of options upon update\n\n#### Example Request\n\n```bash\ncurl https://{subdomain}.zendesk.com/api/v2/organization_fields/{organization_field_id}.json \\\n  -H \"Content-Type: application/json\" -X PUT \\\n  -d '{\"organization_field\": {\"custom_field_options\": [{\"id\": 124, \"name\": \"Option 2\", \"value\": \"option_2\"}, {\"id\": 123, \"name\": \"Option 1\", \"value\": \"option_1\"}, {\"id\": 125, \"name\": \"Option 3\", \"value\": \"option_3\"}]}}' \\\n  -v -u {email_address}/token:{api_token}\n```\n#### Allowed for\n\n* Admins\n"
      operationId: "UpdateOrganizationField"
      summary: "Update Organization Field"
  /api/v2/organization_memberships:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationMembershipsResponse"
      tags:
      - "Organization Memberships"
      description: "Returns a list of organization memberships for the account, user or organization in question.\n\n**Note**: When returning organization memberships for a user, organization memberships are sorted with the default organization first, and then by organization name.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n- Agents\n- End users\n"
      operationId: "ListOrganizationMemberships"
      summary: "List Memberships"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/OrganizationMembershipResponse"
      tags:
      - "Organization Memberships"
      description: "Assigns a user to a given organization. Returns an error with status 422 if the user is already assigned to the organization.\n\n#### Allowed For\n\n* Admins\n* Agents when creating a new organization membership for an end user\n"
      operationId: "CreateOrganizationMembership"
      summary: "Create Membership"
  /api/v2/organization_memberships/create_many:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Organization Memberships"
      description: "Accepts an array of up to 100 organization membership objects.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n* Admins\n* Agents\n"
      operationId: "CreateManyOrganizationMemberships"
      summary: "Create Many Memberships"
  /api/v2/organization_memberships/destroy_many:
    delete:
      produces:
      - "application/json"
      parameters:
      - collectionFormat: "multi"
        description: "The IDs of the organization memberships to delete"
        in: "query"
        items:
          type: "integer"
        name: "ids"
        type: "array"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Organization Memberships"
      description: "Immediately removes a user from an organization and schedules a job to unassign all working tickets currently assigned to the user and organization combination. The `organization_id` of the unassigned tickets is set to null.\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "DeleteManyOrganizationMemberships"
      summary: "Bulk Delete Memberships"
  /api/v2/organization_memberships/{organization_membership_id}:
    parameters:
    - description: "The ID of the organization membership"
      in: "path"
      name: "organization_membership_id"
      required: true
      type: "integer"
      x-example: 4
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Organization Memberships"
      description: "Immediately removes a user from an organization and schedules a job to unassign all working tickets currently assigned to the user and organization combination. The `organization_id` of the unassigned tickets is set to null.\n\n#### Allowed for\n\n* Admins\n* Agents when deleting an organization membership for an end user\n"
      operationId: "DeleteOrganizationMembership"
      summary: "Delete Membership"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationMembershipResponse"
      tags:
      - "Organization Memberships"
      description: "#### Allowed for\n\n* Agents\n"
      operationId: "ShowOrganizationMembershipById"
      summary: "Show Membership"
  /api/v2/organization_merges/{organization_merge_id}:
    parameters:
    - description: "The ID of the organization merge"
      in: "path"
      name: "organization_merge_id"
      required: true
      type: "string"
      x-example: "01HPZM6206BF4G63783E5349AD"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationMergeResponse"
      tags:
      - "Organizations"
      description: "Retrieves the details of a specific organization merge operation. This endpoint is useful for obtaining the status and outcome of a merge that was previously initiated. It provides information such as the winning and losing organization IDs, the status of the merge, and the associated URLs.\n\nThis endpoint can be used to determine if a merge is still in progress, has completed successfully, or has encountered an error.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ShowOrganizationMerge"
      summary: "Show Organization Merge"
  /api/v2/organization_subscriptions:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/OrganizationSubscriptionsResponse"
      tags:
      - "Organization Subscriptions"
      description: "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For:\n\n* Agents\n* End users\n\nFor end users, the response will only list the subscriptions created by the requesting end user."
      operationId: "ListOrganizationSubscriptions"
      summary: "List Organization Subscriptions"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/OrganizationSubscriptionCreateRequest"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/OrganizationSubscriptionResponse"
      tags:
      - "Organization Subscriptions"
      description: "#### Allowed For:\n\n* Agents\n* End users\n\nEnd users can only subscribe to shared organizations in which they're members."
      operationId: "CreateOrganizationSubscription"
      summary: "Create Organization Subscription"
  /api/v2/organization_subscriptions/{organization_subscription_id}:
    delete:
      parameters:
      - description: "The ID of the organization subscription"
        in: "path"
        name: "organization_subscription_id"
        required: true
        type: "integer"
        x-example: 35436
      responses:
        204:
          description: "No content"
      tags:
      - "Organization Subscriptions"
      description: "#### Allowed For:\n\n* Agents\n* End users"
      operationId: "DeleteOrganizationSubscription"
      summary: "Delete Organization Subscription"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the organization subscription"
        in: "path"
        name: "organization_subscription_id"
        required: true
        type: "integer"
        x-example: 35436
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/OrganizationSubscriptionResponse"
      tags:
      - "Organization Subscriptions"
      description: "#### Allowed For:\n\n* Agents\n* End users\n\nFor end users, the response will only list the subscriptions created by the requesting end user."
      operationId: "ShowOrganizationSubscription"
      summary: "Show Organization Subscription"
  /api/v2/organizations:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationsResponse"
      tags:
      - "Organizations"
      description: "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents, with certain restrictions\n\nIf the agent has a custom agent role that restricts their access to only users in their own organization, a 403 Forbidden error is returned. See [Creating custom agent roles](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents#topic_cxn_hig_bd) in Zendesk help.\n"
      operationId: "ListOrganizations"
      summary: "List Organizations"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateOrganizationRequest"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/OrganizationResponse"
      tags:
      - "Organizations"
      description: "You must provide a unique `name` for each organization. Normally\nthe system doesn't allow records to be created with identical names.\nHowever, a race condition can occur if you make two or more identical\nPOSTs very close to each other, causing the records to have identical\norganization names.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage organizations (Enterprise only)\n"
      operationId: "CreateOrganization"
      summary: "Create Organization"
  /api/v2/organizations/autocomplete:
    parameters:
    - description: "A substring of an organization to search for"
      in: "query"
      name: "name"
      required: true
      type: "string"
      x-example: "imp"
    - description: "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
      in: "query"
      name: "field_id"
      type: "string"
    - description: "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
      examples:
        organization:
          summary: "A reference to an organization"
          value: "zen:organization"
        ticket:
          summary: "A reference to a ticket"
          value: "zen:ticket"
        user:
          summary: "A reference to a user"
          value: "zen:user"
      in: "query"
      name: "source"
      type: "string"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationsResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Errors"
        429:
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/Errors"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Errors"
      tags:
      - "Organizations"
      description: "Returns an array of organizations whose name starts with the\nvalue specified in the `name` parameter.\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n"
      operationId: "AutocompleteOrganizations"
      summary: "Autocomplete Organizations"
  /api/v2/organizations/count:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CountOrganizationResponse"
      tags:
      - "Organizations"
      description: "Returns an approximate count of organizations. If the count exceeds\n100,000, it is updated every 24 hours.\n\nThe `refreshed_at` property of the `count` object is a timestamp that indicates\nwhen the count was last updated.\n\nWhen the count exceeds 100,000, the `refreshed_at` property may\noccasionally be null. This indicates that the count is being\nupdated in the background and the `value` property of the `count` object is limited to\n100,000 until the update is complete.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CountOrganizations"
      summary: "Count Organizations"
  /api/v2/organizations/create_many:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Organizations"
      description: "Accepts an array of up to 100 organization objects.\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents, with restrictions applying on certain actions\n"
      operationId: "CreateManyOrganizations"
      summary: "Create Many Organizations"
  /api/v2/organizations/create_or_update:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationResponse"
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/OrganizationResponse"
      tags:
      - "Organizations"
      description: "Creates an organization if it doesn't already exist, or updates\nan existing organization. Using this method means one less call\nto check if an organization exists before creating it. You need\nto specify the id or external id when updating\nan organization to avoid a duplicate error response. Name is\nnot available as a matching criteria.\n\n#### Allowed For\n\n* Agents, with restrictions on certain actions\n"
      operationId: "CreateOrUpdateOrganization"
      summary: "Create Or Update Organization"
  /api/v2/organizations/destroy_many:
    parameters:
    - description: "A list of organization ids"
      in: "query"
      name: "ids"
      type: "string"
      x-example: "35436,20057623"
    - description: "A list of external ids"
      in: "query"
      name: "external_ids"
      type: "string"
      x-example: "1764,42156"
    delete:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Organizations"
      description: "Accepts a comma-separated list of up to 100 organization ids or external ids.\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage organizations (Enterprise only)\n"
      operationId: "DeleteManyOrganizations"
      summary: "Bulk Delete Organizations"
  /api/v2/organizations/search:
    parameters:
    - description: "The external id of an organization"
      in: "query"
      name: "external_id"
      type: "integer"
      x-example: 1234
    - description: "The name of an organization"
      in: "query"
      name: "name"
      type: "string"
      x-example: "ACME Incorporated"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationsResponse"
      tags:
      - "Organizations"
      description: "Returns an array of organizations matching the criteria. You may search by an organization's `external_id` or `name`, but not both:\n\n#### Searching by `external_id`\n\nIf you set the `external_id` value of an organization to associate it to an external record, you can use it to search for the organization.\n\nFor an organization to be returned, its `external_id` must exactly match the value provided (case insensitive).\n\n#### Searching by `name`\n\nFor an organization to be returned, its `name` must exactly match the value provided (case insensitive).\n\n#### Allowed For:\n\n* Admins\n* Agents assigned to a custom role with permissions to add or modify organizations (Enterprise only)\n\nSee [Creating custom agent roles](https://support.zendesk.com/hc/en-us/articles/203662026#topic_cxn_hig_bd) in the Support Help Center.\n"
      operationId: "SearchOrganizations"
      summary: "Search Organizations"
  /api/v2/organizations/show_many:
    parameters:
    - description: "A list of organization ids"
      in: "query"
      name: "ids"
      type: "string"
      x-example: "35436,20057623"
    - description: "A list of external ids"
      in: "query"
      name: "external_ids"
      type: "string"
      x-example: "1764,42156"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationsResponse"
      tags:
      - "Organizations"
      description: "Accepts a comma-separated list of up to 100 organization ids or external ids.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ShowManyOrganizations"
      summary: "Show Many Organizations"
  /api/v2/organizations/update_many:
    parameters:
    - description: "A list of organization ids"
      in: "query"
      name: "ids"
      type: "string"
      x-example: "35436,20057623"
    - description: "A list of external ids"
      in: "query"
      name: "external_ids"
      type: "string"
      x-example: "1764,42156"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Organizations"
      description: "Bulk or batch updates up to 100 organizations.\n\n#### Bulk update\n\nTo make the same change to multiple organizations, use the following endpoint and data format:\n\n`https://{subdomain}.zendesk.com/api/v2/organizations/update_many.json?ids=1,2,3`\n\n```js\n{\n  \"organization\": {\n    \"notes\": \"Priority\"\n  }\n}\n```\n\n#### Batch update\n\nTo make different changes to multiple organizations, use the following endpoint and data format:\n\n`https://{subdomain}.zendesk.com/api/v2/organizations/update_many.json`\n\n```js\n{\n  \"organizations\": [\n    { \"id\": 1, \"notes\": \"Priority\" },\n    { \"id\": 2, \"notes\": \"Normal\" }\n  ]\n}\n```\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Admins\n* Agents\n\nAgents with no permissions restrictions can only update \"notes\" on organizations.\n"
      operationId: "UpdateManyOrganizations"
      summary: "Update Many Organizations"
  /api/v2/organizations/{organization_id}:
    parameters:
    - description: "The ID of an organization"
      in: "path"
      name: "organization_id"
      required: true
      type: "integer"
      x-example: 16
    delete:
      parameters: []
      responses:
        204:
          description: "No Content Response"
      tags:
      - "Organizations"
      description: "#### Allowed For\n\n* Admins\n* Agents assigned to a custom role with permissions to manage organizations (Enterprise only)\n"
      operationId: "DeleteOrganization"
      summary: "Delete Organization"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationResponse"
      tags:
      - "Organizations"
      description: "#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ShowOrganization"
      summary: "Show Organization"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationResponse"
        429:
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/Errors"
      tags:
      - "Organizations"
      description: "#### Allowed For\n\n* Admins\n* Agents\n\nAgents with no permissions restrictions can only update \"notes\" on organizations.\n\n**Note:** Updating an organization's `domain_names` property overwrites all existing `domain_names` values. To prevent this, submit a complete list of `domain_names` for the organization in your request.\n\n#### Example Request\n\n```js\n{\n  \"organization\": {\n    \"notes\": \"Something interesting\"\n  }\n}\n```\n"
      operationId: "UpdateOrganization"
      summary: "Update Organization"
  /api/v2/organizations/{organization_id}/merge:
    parameters:
    - description: "The ID of an organization"
      in: "path"
      name: "organization_id"
      required: true
      type: "integer"
      x-example: 16
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/OrganizationMergeRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationMergeResponse"
      tags:
      - "Organizations"
      description: "Merges two organizations by moving all users, tickets, and domain names from the organization specified by `{organization_id}` to the organization specified by `winner_id`. After the merge:\n\n- The \"losing\" organization will be deleted.\n- Other organization fields and their values will not be carried over to the \"winning\" organization.\n- The merge operation creates an `Organization Merge` record which contains a status indicating the progress of the merge.\n\n**Note**: This operation is irreversible.\n\n#### Merge Statuses\n\n| Status | Description |\n|--------|-------------|\n| new | A job has been queued to merge the two organizations. |\n| in progress | The job to merge the two organizations has started. |\n| error | An error occurred during the merge job. The merge can be retried by repeating the API call. | \n| complete | The merge has been completed successfully. |\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateOrganizationMerge"
      summary: "Merge Organization With Another Organization"
  /api/v2/organizations/{organization_id}/merges:
    parameters:
    - description: "The ID of an organization"
      in: "path"
      name: "organization_id"
      required: true
      type: "integer"
      x-example: 16
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationMergeListResponse"
      tags:
      - "Organizations"
      description: "Retrieves a list of all organization merge operations associated with a given organization. This endpoint allows you to track the history of merge actions for an organization, including ongoing and completed merges.\n\nEach entry in the list contains details such as the ID of the merge, the winning and losing organization IDs, the current status of the merge, and a URL to access the `Organization Merge` record.\n\n#### Pagination\n\n- Cursor pagination is used for this endpoint.\n- A maximum of 100 records can be returned per page.\n\nSee [Pagination](/api-reference/introduction/pagination/) for more details.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ListOrganizationMerges"
      summary: "List Organization Merges"
  /api/v2/organizations/{organization_id}/related:
    parameters:
    - description: "The ID of an organization"
      in: "path"
      name: "organization_id"
      required: true
      type: "integer"
      x-example: 16
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationsRelatedResponse"
      tags:
      - "Organizations"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "OrganizationRelated"
      summary: "Show Organization's Related Information"
  /api/v2/problems:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ListTicketProblemsResponse"
      tags:
      - "Tickets"
      description: "The response is always ordered by `updated_at` in descending order\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/)."
      operationId: "ListTicketProblems"
      summary: "List Ticket Problems"
  /api/v2/problems/autocomplete:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The text to search for"
        in: "query"
        name: "text"
        type: "string"
      - in: "body"
        name: "body"
        schema:
          properties:
            text:
              description: "The text to search for"
              type: "string"
          type: "object"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ListTicketProblemsResponse"
      tags:
      - "Tickets"
      description: "Returns tickets whose type is \"problem\" and whose subject contains the string specified in the `text` parameter.\n\nYou can specify the `text` parameter in the request body rather than the query string. Example:\n\n`{\"text\": \"fire\"}`\n\n#### Allowed For\n\n* Agents"
      operationId: "AutocompleteProblems"
      summary: "Autocomplete Problems"
  /api/v2/push_notification_devices/destroy_many:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/PushNotificationDevicesRequest"
      responses:
        200:
          description: "Successful response"
          schema:
            description: "empty"
            example: ""
            type: "string"
      tags:
      - "Push Notification Devices"
      description: "Unregisters the mobile devices that are receiving push notifications. Specify the devices as an array of mobile device tokens.\n\n#### Allowed for\n\n* Admins"
      operationId: "PushNotificationDevices"
      summary: "Bulk Unregister Push Notification Devices"
  /api/v2/queues:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/QueuesResponse"
      tags:
      - "Omnichannel Routing Queues"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ListQueues"
      summary: "List queues"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/QueueResponse"
      tags:
      - "Omnichannel Routing Queues"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "CreateQueue"
      summary: "Create queue"
  /api/v2/queues/definitions:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/DefinitionsResponse"
      tags:
      - "Omnichannel Routing Queues"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ListQueueDefinitions"
      summary: "List queue definitions"
  /api/v2/queues/{queue_id}:
    parameters:
    - description: "The id of the omnichannel routing queue"
      in: "path"
      name: "queue_id"
      required: true
      type: "string"
      x-example: "01HG80ATNNZK1N7XRFVKX48XD6"
    delete:
      parameters: []
      responses:
        204:
          description: "No content response"
      tags:
      - "Omnichannel Routing Queues"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "DeleteQueue"
      summary: "Delete queue"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/QueueResponse"
      tags:
      - "Omnichannel Routing Queues"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ShowQueueById"
      summary: "Show Queue"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/QueueResponse"
      tags:
      - "Omnichannel Routing Queues"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "UpdateQueue"
      summary: "Update queue"
  /api/v2/recipient_addresses:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SupportAddressesResponse"
      tags:
      - "Support Addresses"
      description: "Lists all the support addresses for the account.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ListSupportAddresses"
      summary: "List Support Addresses"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/SupportAddressResponse"
      tags:
      - "Support Addresses"
      description: "Adds a Zendesk or external support address to your account.\n\nTo add a Zendesk address, use the following syntax: `{local-part}@{accountname}.zendesk.com`.\nExample: 'sales-team@example.zendesk.com'. The [local-part](https://en.wikipedia.org/wiki/Email_address#Local-part) can be anything you like.\n\nTo add an external email address such as help@omniwearshop.com, the email must already exist and you must set up forwarding on your email server. The exact steps depend on your mail server. See [Forwarding incoming email to Zendesk Support](https://support.zendesk.com/hc/en-us/articles/203663266). After setting up forwarding, run the [Verify Support Address Forwarding](#verify-support-address-forwarding) endpoint. The address won't work in Zendesk Support until it's been verified.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to manage channels and extensions. See the system permissions in [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents-Enterprise-#topic_cxn_hig_bd) in the Support Help Center\n"
      operationId: "CreateSupportAddress"
      summary: "Create Support Address"
  /api/v2/recipient_addresses/{support_address_id}:
    parameters:
    - description: "The ID of the support address"
      in: "path"
      name: "support_address_id"
      required: true
      type: "integer"
      x-example: 33
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Support Addresses"
      description: "Deletes a support address.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to manage channels and extensions. See the system permissions in [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents-Enterprise-#topic_cxn_hig_bd) in the Support Help Center\n"
      operationId: "DeleteRecipientAddress"
      summary: "Delete Support Address"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SupportAddressResponse"
      tags:
      - "Support Addresses"
      description: "#### Allowed For\n\n* Admins\n* Agents\n"
      operationId: "ShowSupportAddress"
      summary: "Show Support Address"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SupportAddressResponse"
      tags:
      - "Support Addresses"
      description: "Updates an existing support address for your account.\n\nYou can't use this endpoint to update a support address's `email` property.\nInstead, you can create a new address using the [Create Support\nAddress](#create-support-address) endpoint.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to manage channels and extensions. See the system permissions in [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents-Enterprise-#topic_cxn_hig_bd) in the Support Help Center\n"
      operationId: "UpdateSupportAddress"
      summary: "Update Support Address"
  /api/v2/recipient_addresses/{support_address_id}/verify:
    parameters:
    - description: "The ID of the support address"
      in: "path"
      name: "support_address_id"
      required: true
      type: "integer"
      x-example: 33
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Support Addresses"
      description: "Sends a test email to the specified support address to verify that email forwarding for the address works. An external support address won't work in Zendesk Support until it's verified.\n\n**Note**: You don't need to verify Zendesk system support addresses.\n\nThe endpoint takes the following body: `{\"type\": \"forwarding\"}`. The value of the `type` property defaults to \"forwarding\" if none is specified, but the values \"spf\" and \"dns\" are also accepted.\n\nUse this endpoint after [adding](#create-support-address) an external support address to Zendesk Support and setting up forwarding on your email server. See [Forwarding incoming email to Zendesk Support](https://support.zendesk.com/hc/en-us/articles/203663266).\n\nThe endpoint doesn't return the results of the test. Instead, use the [Show Support Address](#show-support-address) endpoint to check that the `forwarding_status` property is \"verified\".\n\nOther verification checks can also be performed using this API. These include SPF checks and DNS checks.\n\nWhen calling the endpoint with `type` set to \"spf\", it will queries the DNS records to check that the SPF records for Zendesk are present for outbound emails.\n\nWhen calling the endpoint with `type` set to \"dns\", it runs checks on your CNAME records to make sure they are set up properly in your DNS.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to manage channels and extensions. See the system permissions in [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026-Creating-custom-roles-and-assigning-agents-Enterprise-#topic_cxn_hig_bd) in the Support Help Center\n"
      operationId: "VerifySupportAddressForwarding"
      summary: "Verify Support Address Forwarding"
  /api/v2/relationships/definitions/{target_type}:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The target type for which you would like to see filter definitions.\nThe options are \"zen:user\", \"zen:ticket\", \"zen:organization\", and \"zen:custom_object:CUSTOM_OBJECT_KEY\"\n"
        in: "path"
        name: "target_type"
        required: true
        type: "string"
        x-example: "zen:custom_object:apartment"
      - description: "The source type for which you would like to see filter definitions.\nThe options are \"zen:user\", \"zen:ticket\", and \"zen:organization\"\n"
        in: "query"
        name: "source_type"
        type: "string"
        x-example: "zen:user"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/RelationshipFilterDefinitionResponse"
      tags:
      - "Lookup Relationships"
      description: "Returns filter definitions based on the given target type.  Target types\ninclude users (zen:user), tickets (zen:ticket), organizations (zen:organization), or custom objects (zen:custom_object:CUSTOM_OBJECT_KEY).\nThe returned filter definitions are the options that you can use to build a custom field or ticket field's\n`relationship_filter`.\n"
      operationId: "GetRelationshipFilterDefinitions"
      summary: "Filter Definitions"
  /api/v2/requests:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Possible values are \"updated_at\", \"created_at\""
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "One of \"asc\", \"desc\". Defaults to \"asc\""
        in: "query"
        name: "sort_order"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/RequestsResponse"
      tags:
      - "Requests"
      description: "#### Allowed for\n\n* End Users\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ListRequests"
      summary: "List Requests"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/RequestResponse"
      tags:
      - "Requests"
      description: "Accepts a `request` object that sets one or more properties.\n\n#### Allowed for\n\n* End users\n* Anonymous users (rate limit of 5 requests per hour for [trial accounts](/documentation/developer-tools/getting-started/getting-a-trial-or-sponsored-account-for-development/))\n\n#### Additional properties\n\nIn addition to the writable request properties in the [JSON Format table](#json-format) above, you can set the following properties when creating a request.\n\n| Name                | Type   | Mandatory | Comment\n| ----------------    | -------| --------- | -------\n| comment             | object | yes       | Describes the problem, incident, question, or task. See [Request comments](#request-comments)\n| collaborators       | array  | no        | Adds collaborators (cc's) to the request. An email notification is sent to them when the ticket is created. See [Setting collaborators](/documentation/ticketing/managing-tickets/creating-and-managing-requests#setting-collaborators)\n| requester           | object | yes*      | \\*Required for anonymous requests. Specifies the requester of the anonymous request. See [Creating anonymous requests](/documentation/ticketing/managing-tickets/creating-and-managing-requests#creating-anonymous-requests)\n\n#### Creating follow-up requests\n\nOnce a ticket is closed (as distinct from solved), it can't be reopened. However, you can create a new request that references the closed ticket. To create the follow-up request, include a `via_followup_source_id` property in the `request` object that specifies the closed ticket. The parameter only works with closed tickets. It has no effect with other tickets.\n"
      operationId: "CreateRequest"
      summary: "Create Request"
  /api/v2/requests/search:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The syntax and matching logic for the string is detailed in the [Zendesk Support search reference](https://support.zendesk.com/hc/en-us/articles/203663226). See also [Query basics](/api-reference/ticketing/ticket-management/search/#query-basics) in the Tickets API doc."
        in: "query"
        name: "query"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/RequestsResponse"
      tags:
      - "Requests"
      description: "Examples:\n\n* `GET /api/v2/requests/search.json?query=printer`\n* `GET /api/v2/requests/search.json?query=printer&organization_id=1`\n* `GET /api/v2/requests/search.json?query=printer&cc_id=true`\n* `GET /api/v2/requests/search.json?query=printer&status=hold,open`\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Results limit\n\nThe Search Requests endpoint returns up to 1,000 results per query, with a maximum of 100 results per page. See [Pagination](/api-reference/ticketing/introduction/#pagination). If you request a page past the limit (`page=11` at 100 results per page), a 422 Insufficient Resource Error is returned.\n\n#### Allowed For\n\n* End Users\n"
      operationId: "SearchRequests"
      summary: "Search Requests"
  /api/v2/requests/{request_id}:
    parameters:
    - description: "The ID of the request"
      in: "path"
      name: "request_id"
      required: true
      type: "integer"
      x-example: 33
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/RequestResponse"
      tags:
      - "Requests"
      description: "#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| users            | The email ccs for a request by side-loading users\n\n#### Allowed For\n\n* End Users\n"
      operationId: "ShowRequest"
      summary: "Show Request"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/RequestResponse"
      tags:
      - "Requests"
      description: "Updates a request with a comment or collaborators (cc's). The end user who created the request can also use it to mark the request as solved. The endpoint can't be used to update other request attributes.\n\n#### Writable properties\nThis endpoint can only update the following properties in the request.\n\n| Name                     | Type    | Required | Description                                          |\n| ------------------------ | ------- | -------- | ---------------------------------------------------- |\n| comment                  | object  | no       | Adds a comment to the request. See [Request comments](#request-comments) |\n| solved                   | boolean | no       | Marks the request as solved. Example: `{\"request\": {\"solved\": \"true\"}}`. End users can mark requests as solved only if the request's `can_be_solved_by_me` property is true. The property is true only when the ticket is assigned to an agent and the ticket type is not a problem but a question, task, or incident |\n| additional_collaborators | array   | no       | Adds collaborators to the request. An email notification is sent to them when the ticket is updated. See [Adding collaborators](/documentation/ticketing/managing-tickets/creating-and-managing-requests#adding-collaborators) |\n\n#### Allowed For\n\n* End users\n"
      operationId: "UpdateRequest"
      summary: "Update Request"
  /api/v2/requests/{request_id}/comments:
    parameters:
    - description: "The ID of the request"
      in: "path"
      name: "request_id"
      required: true
      type: "integer"
      x-example: 33
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Filters the comments from the given datetime"
        in: "query"
        name: "since"
        type: "string"
      - description: "One of \"agent\", \"end_user\". If not specified it does not filter"
        in: "query"
        name: "role"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketCommentsResponse"
      tags:
      - "Requests"
      description: "#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Sorting\n\nBy default, comments are sorted by creation date in ascending order.\n\nWhen using cursor pagination, use the following parameter to change the sort order:\n\n| Name   | Type   | Required | Comments\n| ------ | ------ | -------- | --------\n| `sort` | string | no       | Possible values are \"created_at\" (ascending order) or \"-created_at\" (descending order)\n\nWhen using offset pagination, use the following parameters to change the sort order:\n\n| Name         | Type   | Required | Comments\n| ------------ | ------ | -------- | --------\n| `sort_by`    | string | no       | One of `created_at`, `updated_at`\n| `sort_order` | string | no       | One of `asc`, `desc`\n\n#### Allowed For\n\n* End Users\n"
      operationId: "ListComments"
      summary: "Listing Comments"
  /api/v2/requests/{request_id}/comments/{ticket_comment_id}:
    parameters:
    - description: "The ID of the request"
      in: "path"
      name: "request_id"
      required: true
      type: "integer"
      x-example: 33
    - description: "The ID of the ticket comment"
      in: "path"
      name: "ticket_comment_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketCommentResponse"
      tags:
      - "Requests"
      description: "#### Allowed For\n\n* End Users\n"
      operationId: "ShowComment"
      summary: "Getting Comments"
  /api/v2/resource_collections:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ResourceCollectionsResponse"
      tags:
      - "Resource Collections"
      description: "Lists resource collections for the account.\n\n#### Allowed for\n\n* Admins\n"
      operationId: "ListResourceCollections"
      summary: "List Resource Collections"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Resource Collections"
      description: "Creates a resource collection from a provided `payload` object. The `payload` object is specified the same way as the content of a requirements.json file in a Zendesk app. See [Specifying Apps Requirements](/documentation/apps/app-developer-guide/apps_requirements/) in the Zendesk Apps framework docs.\n\nThe response includes a [job\nstatus](/api-reference/ticketing/ticket-management/job_statuses/) for creation of the specified resources.\n\n#### Allowed for\n\n* Admins\n"
      operationId: "CreateResourceCollection"
      summary: "Create Resource Collection"
  /api/v2/resource_collections/{resource_collection_id}:
    parameters:
    - description: "The id of the resource collection"
      in: "path"
      name: "resource_collection_id"
      required: true
      type: "integer"
      x-example: 10002
    delete:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Resource Collections"
      description: "Deletes a specified resource collection.\n\nThe response includes a [job\nstatus](/api-reference/ticketing/ticket-management/job_statuses/) for deletion of the collection's resources.\n\n#### Allowed for\n\n* Admins\n"
      operationId: "DeleteResourceCollection"
      summary: "Delete Resource Collection"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ResourceCollectionResponse"
      tags:
      - "Resource Collections"
      description: "Retrieves details for a specified resource collection.\n\n#### Allowed for\n\n* Admins\n"
      operationId: "RetrieveResourceCollection"
      summary: "Show Resource Collection"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Resource Collections"
      description: "Updates a resource collection using a provided `payload` object. The `payload` object  is specified the same way as the content of a requirements.json file in a Zendesk app. See [Specifying Apps Requirements](/documentation/apps/app-developer-guide/apps_requirements/) in the Zendesk Apps framework docs.\n\nThe response includes a [job\nstatus](/api-reference/ticketing/ticket-management/job_statuses/) for the resource updates.\n\n#### Allowed for\n\n* Admins\n"
      operationId: "UpdateResourceCollection"
      summary: "Update Resource Collection"
  /api/v2/routing/agents/{user_id}/instance_values:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeValuesResponse"
      tags:
      - "Skill Based Routing"
      description: "Returns an attribute value.\n\n#### Allowed For\n\n* Agents and admins\n"
      operationId: "ListAGentAttributeValues"
      summary: "List Agent Attribute Values"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeValuesResponse"
      tags:
      - "Skill Based Routing"
      description: "Adds the specified attributes if no attributes exists, or replaces all existing attributes with the specified attributes.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "SetAgentAttributeValues"
      summary: "Set Agent Attribute Values"
  /api/v2/routing/attributes:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributesResponse"
      tags:
      - "Skill Based Routing"
      description: "Returns a list of attributes for the account.\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| attribute_values | The attribute values available on the account\n\n#### Allowed For\n\n* Agents and admins\n"
      operationId: "ListAccountAttributes"
      summary: "List Account Attributes"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeResponse"
      tags:
      - "Skill Based Routing"
      description: "Creates an attribute.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CreateAttribute"
      summary: "Create Attribute"
  /api/v2/routing/attributes/definitions:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeDefinitions"
      tags:
      - "Skill Based Routing"
      description: "Returns the condition definitions that can be configured to apply attributes to a ticket.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ListRoutingAttributeDefinitions"
      summary: "List Routing Attribute Definitions"
  /api/v2/routing/attributes/{attribute_id}:
    parameters:
    - description: "The ID of the skill-based routing attribute"
      in: "path"
      name: "attribute_id"
      required: true
      type: "string"
      x-example: "6e279587-e930-11e8-a292-09cfcdea1b75"
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Skill Based Routing"
      description: "Deletes an attribute.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "DeleteAttribute"
      summary: "Delete Attribute"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeResponse"
      tags:
      - "Skill Based Routing"
      description: "Returns an attribute.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ShowAttribute"
      summary: "Show Attribute"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeResponse"
      tags:
      - "Skill Based Routing"
      description: "Updates an attribute.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateAttribute"
      summary: "Update Attribute"
  /api/v2/routing/attributes/{attribute_id}/values:
    parameters:
    - description: "The ID of the skill-based routing attribute"
      in: "path"
      name: "attribute_id"
      required: true
      type: "string"
      x-example: "6e279587-e930-11e8-a292-09cfcdea1b75"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeValuesResponse"
      tags:
      - "Skill Based Routing"
      description: "Returns a list of attribute values for a provided attribute.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ListAttributeValues"
      summary: "List Attribute Values for an Attribute"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeValueResponse"
      tags:
      - "Skill Based Routing"
      description: "Creates an attribute value.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateAttributeValue"
      summary: "Create Attribute Value"
  /api/v2/routing/attributes/{attribute_id}/values/{attribute_value_id}:
    parameters:
    - description: "The ID of the skill-based routing attribute"
      in: "path"
      name: "attribute_id"
      required: true
      type: "string"
      x-example: "6e279587-e930-11e8-a292-09cfcdea1b75"
    - description: "The ID of the skill-based routing attribute value"
      in: "path"
      name: "attribute_value_id"
      required: true
      type: "string"
      x-example: "b376b35a-e38b-11e8-a292-e3b6377c5575"
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Skill Based Routing"
      description: "Deletes an attribute value.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "DeleteAttributeValue"
      summary: "Delete Attribute Value"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeValueResponse"
      tags:
      - "Skill Based Routing"
      description: "Returns an attribute value.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ShowAttributeValue"
      summary: "Show Attribute Value"
    patch:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeValueResponse"
      tags:
      - "Skill Based Routing"
      description: "Updates the name and ticket conditions of a skill. When a ticket is created, the skill is applied to a ticket  if the ticket meets the specified condition or conditions. See the [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference/) for more information.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateAttributeValue"
      summary: "Update Attribute Value"
  /api/v2/routing/requirements/fulfilled:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The IDs of the relevant tickets to check for matching attributes"
        in: "query"
        name: "ticket_ids"
        required: true
        type: "integer"
        x-example: 1
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingTicketFulfilledResponse"
      tags:
      - "Skill Based Routing"
      description: "Returns a list of ticket ids that contain attributes matching the current user's attributes. Accepts a `ticket_ids` parameter for relevant tickets to check for matching attributes.\n\n#### Allowed For\n\n* Agents and admins\n"
      operationId: "ListTicketsFullfilledByUser"
      summary: "List Tickets Fulfilled by a User"
  /api/v2/routing/tickets/{ticket_id}/instance_values:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeValuesResponse"
      tags:
      - "Skill Based Routing"
      description: "Returns a list of attributes values for the ticket.\n\n#### Allowed For\n\n* Agents and admins\n"
      operationId: "ListTicketAttributeValues"
      summary: "List Ticket Attribute Values"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SkillBasedRoutingAttributeValuesResponse"
      tags:
      - "Skill Based Routing"
      description: "Adds the specified attributes if no attributes exists, or replaces all existing attributes with the specified attributes.\n\nInvalid or deleted attributes are ignored.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "SetTicketAttributeValues"
      summary: "Set Ticket Attribute Values"
  /api/v2/satisfaction_ratings:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SatisfactionRatingsResponse"
      tags:
      - "Satisfaction Ratings"
      description: "#### Allowed For\n* Admins\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Filters\n\n| Parameter  | Value\n| ---------- | -----\n| score      | offered, unoffered, received, received\\_with\\_comment, received\\_without\\_comment,<br/>good, good\\_with\\_comment, good\\_without\\_comment,<br/>bad, bad\\_with\\_comment, bad\\_without\\_comment\n| start_time | Time of the oldest satisfaction rating, as a [Unix epoch time](https://www.epochconverter.com/)\n| end_time   | Time of the most recent satisfaction rating, as a [Unix epoch time](https://www.epochconverter.com/)\n\nIf you specify an unqualified score such as `good`, the results include all the records with and without comments.\n\nExamples:\n\n* `/api/v2/satisfaction_ratings.json?score=bad`\n* `/api/v2/satisfaction_ratings.json?score=bad&start_time=1498151194`\n* `/api/v2/satisfaction_ratings.json?start_time=1340384793&end_time=1371920793`\n"
      operationId: "ListSatisfactionRatings"
      summary: "List Satisfaction Ratings"
  /api/v2/satisfaction_ratings/count:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Count of satisfaction ratings"
          schema:
            $ref: "#/definitions/SatisfactionRatingsCountResponse"
      tags:
      - "Satisfaction Ratings"
      description: "Returns an approximate count of satisfaction ratings in the account. If the count exceeds 100,000, the count will return a cached result. This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Admins"
      operationId: "CountSatisfactionRatings"
      summary: "Count Satisfaction Ratings"
  /api/v2/satisfaction_ratings/{satisfaction_rating_id}:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The id of the satisfaction rating to retrieve"
        in: "path"
        name: "satisfaction_rating_id"
        required: true
        type: "integer"
        x-example: 35436
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SatisfactionRatingResponse"
      tags:
      - "Satisfaction Ratings"
      description: "Returns a specific satisfaction rating. You can get the id from\nthe [List Satisfaction Ratings](#list-satisfaction-ratings) endpoint.\n\n#### Allowed For\n\n * Admins\n"
      operationId: "ShowSatisfactionRating"
      summary: "Show Satisfaction Rating"
  /api/v2/satisfaction_reasons:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SatisfactionReasonsResponse"
      tags:
      - "Satisfaction Reasons"
      description: "List all reasons for an account\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ListSatisfactionRatingReasons"
      summary: "List Reasons for Satisfaction Rating"
  /api/v2/satisfaction_reasons/{satisfaction_reason_id}:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The id of the satisfaction rating reason"
        in: "path"
        name: "satisfaction_reason_id"
        required: true
        type: "integer"
        x-example: 35121
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SatisfactionReasonResponse"
      tags:
      - "Satisfaction Reasons"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ShowSatisfactionRatings"
      summary: "Show Reason for Satisfaction Rating"
  /api/v2/search:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The search query. See [Query basics](#query-basics) above. For details on the query syntax, see the [Zendesk Support search reference](https://support.zendesk.com/hc/en-us/articles/203663226)"
        in: "query"
        name: "query"
        required: true
        type: "string"
        x-example: "https://subdomain.zendesk.com/api/v2/search.json?query=type:ticket status:closed&sort_by=status&sort_order=desc"
      - description: "One of `updated_at`, `created_at`, `priority`, `status`, or `ticket_type`. Defaults to sorting by relevance"
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "One of `asc` or `desc`.  Defaults to `desc`"
        in: "query"
        name: "sort_order"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SearchResponse"
      tags:
      - "Search"
      description: "Returns the search results. See [Query basics](#query-basics) for the syntax of the `query` parameter.\n\nUse the ampersand character (&) to append the `sort_by` or `sort_order` parameters to the URL.\n\nFor examples, see [Searching with Zendesk API](/documentation/ticketing/using-the-zendesk-api/searching-with-the-zendesk-api).\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Offset pagination only\n\nOffset pagination may result in duplicate results when paging. You can also use the \n[Export Search Results](/api-reference/ticketing/ticket-management/search/#export-search-results) endpoint, which \nuses cursor-based pagination and doesn't return duplicate results. See \n[Using cursor pagination](/api-reference/introduction/pagination/#using-cursor-pagination) for more information.\n\n\n#### Errors JSON Format\n\nErrors are represented as JSON objects which have the following keys:\n\n| Name                  | Type                 | Comment\n| --------------------- | ---------------------| --------------------\n| error                 | string               | The type of error. Examples: \"unavailable\", \"invalid\"\n| description           | string               |\n\n##### Example Error\n```js\n{\n  \"error\": \"unavailable\",\n  \"description\": \"Sorry, we could not complete your search query. Please try again in a moment.\"\n}\n```\n"
      operationId: "ListSearchResults"
      summary: "List Search Results"
  /api/v2/search/count:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The search query"
        in: "query"
        name: "query"
        required: true
        type: "string"
        x-example: "https://subdomain.zendesk.com/api/v2/search.json?query=type:ticket status:closed"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SearchCountResponse"
      tags:
      - "Search"
      description: "Returns the number of items matching the query rather than the items. The search string works the same as a regular search.\n    \n#### Allowed For\n\n- Agents\n"
      operationId: "CountSearchResults"
      summary: "Show Results Count"
  /api/v2/search/export:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The search query. See [Query basics](#query-basics) above. For details on the query syntax, see the [Zendesk Support search reference](https://support.zendesk.com/hc/en-us/articles/203663226)"
        in: "query"
        name: "query"
        required: true
        type: "string"
        x-example: "https://subdomain.zendesk.com/api/v2/search.json?query=type:ticket status:closed&sort_by=status&sort_order=desc"
      - description: "The number of results shown in a page."
        in: "query"
        name: "page[size]"
        type: "integer"
      - description: "The object type returned by the export query. Can be `ticket`, `organization`, `user`, or `group`."
        in: "query"
        name: "filter[type]"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SearchExportResponse"
      tags:
      - "Search"
      description: "Exports a set of results. See [Query syntax](#query-syntax) for the syntax of the `query` parameter.\n\nUse this endpoint for search queries that will return more than 1000 results. The result set is ordered only by the `created_at` attribute.\n\nThe search only returns results of a single object type. The following object types are supported: ticket, organization, user, or group.\n\nYou must specify the type in the `filter[type]` parameter. Searches with type in the query string will result in an error.\n\n#### Allowed For\n\n- Agents\n\n#### Pagination\n\n- Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 1000 records per page. The number of results shown in a page is determined by the `page[size]` parameter.\n\n**Note**: You may experience a speed reduction or a timeout if you request 1000 results per page and you have many archived tickets in the results. Try reducing the number of results per page. We recommend 100 results per page.\n\nThe cursor specified by the `after_cursor` property in a response expires after one hour.\n\nFor more information on cursor-based pagination, see the following articles:\n\n- [Comparing cursor pagination and offset pagination](/documentation/developer-tools/pagination/comparing-cursor-pagination-and-offset-pagination)\n- [Paginating through lists using cursor pagination](/documentation/developer-tools/pagination/paginating-through-lists-using-cursor-pagination)\n\n#### Limits\n\nThis API endpoint is rate-limited to 100 requests per minute per account. The limit also counts towards the global API rate limit.\n\n#### Response Format\n\n| Name                  | Type                 | Comment\n| --------------------- | ---------------------| --------------------\n| links[next]           | string               | URL to the next page of results\n| meta[has_more]        | string               | Boolean indicating if there are more results\n| meta[after_cursor]    | string               | Cursor object returned from the Search Service\n| results               | array                | May consist of tickets, users, groups, or organizations, as specified by the `filter_type` parameter\n\nThe response is similar to the response of `GET /api/v2/search.json?`, with a few changes:\n\n* `links` - Has the following nested properties: `prev` and `next`. These replace the `next_page` and `prev_page` links. The `prev` property is always null because backward pagination is not supported. The `next` property may include an auto-generated link to the next page of results.\n* `meta` - Has the following nested properties: `has_more` and `after_cursor`. The `has_more` property indicates whether the next page has more results. The `after_cursor` property is the cursor used to paginate to the next page. It expires after one hour.\n\nThere's no `count` property.\n"
      operationId: "ExportSearchResults"
      summary: "Export Search Results"
  /api/v2/sessions:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SessionsResponse"
      tags:
      - "Sessions"
      description: "If authenticated as an admin, returns all the account's sessions. If authenticated as an agent or end user, returns only the sessions of the user making the request.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Allowed For\n\n* Admins, Agents, End users\n"
      operationId: "ListSessions"
      summary: "List Sessions"
  /api/v2/sharing_agreements:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SharingAgreementsResponse"
      tags:
      - "Sharing Agreements"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "ListSharingAgreements"
      summary: "List Sharing Agreements"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/SharingAgreementResponse"
      tags:
      - "Sharing Agreements"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "CreateSharingAgreement"
      summary: "Create Sharing Agreement"
  /api/v2/sharing_agreements/{sharing_agreement_id}:
    parameters:
    - description: "The ID of the sharing agreement"
      in: "path"
      name: "sharing_agreement_id"
      required: true
      type: "integer"
      x-example: 1
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Sharing Agreements"
      description: "Deletes a sharing agreement.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "DeleteSharingAgreement"
      summary: "Delete a Sharing Agreement"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SharingAgreementResponse"
      tags:
      - "Sharing Agreements"
      description: "Returns a sharing agreement for your account.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ShowSharingAgreement"
      summary: "Show a Sharing Agreement"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SharingAgreementResponse"
      tags:
      - "Sharing Agreements"
      description: "Returns an updated sharing agreement. Only `status` is allowed to be updated.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateSharingAgreement"
      summary: "Update a Sharing Agreement"
  /api/v2/skips:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketSkipCreation"
      tags:
      - "Ticket Skips"
      description: "Record a new ticket skip for the current user.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "RecordNewSkip"
      summary: "Record a New Skip for the Current User"
  /api/v2/slas/policies:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SLAPoliciesResponse"
      tags:
      - "SLA Policies"
      description: "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ListSLAPolicies"
      summary: "List SLA Policies"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/SLAPolicyResponse"
      tags:
      - "SLA Policies"
      description: "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateSLAPolicy"
      summary: "Create SLA Policy"
  /api/v2/slas/policies/definitions:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SLAPolicyFilterDefinitionResponse"
      tags:
      - "SLA Policies"
      description: "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
      operationId: "RetrieveSLAPolicyFilterDefinitionItems"
      summary: "Retrieve Supported Filter Definition Items"
  /api/v2/slas/policies/reorder:
    put:
      produces:
      - "application/json"
      parameters:
      - collectionFormat: "multi"
        description: "The IDs of the SLA Policies to reorder"
        in: "query"
        items:
          type: "integer"
        name: "sla_policy_ids"
        type: "array"
      responses:
        200:
          description: "Success response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "SLA Policies"
      description: "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ReorderSLAPolicies"
      summary: "Reorder SLA Policies"
  /api/v2/slas/policies/{sla_policy_id}:
    parameters:
    - description: "The ID of the SLA Policy"
      in: "path"
      name: "sla_policy_id"
      required: true
      type: "integer"
      x-example: 36
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "SLA Policies"
      description: "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
      operationId: "DeleteSLAPolicy"
      summary: "Delete SLA Policy"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SLAPolicyResponse"
      tags:
      - "SLA Policies"
      description: "#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ShowSLAPolicy"
      summary: "Show SLA Policy"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SLAPolicyResponse"
      tags:
      - "SLA Policies"
      description: "Updates the specified policy.\n\n#### Availability\n\n* Accounts on the Support Professional or Suite Growth plan or above\n\n#### Allowed For\n\n* Admins\n"
      operationId: "UpdateSLAPolicy"
      summary: "Update SLA Policy"
  /api/v2/suspended_tickets:
    parameters:
    - description: "The field to sort the suspended tickets by. One of \"author_email\", \"cause\", \"created_at\", or \"subject\""
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "author_email"
    - description: "The order in which to sort the suspended tickets.  This can take value `asc` or `desc`."
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "asc"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SuspendedTicketsResponse"
      tags:
      - "Suspended Tickets"
      description: "#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n\n#### Sorting\n\nYou can sort the tickets with the `sort_by` and `sort_order` query string parameters.\n\n#### Pagination\n\n* Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ListSuspendedTickets"
      summary: "List Suspended Tickets"
  /api/v2/suspended_tickets/attachments:
    parameters:
    - description: "id of the suspended ticket"
      in: "path"
      name: "id"
      required: true
      type: "number"
      x-example: 35436
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SuspendedTicketsAttachmentsResponse"
      tags:
      - "Suspended Tickets"
      description: "Makes copies of any attachments on a suspended ticket and returns them as [attachment tokens](/api-reference/ticketing/tickets/ticket-attachments/). If the  ticket is manually recovered, you can include the attachment tokens on the new ticket.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
      operationId: "SuspendedTicketsAttachments"
      summary: "Suspended Ticket Attachments"
  /api/v2/suspended_tickets/destroy_many:
    parameters:
    - description: "A comma separated list of ids of suspended tickets to delete."
      in: "query"
      name: "ids"
      required: true
      type: "string"
      x-example: "94,141"
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Suspended Tickets"
      description: "Accepts up to 100 ids (the auto-generated id, not the ticket id.)\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
      operationId: "DeleteSuspendedTickets"
      summary: "Delete Multiple Suspended Tickets"
  /api/v2/suspended_tickets/export:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/SuspendedTicketsExportResponse"
      tags:
      - "Suspended Tickets"
      description: "Exports a list of suspended tickets for the Zendesk Support instance. To export the list, the endpoint enqueues a job to create a CSV file with the data. When done, Zendesk sends the requester an email containing a link to the CSV file. In the CSV, tickets are sorted by the update timestamp in ascending order.\n\n #### Allowed For\n\n * Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n * Unrestricted agents on all other plans\n\n #### Rate limits\n\n Limited to one request per minute and up to one million records in return. The rate-limiting mechanism behaves identically to the one described in [Usage limits](/api-reference/ticketing/account-configuration/usage_limits/#monitoring-your-request-activity).\n We recommend using the `Retry-After` header value as described in [Catching errors caused by rate limiting](/documentation/ticketing/using-the-zendesk-api/best-practices-for-avoiding-rate-limiting#catch).\n"
      operationId: "ExportSuspendedTickets"
      summary: "Export Suspended Tickets"
  /api/v2/suspended_tickets/recover_many:
    parameters:
    - description: "A comma separated list of ids of suspended tickets to recover."
      in: "query"
      name: "ids"
      required: true
      type: "string"
      x-example: "14,77"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/RecoverSuspendedTicketsResponse"
      tags:
      - "Suspended Tickets"
      description: "Accepts up to 100 ids (the auto-generated id, not the ticket id.) Note that suspended tickets that fail to be recovered are still included in the response.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
      operationId: "RecoverSuspendedTickets"
      summary: "Recover Multiple Suspended Tickets"
  /api/v2/suspended_tickets/{id}:
    delete:
      parameters:
      - description: "id of the suspended ticket"
        in: "path"
        name: "id"
        required: true
        type: "number"
        x-example: 35436
      responses:
        204:
          description: "No Content response"
      tags:
      - "Suspended Tickets"
      description: "#### Allowed For\n\n* Unrestricted agents\n"
      operationId: "DeleteSuspendedTicket"
      summary: "Delete Suspended Ticket"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "id of the suspended ticket"
        in: "path"
        name: "id"
        required: true
        type: "number"
        x-example: 35436
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SuspendedTicketsResponse"
      tags:
      - "Suspended Tickets"
      description: "#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
      operationId: "ShowSuspendedTickets"
      summary: "Show Suspended Ticket"
  /api/v2/suspended_tickets/{id}/recover:
    put:
      produces:
      - "application/json"
      parameters:
      - description: "id of the suspended ticket"
        in: "path"
        name: "id"
        required: true
        type: "number"
        x-example: 35436
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/RecoverSuspendedTicketResponse"
        422:
          description: "Recovery failed response"
          schema:
            $ref: "#/definitions/RecoverSuspendedTicketUnprocessableContentResponse"
      tags:
      - "Suspended Tickets"
      description: "**Note**: During recovery, the API sets the requester to the authenticated agent who called the API, not the original requester. This prevents the ticket from being re-suspended after recovery. To preserve the original requester, use the [Recover Multiple Suspended Tickets](#recover-multiple-suspended-tickets) endpoint with the single ticket.\n\nThis endpoint does not queue an asynchronous job that can be tracked from [Job Statuses](/api-reference/ticketing/ticket-management/job_statuses/). Instead, it processes the request with a synchronous response.\n   - If all recoveries are successful, it returns a 200 with a `tickets` array in the response.\n   - If all recoveries fail, it returns a 422 with a `suspended_tickets` array in the response.\n   - If there is a mixture of successes and failures in a single call, it returns a 422 with a `suspended_tickets` array of the failures in the response.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage suspended tickets on Enterprise plans\n* Unrestricted agents on all other plans\n"
      operationId: "RecoverSuspendedTicket"
      summary: "Recover Suspended Ticket"
  /api/v2/tags:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TagsResponse"
      tags:
      - "Tags"
      description: "Lists up to the 20,000 most popular tags in the last 60 days, in decreasing popularity.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListTags"
      summary: "List Tags"
  /api/v2/tags/count:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TagCountResponse"
      tags:
      - "Tags"
      description: "Returns an approximate count of tags. If the count exceeds 100,000, it\nis updated every 24 hours.\n\nThe `refreshed_at` property of the `count` object is a timestamp that indicates when\nthe count was last updated.\n\n**Note**: When the count exceeds 100,000, the `refreshed_at` property in the `count` object may\noccasionally be null. This indicates that the count is being\nupdated in the background and the `value` property in the `count` object is limited to\n100,000 until the update is complete.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CountTags"
      summary: "Count Tags"
  /api/v2/target_failures:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TargetFailuresResponse"
      tags:
      - "Target Failures"
      description: "Returns the 25 most recent target failures, per target.\n\n#### Stability\n\n* Development\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ListTargetFailures"
      summary: "List Target Failures"
  /api/v2/target_failures/{target_failure_id}:
    parameters:
    - description: "The ID of the target failure"
      in: "path"
      name: "target_failure_id"
      required: true
      type: "integer"
      x-example: 1
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TargetFailureResponse"
      tags:
      - "Target Failures"
      description: "#### Stability\n\n* Development\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ShowTargetFailure"
      summary: "Show Target Failure"
  /api/v2/targets:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TargetsResponse"
      tags:
      - "Targets"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "ListTargets"
      summary: "List Targets"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/TargetResponse"
      tags:
      - "Targets"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "CreateTarget"
      summary: "Create Target"
  /api/v2/targets/{target_id}:
    parameters:
    - description: "The ID of the target"
      in: "path"
      name: "target_id"
      required: true
      type: "integer"
      x-example: 211
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Targets"
      description: "#### Allowed For\n* Admins\n"
      operationId: "DeleteTarget"
      summary: "Delete Target"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TargetResponse"
      tags:
      - "Targets"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "ShowTarget"
      summary: "Show Target"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TargetResponse"
      tags:
      - "Targets"
      description: "#### Allowed For\n* Admins\n"
      operationId: "UpdateTarget"
      summary: "Update Target"
  /api/v2/ticket_audits:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Maximum number of results returned"
        in: "query"
        name: "limit"
        type: "integer"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketAuditsResponse"
      tags:
      - "Ticket Audits"
      description: "Returns ticket audits. Archived tickets are not included in the response. Use the [List Audits for a Ticket](#list-audits-for-a-ticket) endpoint to \nretrieve audit records for an archived ticket. To learn more about archived tickets, see [About archived tickets](https://support.zendesk.com/hc/en-us/articles/203657756).\n\nThis endpoint should not be used for capturing change data. When continually chasing the tail of a cursor, some records will be skipped. For this use case, use the [Incremental Ticket Event Export API](/api-reference/ticketing/ticket-management/incremental_exports/#incremental-ticket-event-export).\n\n#### Pagination\n\n- Cursor pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "ListTicketAudits"
      summary: "List All Ticket Audits"
  /api/v2/ticket_fields:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Forces the `title_in_portal` property to return a dynamic content variant for the specified locale.\n Only accepts [active locale ids](/api-reference/ticketing/account-configuration/locales/#list-locales).\nExample: `locale=\"de\"`.\n"
        in: "query"
        name: "locale"
        type: "string"
      - description: "Displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, `creator_app_name` is null\n"
        in: "query"
        name: "creator"
        type: "boolean"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFieldsResponse"
      tags:
      - "Ticket Fields"
      description: "Returns a list of all system and custom ticket fields in your account.\n\nCursor pagination returns a maximum of 100 records per page and fields are returned in the order specified by their id.\n\nIf the results are not paginated every field is returned in the response and fields are returned in the order specified by the position and id.\n\nFor accounts without access to multiple ticket forms, positions can be changed using the [Update Ticket Field](/api-reference/ticketing/tickets/ticket_fields/#update-ticket-field) endpoint or the Ticket Forms page in Zendesk Support (**Admin** > **Manage** > **Ticket Forms**). The Ticket Forms page shows the fields for the account. The order of the fields is used in the different products to show the field values in the tickets.\n\nFor accounts with access to multiple ticket forms, positions can only be changed using the [Update Ticket Field](/api-reference/ticketing/tickets/ticket_fields/#update-ticket-field) endpoint because products use the order defined on each form to show the field values instead of the general position of the ticket field in the account.\n\nConsider caching this resource to use with the [Tickets](/api-reference/ticketing/tickets/tickets/#json-format) API.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- No pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| users            | The user or users that created the ticket field\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListTicketFields"
      summary: "List Ticket Fields"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/TicketFieldResponse"
      tags:
      - "Ticket Fields"
      description: "Creates any of the following custom field types:\n\n| Custom field type | Description                                                                                                                                                     |\n|-------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| text              | Default custom field type when `type` is not specified                                                                                                          |\n| textarea          | For multi-line text                                                                                                                                             |\n| checkbox          | To capture a boolean value. Allowed values are true or false                                                                                                    |\n| date              | Example: 2021-04-16                                                                                                                                   |\n| integer           | String composed of numbers. May contain an optional decimal point                                                                                               |\n| decimal           | For numbers containing decimals                                                                                                                                 |\n| regexp            | Matches the Regex pattern found in the custom field settings                                                                                                    |\n| partialcreditcard | A credit card number. Only the last 4 digits are retained                                                                                                                                      |\n| multiselect       | Enables users to choose multiple options from a dropdown menu                                                                                                |\n| tagger            | Single-select dropdown menu. It contains one or more tag values belonging to the field's options. Example: ( {\"id\": 21938362, \"value\": [\"hd_3000\", \"hd_5555\"]}) |\n| lookup            | A field to create a relationship (see [lookup relationships](/api-reference/ticketing/lookup_relationships/lookup_relationships/)) to another object such as a user, ticket, or organization |\n\nSee [About custom field types](https://support.zendesk.com/hc/en-us/articles/203661866) in the Zendesk Help Center.\n\n#### Allowed For\n\n* Admins\n\n#### Field limits\n\nWe recommend the following best practices for ticket fields limits. Creating more than these amounts can affect performance.\n\n* 400 ticket fields per account if your account doesn't have ticket forms\n* 400 ticket fields per ticket form if your account has ticket forms\n"
      operationId: "CreateTicketField"
      summary: "Create Ticket Field"
  /api/v2/ticket_fields/count:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Count of ticket fields"
          schema:
            $ref: "#/definitions/TicketFieldCountResponse"
      tags:
      - "Ticket Fields"
      description: "Returns an approximate count of system and custom ticket fields in the account. If the count exceeds 100,000, the count will return a cached result.  This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
      operationId: "CountTicketFields"
      summary: "Count Ticket Fields"
  /api/v2/ticket_fields/{ticket_field_id}:
    parameters:
    - description: "The ID of the ticket field"
      in: "path"
      name: "ticket_field_id"
      required: true
      type: "integer"
      x-example: 34
    - description: "If true, displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, then `creator_app_name` is null\n"
      in: "query"
      name: "creator"
      type: "boolean"
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Ticket Fields"
      description: "#### Allowed for\n\n* Admins\n"
      operationId: "DeleteTicketField"
      summary: "Delete Ticket Field"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFieldResponse"
      tags:
      - "Ticket Fields"
      description: "#### Allowed for\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| users            | The user or users that created the ticket field\n"
      operationId: "ShowTicketfield"
      summary: "Show Ticket Field"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFieldResponse"
      tags:
      - "Ticket Fields"
      description: "#### Updating drop-down field options\n\nYou can also use the update endpoint to add, update, or remove options in a drop-down custom field. Updating field options for multi-select fields works exactly the same as drop-down field options.\n\n**Important**: Unless you want to remove some options, you must specify all existing options in any update request. Omitting an option removes it from the drop-down field, which removes its values from any tickets or macros.\n\nUse the `custom_field_options` attribute to update the options. The attribute consists of an array of option objects, with each object consisting of a `name` and `value` property. The properties correspond to the \"Title\" and \"Tag\" text boxes in the admin interface. Example request body:\n\n```json\n{\"ticket_field\": {\n    \"custom_field_options\": [\n      {\"name\": \"Apple Pie\", \"value\": \"apple\"},\n      {\"name\": \"Pecan Pie\", \"value\": \"pecan\"}\n    ]\n  }\n}\n```\n\n#### Example Request\n\n```bash\ncurl https://{subdomain}.zendesk.com/api/v2/ticket_fields/{id}.json \\\n  -d '{\"ticket_field\": {\"custom_field_options\": [{\"name\": \"Apple Pie\", \"value\": \"apple\"}, {\"name\": \"Pecan Pie\", \"value\": \"pecan\"}]}}' \\\n  -H \"Content-Type: application/json\" -X PUT \\\n  -v -u {email_address}/token:{api_token}\n```\n\n#### Example Response\n\n```http\nStatus: 200 OK\n\n{\n  \"ticket_field\": {\n    \"id\":21938362,\n    \"type\":\"tagger\",\n    \"title\":\"Pies\",\n    ...\n    \"custom_field_options\": [\n      {\n        \"id\":21029772,\n        \"name\":\"Apple Pie\",\n        \"raw_name\":\"Apple Pie\",\n        \"value\":\"apple\",\n        \"default\":false\n      },\n      ...\n    ]\n  }\n}\n```\n\n#### Allowed for\n\n* Admins\n"
      operationId: "UpdateTicketField"
      summary: "Update Ticket Field"
  /api/v2/ticket_fields/{ticket_field_id}/options:
    parameters:
    - description: "The ID of the ticket field"
      in: "path"
      name: "ticket_field_id"
      required: true
      type: "integer"
      x-example: 34
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomFieldOptionsResponse"
      tags:
      - "Ticket Fields"
      description: "Returns a list of custom ticket field options for the given drop-down ticket field.\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ListTicketFieldOptions"
      summary: "List Ticket Field Options"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomFieldOptionResponse"
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/CustomFieldOptionResponse"
      tags:
      - "Ticket Fields"
      description: "Creates or updates an option for the given drop-down ticket field.\n\nTo update an option, include the id of the option in the `custom_field_option` object. Example:\n\n`{\"custom_field_option\": {\"id\": 10002, \"name\": \"Pineapples\", ... }`\n\nIf an option exists for the given ID, the option will be updated. Otherwise, a new option will be created.\n\n#### Response\n\nReturns one of the following status codes:\n\n- 200 with `Location: /api/v2/ticket_fields/{ticket_field_id}/options.json` if the ticket field option already exists in the database\n- 201 with `Location: /api/v2/ticket_fields/{ticket_field_id}/options.json` if the ticket field option is new\n\n#### Allowed For\n\n* Admins\n\n#### Rate Limit\nYou can make 100 requests every 1 minute using this endpoint.\nThe rate limiting mechanism behaves as described in\n[Monitoring your request activity](/api-reference/ticketing/account-configuration/usage_limits/#monitoring-your-request-activity) in the API introduction.\n\n#### Field Option Limits\n\n* 2000 options per ticket field\n"
      operationId: "CreateOrUpdateTicketFieldOption"
      summary: "Create or Update Ticket Field Option"
  /api/v2/ticket_fields/{ticket_field_id}/options/{ticket_field_option_id}:
    parameters:
    - description: "The ID of the ticket field"
      in: "path"
      name: "ticket_field_id"
      required: true
      type: "integer"
      x-example: 34
    - description: "The ID of the ticket field option"
      in: "path"
      name: "ticket_field_option_id"
      required: true
      type: "integer"
      x-example: 10001
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Ticket Fields"
      description: "#### Allowed for\n* Admins\n"
      operationId: "DeleteTicketFieldOption"
      summary: "Delete Ticket Field Option"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomFieldOptionResponse"
      tags:
      - "Ticket Fields"
      description: "#### Allowed for\n* Agents\n"
      operationId: "ShowTicketFieldOption"
      summary: "Show Ticket Field Option"
  /api/v2/ticket_forms:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "true returns active ticket forms; false returns inactive ticket forms. If not present, returns both"
        in: "query"
        name: "active"
        type: "boolean"
      - description: "true returns ticket forms where `end_user_visible`; false returns ticket forms that are not end-user visible. If not present, returns both"
        in: "query"
        name: "end_user_visible"
        type: "boolean"
      - description: "true returns the default ticket form when the criteria defined by the parameters results in a set without active and end-user visible ticket forms"
        in: "query"
        name: "fallback_to_default"
        type: "boolean"
      - description: "true returns the ticket forms of the brand specified by the url's subdomain"
        in: "query"
        name: "associated_to_brand"
        type: "boolean"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFormsResponse"
      tags:
      - "Ticket Forms"
      description: "Returns a list of all ticket forms for your account if accessed as an admin or agent. End users only see ticket forms that have `end_user_visible` set to true.\n\n#### Allowed For\n\n* Anyone\n"
      operationId: "ListTicketForms"
      summary: "List Ticket Forms"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/TicketFormResponse"
      tags:
      - "Ticket Forms"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "CreateTicketForm"
      summary: "Create Ticket Form"
  /api/v2/ticket_forms/reorder:
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFormsResponse"
      tags:
      - "Ticket Forms"
      description: "#### Allowed For\n* Admins\n\n#### Request Parameters\n\nYou can pass in the following parameter in the payload:\n\n| Name                | Type   | Comment\n| ------------------- | ------ | --------\n| ticket_form_ids     | array  | An array of ticket form ids. Example: \"[2, 23, 46, 50]\"\n"
      operationId: "ReorderTicketForms"
      summary: "Reorder Ticket Forms"
  /api/v2/ticket_forms/show_many:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "IDs of the ticket forms to be shown"
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "1,2,3"
      - description: "true returns active ticket forms; false returns inactive ticket forms. If not present, returns both"
        in: "query"
        name: "active"
        type: "boolean"
      - description: "true returns ticket forms where `end_user_visible`; false returns ticket forms that are not end-user visible. If not present, returns both"
        in: "query"
        name: "end_user_visible"
        type: "boolean"
      - description: "true returns the default ticket form when the criteria defined by the parameters results in a set without active and end-user visible ticket forms"
        in: "query"
        name: "fallback_to_default"
        type: "boolean"
      - description: "true returns the ticket forms of the brand specified by the url's subdomain"
        in: "query"
        name: "associated_to_brand"
        type: "boolean"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFormsResponse"
      tags:
      - "Ticket Forms"
      description: "Takes an `ids` query parameter that accepts a comma-separated list of up to 100 ticket form ids. This endpoint is used primarily by the [mobile SDK](/documentation/classic-web-widget-sdks/) and the [Web Widget](/api-reference/widget/introduction/).\n\n#### Allowed For\n\n* Anyone\n"
      operationId: "ShowManyTicketForms"
      summary: "Show Many Ticket Forms"
  /api/v2/ticket_forms/{ticket_form_id}:
    parameters:
    - description: "The ID of the ticket form"
      in: "path"
      name: "ticket_form_id"
      required: true
      type: "integer"
      x-example: 47
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Ticket Forms"
      description: "#### Allowed For\n* Admins\n"
      operationId: "DeleteTicketForm"
      summary: "Delete Ticket Form"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFormResponse"
      tags:
      - "Ticket Forms"
      description: "#### Allowed For\n\n* Admins, Agents, and End Users\n"
      operationId: "ShowTicketForm"
      summary: "Show Ticket Form"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFormResponse"
      tags:
      - "Ticket Forms"
      description: "#### Allowed For\n* Admins\n"
      operationId: "UpdateTicketForm"
      summary: "Update Ticket Form"
  /api/v2/ticket_forms/{ticket_form_id}/clone:
    parameters:
    - description: "The ID of the ticket form"
      in: "path"
      name: "ticket_form_id"
      required: true
      type: "integer"
      x-example: 47
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketFormResponse"
      tags:
      - "Ticket Forms"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "CloneTicketForm"
      summary: "Clone an Already Existing Ticket Form"
  /api/v2/ticket_metrics:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketMetricsResponse"
      tags:
      - "Ticket Metrics"
      description: "Returns a list of tickets with their metrics.\n\nTickets are ordered chronologically by created date, from newest to oldest.\nThe last ticket listed may not be the absolute oldest ticket in your account\ndue to ticket archiving.\n\nArchived tickets are not included in the response. See\n[About archived tickets](https://support.zendesk.com/hc/en-us/articles/203657756) in\nZendesk help.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListTicketMetrics"
      summary: "List Ticket Metrics"
  /api/v2/ticket_metrics/{ticket_metric_id}:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The id of the ticket metric to retrieve"
        in: "path"
        name: "ticket_metric_id"
        required: true
        type: "string"
        x-example: "10001"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketMetricsByTicketMetricIdResponse"
      tags:
      - "Ticket Metrics"
      description: "Returns a specific metric, or the metrics of a specific ticket.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ShowTicketMetrics"
      summary: "Show Ticket Metrics"
  /api/v2/tickets:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Lists tickets by external id. External ids don't have to be unique for each ticket. As a result, the request may return multiple tickets with the same external id."
        in: "query"
        name: "external_id"
        type: "string"
      responses:
        200:
          description: "List tickets"
          schema:
            $ref: "#/definitions/TicketsResponse"
      tags:
      - "Tickets"
      operationId: "ListTickets"
      summary: "List Tickets"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/TicketCreateRequest"
      responses:
        201:
          description: "Create ticket"
          headers:
            Location:
              description: "The URL of the created ticket"
              format: "url"
              type: "string"
          schema:
            $ref: "#/definitions/TicketResponse"
      tags:
      - "Tickets"
      operationId: "CreateTicket"
      summary: "Create Ticket"
  /api/v2/tickets/count:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Count of tickets"
          schema:
            properties:
              count:
                properties:
                  refreshed_at:
                    format: "date-time"
                    type: "string"
                  value:
                    type: "integer"
                type: "object"
            type: "object"
      tags:
      - "Tickets"
      description: "Returns an approximate count of tickets in the account. If the count exceeds 100,000, it is updated every 24 hours.\n\n`ccd` lists tickets that the specified user is cc'd on.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
      operationId: "CountTickets"
      summary: "Count Tickets"
  /api/v2/tickets/create_many:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/TicketsCreateRequest"
      responses:
        200:
          description: "Create many tickets"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Tickets"
      description: "Accepts an array of up to 100 ticket objects. **Note**: Every ticket created with this endpoint may be affected by your business rules, which can include sending email notifications to your end users. If you are importing historical tickets or creating more than 1000 tickets, consider using the [Ticket Bulk Import](/api-reference/ticketing/tickets/ticket_import/#ticket-bulk-import) endpoint.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n* Agents"
      operationId: "TicketsCreateMany"
      summary: "Create Many Tickets"
  /api/v2/tickets/destroy_many:
    delete:
      produces:
      - "application/json"
      parameters:
      - description: "Comma-separated list of ticket ids"
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "35436,35437"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Tickets"
      description: "Accepts a comma-separated list of up to 100 ticket ids.\n\n#### Allowed For\n\n* Admins\n* Agents with permission to delete tickets\n\nAgent delete permissions are set in Support. See\n[Deleting tickets](https://support.zendesk.com/hc/en-us/articles/203690936)\nin the Support Help Center.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information."
      operationId: "BulkDeleteTickets"
      summary: "Bulk Delete Tickets"
  /api/v2/tickets/mark_many_as_spam:
    put:
      produces:
      - "application/json"
      parameters:
      - description: "Comma-separated list of ticket ids"
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "35436,35437"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Tickets"
      description: "Accepts a comma-separated list of up to 100 ticket ids.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents"
      operationId: "MarkManyTicketsAsSpam"
      summary: "Bulk Mark Tickets as Spam"
  /api/v2/tickets/show_many:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Comma-separated list of ticket ids"
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "35436,35437"
      responses:
        200:
          description: "List tickets"
          schema:
            $ref: "#/definitions/TicketsResponse"
      tags:
      - "Tickets"
      description: "Accepts a comma-separated list of ticket ids to return.\n\nThis endpoint will return up to 100 tickets records.\n\n#### Allowed For\n* Agents"
      operationId: "TicketsShowMany"
      summary: "Show Multiple Tickets"
  /api/v2/tickets/update_many:
    put:
      produces:
      - "application/json"
      parameters:
      - description: "Comma-separated list of ticket ids"
        in: "query"
        name: "ids"
        type: "string"
        x-example: "35436,35437"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Tickets"
      description: "Accepts an array of up to 100 ticket objects, or a comma-separated list of up to 100 ticket ids."
      operationId: "TicketsUpdateMany"
      summary: "Update Many Tickets"
  /api/v2/tickets/{ticket_id}:
    delete:
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        204:
          description: "No content"
      tags:
      - "Tickets"
      description: "#### Allowed For\n\n* Admins\n* Agents with permission to delete tickets\n\nAgent delete permissions are set in Support. See\n[Deleting tickets](https://support.zendesk.com/hc/en-us/articles/203690936)\nin the Support Help Center.\n\n#### Ticket deletion rate limit\n\nYou can delete 400 tickets every 1 minute using this endpoint.\nThe rate limiting mechanism behaves as described in\n[Rate limits](/api-reference/introduction/rate-limits/) in the API introduction.\nZendesk recommends that you obey the Retry-After header values.\nTo delete many tickets, you may use [Bulk Delete Tickets](/api-reference/ticketing/tickets/tickets/#bulk-delete-tickets)."
      operationId: "DeleteTicket"
      summary: "Delete Ticket"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Ticket"
          schema:
            $ref: "#/definitions/TicketResponse"
      tags:
      - "Tickets"
      description: "Returns a number of ticket properties though not the ticket comments. To get the comments, use [List Comments](/api-reference/ticketing/tickets/ticket_comments/#list-comments)\n\n#### Allowed For\n* Agents"
      operationId: "ShowTicket"
      summary: "Show Ticket"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/TicketUpdateRequest"
      responses:
        200:
          description: "Successful request"
          schema:
            $ref: "#/definitions/TicketUpdateResponse"
      tags:
      - "Tickets"
      operationId: "UpdateTicket"
      summary: "Update Ticket"
  /api/v2/tickets/{ticket_id}/audits:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK response"
          schema:
            $ref: "#/definitions/TicketAuditsResponseNoneCursor"
      tags:
      - "Ticket Audits"
      description: "Lists the audits for a specified ticket.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n**Note**: Audits for [Archived Tickets](https://support.zendesk.com/hc/en-us/articles/4408887617050) do not support pagination for this endpoint.\n\n#### Allowed for\n\n* Agents\n"
      operationId: "ListAuditsForTicket"
      summary: "List Audits for a Ticket"
  /api/v2/tickets/{ticket_id}/audits/count:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Count of audits on a ticket"
          schema:
            $ref: "#/definitions/TicketAuditsCountResponse"
      tags:
      - "Ticket Audits"
      description: "Returns an approximate count of audits for a specified ticket. If the count exceeds 100,000, the count will return a cached result.  This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed for\n\n* Agents\n"
      operationId: "CountAuditsForTicket"
      summary: "Count Audits for a Ticket"
  /api/v2/tickets/{ticket_id}/audits/{ticket_audit_id}:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    - description: "The ID of the ticket audit"
      in: "path"
      name: "ticket_audit_id"
      required: true
      type: "integer"
      x-example: 2127301143
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK response"
          schema:
            $ref: "#/definitions/TicketAuditResponse"
      tags:
      - "Ticket Audits"
      description: "#### Allowed for\n\n* Agents\n"
      operationId: "ShowTicketAudit"
      summary: "Show Audit"
  /api/v2/tickets/{ticket_id}/audits/{ticket_audit_id}/make_private:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    - description: "The ID of the ticket audit"
      in: "path"
      name: "ticket_audit_id"
      required: true
      type: "integer"
      x-example: 2127301143
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "description"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Ticket Audits"
      description: "#### Allowed for\n\n* Agents\n"
      operationId: "MakeTicketCommentPrivateFromAudits"
      summary: "Change a Comment From Public To Private"
  /api/v2/tickets/{ticket_id}/collaborators:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ListTicketCollaboratorsResponse"
      tags:
      - "Tickets"
      description: "#### Allowed For\n\n* Agents"
      operationId: "ListTicketCollaborators"
      summary: "List Collaborators for a Ticket"
  /api/v2/tickets/{ticket_id}/comments:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Default is false. When true, inline images are also listed as attachments in the response"
        in: "query"
        name: "include_inline_images"
        type: "boolean"
      - description: "Accepts \"users\". Use this parameter to list email CCs by side-loading users. Example: `?include=users`. **Note**: If the comment source is email, a deleted user will be represented as the CCd email address. If the comment source is anything else, a deleted user will be represented as the user name."
        in: "query"
        name: "include"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketCommentsResponse"
      tags:
      - "Ticket Comments"
      description: "Returns the comments added to the ticket.\n\nEach comment may include a `content_url` for an attachment or a `recording_url` for a voice comment that points to a file that may be hosted externally. For security reasons, take care not to inadvertently send Zendesk authentication credentials to third parties when attempting to access these files. See [Working with url properties](/documentation/ticketing/managing-tickets/working-with-url-properties).\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Sorting\n\nBy default, comments are sorted by creation date in ascending order.\n\nWhen using cursor pagination, use the following parameter to change the sort order:\n\n| Name   | Type   | Required | Comments\n| ------ | ------ | -------- | --------\n| `sort` | string | no       | Possible values are \"created_at\" (ascending order) or \"-created_at\" (descending order)\n\nWhen using offset pagination, use the following parameters to change the sort order:\n\n| Name         | Type   | Required | Comments\n| ------------ | ------ | -------- | --------\n| `sort_order` | string | no       | One of `asc`, `desc`. Defaults to `asc`\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListTicketComments"
      summary: "List Comments"
  /api/v2/tickets/{ticket_id}/comments/count:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Count of ticket comments"
          schema:
            $ref: "#/definitions/TicketCommentsCountResponse"
      tags:
      - "Ticket Comments"
      description: "Returns an approximate count of the comments added to the ticket. If the count exceeds 100,000, the count will return a cached result.  This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
      operationId: "CountTicketComments"
      summary: "Count Ticket Comments"
  /api/v2/tickets/{ticket_id}/comments/{comment_id}/attachments/{attachment_id}/redact:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    - description: "The ID of the comment"
      in: "path"
      name: "comment_id"
      required: true
      type: "integer"
      x-example: 654321
    - description: "The ID of the attachment"
      in: "path"
      name: "attachment_id"
      required: true
      type: "integer"
      x-example: 498483
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK response"
          schema:
            $ref: "#/definitions/AttachmentResponse"
      tags:
      - "Attachments"
      description: "Redaction allows you to permanently remove attachments from an existing comment on a ticket. Once removed from a comment, the attachment is replaced with an empty \"redacted.txt\" file.\n\nThe redaction is permanent. It is not possible to undo redaction or see what was removed. Once a ticket is closed, redacting its attachments is no longer possible.\n\nAlso, if you want to redact an inline attachment, you can use the `include_inline_images` parameter in the [List Comments](/api-reference/ticketing/tickets/ticket_comments/#list-comments) operation to obtain the inline attachment ID, and use it in the request URL.\n\n#### Allowed For\n\n* Admins\n* Agents when [deleting tickets is enabled for agents on professional accounts](https://support.zendesk.com/hc/en-us/articles/360002128107)\n* Agents assigned to a custom role with permissions to redact ticket content (Enterprise only)\n"
      operationId: "RedactCommentAttachment"
      summary: "Redact Comment Attachment"
  /api/v2/tickets/{ticket_id}/comments/{ticket_comment_id}/make_private:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    - description: "The ID of the ticket comment"
      in: "path"
      name: "ticket_comment_id"
      required: true
      type: "integer"
      x-example: 35436
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "description"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Ticket Comments"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "MakeTicketCommentPrivate"
      summary: "Make Comment Private"
  /api/v2/tickets/{ticket_id}/comments/{ticket_comment_id}/redact:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    - description: "The ID of the ticket comment"
      in: "path"
      name: "ticket_comment_id"
      required: true
      type: "integer"
      x-example: 35436
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketCommentResponse"
      tags:
      - "Ticket Comments"
      description: "Permanently removes words or strings from a ticket comment. Specify the string to redact in an object with a `text` property. Example: `'{\"text\": \"987-65-4320\"}'`. The characters of the word or string are replaced by the ▇ symbol.\n\nIf the comment was made by email, the endpoint also attempts to redact the string from the original email retained by Zendesk for audit purposes.\n\n**Note**: If you use the rich text editor, support for redacting formatted text (bold, italics, hyperlinks) is limited.\n\nRedaction is permanent. You can't undo the redaction or see *what* was removed. Once a ticket is closed, you can no longer redact strings from its comments.\n\nTo use this endpoint, the \"Agents can delete tickets\" option must be enabled in the Zendesk Support admin interface at **Admin** > **Settings** > **Agents**.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "RedactStringInComment"
      summary: "Redact String in Comment"
  /api/v2/tickets/{ticket_id}/email_ccs:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ListTicketEmailCCsResponse"
      tags:
      - "Tickets"
      description: "Returns any users cc'd on the ticket.\n\n#### Availability\n\nThe [CCs and Followers](https://support.zendesk.com/hc/en-us/articles/203690846) feature must be enabled in Zendesk Support.\n\nIf the feature is not enabled, the default CC functionality is used. In that case, use [List Collaborators](/api-reference/ticketing/tickets/tickets/#list-collaborators-for-a-ticket) to list the users cc'ed on the ticket.\n\n#### Allowed For\n\n* Agents"
      operationId: "ListTicketEmailCCs"
      summary: "List Email CCs for a Ticket"
  /api/v2/tickets/{ticket_id}/followers:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ListTicketFollowersResponse"
      tags:
      - "Tickets"
      description: "Returns any users who follow the ticket.\n\n#### Availability\n\nThe [CCs and Followers](https://support.zendesk.com/hc/en-us/articles/203690846) feature must be enabled in Zendesk Support.\n\n#### Allowed For\n\n* Agents"
      operationId: "ListTicketFollowers"
      summary: "List Followers for a Ticket"
  /api/v2/tickets/{ticket_id}/incidents:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ListTicketIncidentsResponse"
      tags:
      - "Tickets"
      description: "#### Allowed For\n\n* Agents\n\n#### Pagination\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/)."
      operationId: "ListTicketIncidents"
      summary: "List Ticket Incidents"
  /api/v2/tickets/{ticket_id}/macros/{macro_id}/apply:
    parameters:
    - description: "The ID of the macro"
      in: "path"
      name: "macro_id"
      required: true
      type: "integer"
      x-example: 25
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/MacroApplyTicketResponse"
      tags:
      - "Macros"
      description: "Returns the full ticket object as it would be after applying the macro to the ticket.\nIt doesn't actually change the ticket.\n\nTo get only the ticket fields that would be changed by the macro,\nsee [Show Changes to Ticket](#show-changes-to-ticket).\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ShowTicketAfterChanges"
      summary: "Show Ticket After Changes"
  /api/v2/tickets/{ticket_id}/mark_as_spam:
    put:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Successful response"
          schema:
            example: ""
            type: "string"
      tags:
      - "Tickets"
      description: "#### Allowed For\n\n* Agents"
      operationId: "MarkTicketAsSpamAndSuspendRequester"
      summary: "Mark Ticket as Spam and Suspend Requester"
  /api/v2/tickets/{ticket_id}/merge:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/TicketMergeInput"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Tickets"
      description: "Merges one or more tickets into the ticket with the specified id.\n\nSee [Merging tickets](https://support.zendesk.com/hc/en-us/articles/203690916)\nin the Support Help Center for ticket merging rules.\n\nAny attachment to the source ticket is copied to the target ticket.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Agents\n\nAgents in the Enterprise account must have merge permissions.\nSee [Creating custom roles and assigning agents (Enterprise)](https://support.zendesk.com/hc/en-us/articles/203662026)\nin the Support Help Center.\n\n#### Available parameters\n\nThe request takes a data object with the following properties:\n\n| Name                     | Type    | Required | Comments                                                |\n| ------------------------ | ------- | -------- | ------------------------------------------------------- |\n| ids                      | array   | yes      | Ids of tickets to merge into the target ticket          |\n| target_comment           | string  | no       | Private comment to add to the target ticket. This comment is optional but strongly recommended |\n| source_comment           | string  | no       | Private comment to add to the source ticket. This comment is optional but strongly recommended |\n| target_comment_is_public | boolean | no       | Whether comments in the target ticket are public or private   |\n| source_comment_is_public | boolean | no       | Whether comments in the source tickets are public or private |\n\n`target_comment` and `source_comment` can be used to provide a reason for the merge for recordkeeping purposes. If the source ticket has attachments, they are included in `target_comment`.\n\nComments are private and can't be modified in the following cases:\n\n  * Any of the sources or target tickets are private\n  * Any of the sources or target tickets were created through X (formerly Twitter), Facebook or the Channel framework\n\nIn any other case, comments default to private but can be modified with the comment privacy parameters."
      operationId: "MergeTicketsIntoTargetTicket"
      summary: "Merge Tickets into Target Ticket"
  /api/v2/tickets/{ticket_id}/related:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ID of the ticket"
        in: "path"
        name: "ticket_id"
        required: true
        type: "integer"
        x-example: 123456
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/TicketRelatedInformation"
      tags:
      - "Tickets"
      description: "The request returns a data object with the following properties:\n\n| Name                | Type    | Comment\n| ------------------- | ------- | -------\n| topic_id            | string  | Related topic in the Web portal (deprecated feature)\n| followup_source_ids | array   | Sources to follow up\n| from_archive        | boolean | Is true if the current ticket is archived\n| incidents           | integer | A count of related incident occurrences\n| twitter             | object  | X (formerly Twitter) information associated with the ticket\n\n#### Allowed For\n\n* Agents"
      operationId: "TicketRelatedInformation"
      summary: "Ticket Related Information"
  /api/v2/tickets/{ticket_id}/satisfaction_rating:
    parameters:
    - description: "The id of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 35436
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SatisfactionRatingResponse"
      tags:
      - "Satisfaction Ratings"
      description: "Creates a CSAT rating for a solved ticket, or for a ticket that was previously\nsolved and then reopened.\n\nOnly the end user listed as the ticket requester can create a satisfaction rating for the ticket.\n\n#### Allowed For\n\n* End user who requested the ticket\n\nThe end user must be a verified user.\n"
      operationId: "CreateTicketSatisfactionRating"
      summary: "Create a Satisfaction Rating"
  /api/v2/tickets/{ticket_id}/tags:
    parameters:
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Tags"
      description: "You can also delete tags from multiple tickets with the\n[Update Many Tickets](/api-reference/ticketing/tickets/tickets/#update-many-tickets) endpoint.\n\nThis endpoint supports safe updates. See [Safe Update](/api-reference/ticketing/ticket-management/tags/#safe-update).\n\n#### Allowed For\n\n* Agents\n"
      operationId: "DeleteTagsTicket"
      summary: "Remove Tags"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TagsByObjectIdResponse"
      tags:
      - "Tags"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "ListResourceTags"
      summary: "List Resource Tags"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/TagsByObjectIdResponse"
      tags:
      - "Tags"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "SetTagsTicket"
      summary: "Set Tags"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TagsByObjectIdResponse"
      tags:
      - "Tags"
      description: "You can also add tags to multiple tickets with the [Update Many\nTickets](/api-reference/ticketing/tickets/tickets/#update-many-tickets) endpoint.\n\n#### Safe Update\n\nIf the same ticket is updated by multiple API requests at\nthe same time, some tags could be lost because of ticket\nupdate collisions. Include `updated_stamp` and `safe_update`\nproperties in the request body to make a safe update.\n\nFor `updated_stamp`, retrieve and specify the ticket's\nlatest `updated_at` timestamp. The tag update only occurs\nif the `updated_stamp` timestamp matches the ticket's\nactual `updated_at` timestamp at the time of the request.\nIf the timestamps don't match (in other words, if the\nticket was updated since you retrieved the ticket's\nlast `updated_at` timestamp), the request returns a\n409 Conflict error.\n\n#### Example\n\n```js\n{\n  \"tags\": [\"customer\"],\n  \"updated_stamp\":\"2019-09-12T21:45:16Z\",\n  \"safe_update\":\"true\"\n}\n```\n\nFor details, see [Protecting against ticket update collisions](/api-reference/ticketing/tickets/tickets/#protecting-against-ticket-update-collisions).\n\n#### Allowed For\n\n* Agents\n"
      operationId: "PutTagsTicket"
      summary: "Add Tags"
  /api/v2/trigger_categories:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Pagination parameters"
        in: "query"
        name: "page"
        type: "object"
        x-example:
          after: "eyJvIjoiLXNjb3JlLGlkIiwidiI6ImFRSUFBQUFBQUFBQWFRMHBJUUVBQUFBQSJ9"
          before: "eyJvIjoiLXNjb3JlLGlkIiwidiI6ImFRSUFBQUFBQUFBQWFRMHBJUUVBQUFBQSJ9"
          size: 50
      - description: "Sort parameters"
        enum:
        - "position"
        - "-position"
        - "name"
        - "-name"
        - "created_at"
        - "-created_at"
        - "updated_at"
        - "-updated_at"
        in: "query"
        name: "sort"
        type: "string"
      - description: "Allowed sideloads"
        enum:
        - "rule_counts"
        in: "query"
        name: "include"
        type: "string"
      responses:
        200:
          description: "A paged array of ticket trigger categories"
          examples:
            application/json:
              links:
                next: "https://{subdomain}.zendesk.com/api/v2/trigger_categories.json?include=rule_counts&page[after]=eyJvIjoiLXNjb3JlLGlkIiwidiI6ImFRSUFBQUFBQUFBQWFRMHBJUUVBQUFBQSJ9&page[size]=2&sort=position"
                prev: "https://{subdomain}.zendesk.com/api/v2/trigger_categories.json?include=rule_counts&page[before]=eyJvIjoiLXNjb3JlLGlkIiwidiI6ImFRSUFBQUFBQUFBQWFRMHBJUUVBQUFBQSJ9&page[size]=2&sort=position"
              meta:
                after_cursor: "eyJvIjoiLXNjb3JlLGlkIiwidiI6ImFRSUFBQUFBQUFBQWFRMHBJUUVBQUFBQSJ9"
                before_cursor: "eyJvIjoiLXNjb3JlLGlkIiwidiI6ImFRSUFBQUFBQUFBQWFRMHBJUUVBQUFBQSJ9"
                has_more: true
              trigger_categories:
              - created_at: "2020-07-17T01:30:07Z"
                id: "10001"
                name: "Email Triggers"
                position: 0
                updated_at: "2020-07-17T01:30:07Z"
              - created_at: "2020-07-17T01:30:07Z"
                id: "10002"
                name: "SMS Triggers"
                position: 1
                updated_at: "2020-07-17T01:30:07Z"
          schema:
            allOf:
            - $ref: "#/definitions/TriggerCategoriesResponse"
            - $ref: "#/definitions/Pagination"
        400:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "InvalidPaginationParameter"
                title: "page[after] is not valid"
          schema:
            $ref: "#/definitions/Errors"
        403:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "TriggerCategoriesNotEnabled"
                title: "Ticket trigger categories are not enabled for your account"
          schema:
            $ref: "#/definitions/Errors"
      tags:
      - "Trigger Categories"
      description: "Returns all the ticket trigger categories in the account.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ListTriggerCategories"
      summary: "List Ticket Trigger Categories"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          properties:
            trigger_category:
              allOf:
              - $ref: "#/definitions/TriggerCategoryRequest"
              - $ref: "#/definitions/TriggerCategoryRequestRequired"
          type: "object"
      responses:
        200:
          description: "The created ticket trigger category"
          examples:
            application/json:
              trigger_category:
                created_at: "2020-07-17T01:30:07Z"
                id: "10001"
                name: "All Notification Triggers"
                position: 0
                updated_at: "2020-07-17T01:30:07Z"
          schema:
            $ref: "#/definitions/TriggerCategoryResponse"
        400:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "InvalidTriggerCategory"
                title: "Name cannot be blank"
          schema:
            $ref: "#/definitions/Errors"
        403:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "TriggerCategoriesNotEnabled"
                title: "Ticket trigger categories are not enabled for your account"
              - code: "ProductLimitExceeded"
                title: "Your account has reached the limit of 500 ticket trigger categories."
          schema:
            $ref: "#/definitions/Errors"
      tags:
      - "Trigger Categories"
      description: "Creates a ticket trigger category."
      operationId: "CreateTriggerCategory"
      summary: "Create Ticket Trigger Category"
  /api/v2/trigger_categories/jobs:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BatchJobRequest"
      responses:
        200:
          description: "The response to the batch job"
          examples:
            application/json:
              results:
                trigger_categories:
                - created_at: "2020-07-18T01:24:53Z"
                  id: "10001"
                  name: "Notifications"
                  position: 0
                  updated_at: "2020-07-20T01:30:07Z"
                - created_at: "2020-07-17T06:31:12Z"
                  id: "10002"
                  name: "Apply Tags"
                  position: 1
                  updated_at: "2020-07-20T01:30:07Z"
                triggers:
                - actions:
                  - {}
                  active: true
                  conditions: {}
                  created_at: "2012-09-25T22:50:26Z"
                  description: "Notify external target"
                  id: 10012
                  position: 1
                  raw_title: "Notify target"
                  title: "Notify Target"
                  updated_at: "2020-07-20T01:30:07Z"
                  url: "http://{subdomain}.zendesk.com/api/v2/triggers/10012.json"
                - actions:
                  - {}
                  active: false
                  conditions: {}
                  created_at: "2012-09-25T22:50:26Z"
                  description: "Close and save a ticket"
                  id: 10011
                  position: 10
                  raw_title: "Close and Save"
                  title: "Close and Save"
                  updated_at: "2020-07-20T01:30:07Z"
                  url: "http://{subdomain}.zendesk.com/api/v2/triggers/10011.json"
              status: "complete"
          schema:
            $ref: "#/definitions/BatchJobResponse"
        400:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "InvalidTrigger"
                title: "category_id is not valid"
                trigger_id: "10001"
              status: "failed"
          schema:
            $ref: "#/definitions/BatchJobResponse"
      tags:
      - "Trigger Categories"
      description: "Creates a job that performs a batch operation for the given ticket trigger categories."
      operationId: "BatchOperateTriggerCategories"
      summary: "Create Batch Job for Ticket Trigger Categories"
  /api/v2/trigger_categories/{trigger_category_id}:
    delete:
      produces:
      - "application/json"
      parameters:
      - description: "The id of the ticket trigger category to delete"
        in: "path"
        name: "trigger_category_id"
        required: true
        type: "string"
        x-example: "10001"
      responses:
        204:
          description: "No content"
        400:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "TriggerCategoryNotEmpty"
                title: "A category with active ticket triggers cannot be deleted."
          schema:
            $ref: "#/definitions/Errors"
        404:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "TriggerCategoryNotFound"
                title: "Category can’t be found. Check the ID and try again."
          schema:
            $ref: "#/definitions/Errors"
      tags:
      - "Trigger Categories"
      description: "Deletes the ticket trigger category with the specified ID."
      operationId: "DeleteTriggerCategory"
      summary: "Delete Ticket Trigger Category"
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The id of the ticket trigger category to retrieve"
        in: "path"
        name: "trigger_category_id"
        required: true
        type: "string"
        x-example: "10001"
      responses:
        200:
          description: "The requested ticket trigger category"
          examples:
            application/json:
              trigger_category:
                created_at: "2020-07-17T01:30:07Z"
                id: "10001"
                name: "All Notification Triggers"
                position: 0
                updated_at: "2020-07-17T01:30:07Z"
          schema:
            $ref: "#/definitions/TriggerCategoryResponse"
        404:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "TriggerCategoryNotFound"
                title: "Category can’t be found. Check the ID and try again."
          schema:
            $ref: "#/definitions/Errors"
      tags:
      - "Trigger Categories"
      description: "Returns the ticket trigger category with the specified ID."
      operationId: "ShowTriggerCategoryById"
      summary: "Show Ticket Trigger Category"
    patch:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "The id of the ticket trigger category to update"
        in: "path"
        name: "trigger_category_id"
        required: true
        type: "string"
        x-example: "10001"
      - in: "body"
        name: "body"
        required: true
        schema:
          properties:
            trigger_category:
              $ref: "#/definitions/TriggerCategoryRequest"
          type: "object"
      responses:
        200:
          description: "The updated trigger category"
          examples:
            application/json:
              trigger_category:
                created_at: "2020-07-17T01:30:07Z"
                id: "10001"
                name: "All Notification Triggers Updated"
                position: 10
                updated_at: "2020-07-18T05:23:32Z"
          schema:
            $ref: "#/definitions/TriggerCategoryResponse"
        400:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "InvalidTriggerCategory"
                title: "Name cannot be blank"
          schema:
            $ref: "#/definitions/Errors"
        404:
          description: "Error"
          examples:
            application/json:
              errors:
              - code: "TriggerCategoryNotFound"
                title: "Category can’t be found. Check the ID and try again."
          schema:
            $ref: "#/definitions/Errors"
      tags:
      - "Trigger Categories"
      description: "Updates the ticket trigger category with the specified ID."
      operationId: "UpdateTriggerCategory"
      summary: "Update Ticket Trigger Category"
  /api/v2/triggers:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Filter by active triggers if true or inactive triggers if false"
        in: "query"
        name: "active"
        type: "boolean"
        x-example: true
      - description: "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
        in: "query"
        name: "sort"
        type: "string"
        x-example: "position"
      - description: "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
        in: "query"
        name: "sort_by"
        type: "string"
        x-example: "position"
      - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
        in: "query"
        name: "sort_order"
        type: "string"
        x-example: "desc"
      - description: "Filter triggers by category ID"
        in: "query"
        name: "category_id"
        type: "string"
        x-example: "10026"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggersResponse"
      tags:
      - "Triggers"
      description: "Lists all ticket triggers for the current account.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported. The usage sideloads are only supported on the Support Professional or Suite Growth plan or above.\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each trigger, if present\n| permissions      | The permissions for each trigger\n| usage_1h         | The number of times each trigger has been used in the past hour\n| usage_24h        | The number of times each trigger has been used in the past day\n| usage_7d         | The number of times each trigger has been used in the past week\n| usage_30d        | The number of times each trigger has been used in the past thirty days\n"
      operationId: "ListTriggers"
      summary: "List Ticket Triggers"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/TriggerWithCategoryRequest"
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/TriggerResponse"
      tags:
      - "Triggers"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "CreateTrigger"
      summary: "Create Trigger"
  /api/v2/triggers/active:
    parameters:
    - description: "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
      in: "query"
      name: "sort"
      type: "string"
      x-example: "position"
    - description: "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "position"
    - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "desc"
    - description: "Filter triggers by category ID"
      in: "query"
      name: "category_id"
      type: "string"
      x-example: "10026"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggersResponse"
      tags:
      - "Triggers"
      description: "Lists all active ticket triggers.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each ticket trigger, if present\n| permissions      | The permissions for each trigger\n| usage_1h         | The number of times each ticket trigger has been used in the past hour\n| usage_24h        | The number of times each ticket trigger has been used in the past day\n| usage_7d         | The number of times each ticket trigger has been used in the past week\n| usage_30d        | The number of times each ticket trigger has been used in the past thirty days\n"
      operationId: "ListActiveTriggers"
      summary: "List Active Ticket Triggers"
  /api/v2/triggers/definitions:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggerDefinitionResponse"
      tags:
      - "Triggers"
      description: "Returns the definitions of the actions a ticket trigger can perform and the\ndefinitions of the conditions under which a ticket trigger can execute. The\ndefinition of the action includes a title (\"Status\"), a type (\"list\"), and\npossible values. The definition of the condition includes the same fields\nas well as the possible operators.\n\nFor a list of supported actions, see the [Actions reference](/documentation/ticketing/reference-guides/actions-reference)\nFor a list of supported conditions, see the [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListTriggerActionConditionDefinitions"
      summary: "List Ticket Trigger Action and Condition Definitions"
  /api/v2/triggers/destroy_many:
    parameters:
    - description: "A comma separated list of trigger IDs"
      in: "query"
      name: "ids"
      required: true
      type: "string"
      x-example: "131,178,938"
    delete:
      parameters: []
      responses:
        204:
          description: "No content response"
      tags:
      - "Triggers"
      description: "Deletes the ticket triggers corresponding to the provided comma-separated list of IDs.\n\n#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe DELETE request takes one parameter, an `ids` object that lists the\nticket triggers to delete.\n\n| Name | Description\n| ---- | -----------\n| ids  | The IDs of the triggers to delete\n\n#### Example request\n\n```js\n{\n  \"ids\": \"25,23,27,22\"\n}\n```\n"
      operationId: "DeleteManyTriggers"
      summary: "Bulk Delete Ticket Triggers"
  /api/v2/triggers/reorder:
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggerResponse"
      tags:
      - "Triggers"
      description: "Alters the firing order of ticket triggers in the account. See\n[Reordering and sorting triggers](https://support.zendesk.com/hc/en-us/articles/115015696088)\nin the Zendesk Help Center. The firing order is set in a `trigger_ids` array in the request body.\n\nYou must include every ticket trigger id in your account to reorder the ticket triggers. If not, the endpoint will return 404 Forbidden.\n\nReordering ticket triggers via the API is not permitted if you have more than one ticket trigger category. If there is more than one\nticket trigger category, the endpoint will return a `LimitOneCategory` error.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ReorderTriggers"
      summary: "Reorder Ticket Triggers"
  /api/v2/triggers/search:
    parameters:
    - description: "Query string used to find all triggers with matching title"
      in: "query"
      name: "query"
      required: true
      type: "string"
      x-example: "important_trigger"
    - description: "Trigger attribute filters for the search. See [Filter](#filter)"
      in: "query"
      name: "filter"
      type: "object"
    - description: "Filter by active triggers if true or inactive triggers if false"
      in: "query"
      name: "active"
      type: "boolean"
      x-example: true
    - description: "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
      in: "query"
      name: "sort"
      type: "string"
      x-example: "position"
    - description: "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "position"
    - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "desc"
    - description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
      in: "query"
      name: "include"
      type: "string"
      x-example: "usage_24h"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggersResponse"
      tags:
      - "Triggers"
      description: "#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported. For more information, see [Side-loading](/documentation/ticketing/using-the-zendesk-api/side_loading/).\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each ticket trigger, if present\n| permissions      | The permissions for each ticket trigger\n| usage_1h         | The number of times each ticket trigger has been used in the past hour\n| usage_24h        | The number of times each ticket trigger has been used in the past day\n| usage_7d         | The number of times each ticket trigger has been used in the past week\n| usage_30d        | The number of times each ticket trigger has been used in the past thirty days\n\n#### Filter\n\nUse the `filter` query parameter to filter a ticket trigger search by one or more attributes. For example, the following `filter` argument filters ticket triggers by the `description` attribute:\n\n```json\n{\n  \"json\": {\n    \"description\": \"Close a ticket\"\n  }\n}\n```\n"
      operationId: "SearchTriggers"
      summary: "Search Ticket Triggers"
  /api/v2/triggers/update_many:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/TriggerBulkUpdateRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggersResponse"
      tags:
      - "Triggers"
      description: "Updates the position or the active status of multiple ticket triggers. Any additional properties are ignored.\n\n#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe PUT request expects a `triggers` object that lists the ticket triggers to update.\n\nEach ticket trigger may have the following properties:\n\n| Name        | Mandatory | Description\n| --------    | --------- | -----------\n| id          | yes       | The ID of the ticket trigger to update\n| position    | no        | The new position of the ticket trigger\n| active      | no        | The active status of the ticket trigger (true or false)\n| category_id | no        | The ID of the new category the ticket trigger is to be moved to\n\n#### Example Request\n\n```js\n{\n  \"triggers\": [\n    {\"id\": 25, \"position\": 3},\n    {\"id\": 23, \"position\": 5},\n    {\"id\": 27, \"position\": 9},\n    {\"id\": 22, \"position\": 7}\n  ]\n}\n```\n"
      operationId: "UpdateManyTriggers"
      summary: "Update Many Ticket Triggers"
  /api/v2/triggers/{trigger_id}:
    parameters:
    - description: "The ID of the trigger"
      in: "path"
      name: "trigger_id"
      required: true
      type: "integer"
      x-example: 198
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Triggers"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "DeleteTrigger"
      summary: "Delete Ticket Trigger"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggerResponse"
      tags:
      - "Triggers"
      description: "#### Allowed For\n\n* Agents\n\nThe Via Type value is a number instead of a text string. See [Via types reference](/documentation/ticketing/reference-guides/via-types/) for the keys.\n"
      operationId: "GetTrigger"
      summary: "Show Ticket Trigger"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/TriggerWithCategoryRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggerResponse"
      tags:
      - "Triggers"
      description: "#### Allowed For\n\n* Agents\n\n#### Note\n\nUpdating a condition or action updates both the conditions and actions arrays,\nclearing all existing values of both arrays. Include all your conditions\nand actions when updating any condition or action.\n"
      operationId: "UpdateTrigger"
      summary: "Update Ticket Trigger"
  /api/v2/triggers/{trigger_id}/revisions:
    parameters:
    - description: "The ID of the trigger"
      in: "path"
      name: "trigger_id"
      required: true
      type: "integer"
      x-example: 198
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggerRevisionsResponse"
      tags:
      - "Triggers"
      description: "List the revisions associated with a ticket trigger. Ticket trigger revision history is only available on Enterprise plans.\n\n#### Allowed For\n\n * Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name  | Will sideload\n| ----- | -------------\n| users | The user that authored each revision\n\n#### Pagination\n\nThis endpoint uses cursor-based pagination. The records are ordered in\ndescending order by the `created_at` timestamp, then by `id` on duplicate\n`created_at` values.\n\nThe `cursor` parameter is a non-human-readable argument you can use to move\nforward or backward in time.\n\nEach JSON response will contain the following attributes to help you get\nmore results:\n\n- `after_url` requests more recent results\n- `before_url` requests older results\n- `after_cursor` is the cursor to build the request yourself\n- `before_cursor` is the cursor to build the request yourself\n\nThe properties are null if no more records are available.\n\nYou can request a maximum of 1000 records using the `limit` parameter. If\nno `limit` parameter is supplied, it will default to 1,000.\n"
      operationId: "ListTriggerRevisions"
      summary: "List Ticket Trigger Revisions"
  /api/v2/triggers/{trigger_id}/revisions/{trigger_revision_id}:
    parameters:
    - description: "The ID of the trigger"
      in: "path"
      name: "trigger_id"
      required: true
      type: "integer"
      x-example: 198
    - description: "The ID of the revision for a particular trigger"
      in: "path"
      name: "trigger_revision_id"
      required: true
      type: "integer"
      x-example: 1
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TriggerRevisionResponse"
      tags:
      - "Triggers"
      description: "Fetches a revision associated with a ticket trigger. Ticket trigger revision history is only available on Enterprise plans.\n\n#### Allowed For\n\n * Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name  | Will sideload\n| ----- | -------------\n| users | The user that authored each revision\n"
      operationId: "TriggerRevision"
      summary: "Show Ticket Trigger Revision"
  /api/v2/uploads:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/AttachmentUploadResponse"
      tags:
      - "Attachments"
      description: "Uploads a file that can be attached to a ticket comment. It doesn't attach the file to the comment. For details and examples, see [Attaching ticket comments with the API](/documentation/ticketing/using-the-zendesk-api/adding-ticket-attachments-with-the-api).\n\nThe endpoint has a required `filename` query parameter. The parameter specifies what the file will be named when attached to the ticket comment (to give the agent more context about the file). The parameter does not specify the file on the local system to be uploaded. While the two names can be different, their file extensions must be the same. If they don't match, the agent's browser or file reader could give an error when attempting to open the attachment.\n\nThe `Content-Type` header must contain a recognized MIME type that correctly describes the type of the uploaded file. Failing to send a recognized, correct type may cause undesired behavior. For example, in-browser audio playback may be interrupted by the browser's security mechanisms for MP3s uploaded with an incorrect type.\n\nAdding multiple files to the same upload is handled by splitting requests and passing the API token received from the first request to each subsequent request. The token is valid for 3 days.\n\n**Note**: Even if [private attachments](https://support.zendesk.com/hc/en-us/articles/204265396) are enabled in the Zendesk Support instance, uploaded files are visible to any authenticated user at the `content_URL` specified in the [JSON response](#json-format) until the upload token is consumed. Once a file is associated with a ticket or post, visibility is restricted to users with access to the ticket or post with the attachment.\n\n#### Allowed For\n\n* End users\n"
      operationId: "UploadFiles"
      summary: "Upload Files"
  /api/v2/uploads/{token}:
    delete:
      parameters:
      - description: "The token of the uploaded attachment"
        in: "path"
        name: "token"
        required: true
        type: "string"
        x-example: "6bk3gql82em5nmf"
      responses:
        204:
          description: "No Content response"
      tags:
      - "Attachments"
      description: "#### Allowed for\n\n* End Users\n"
      operationId: "DeleteUpload"
      summary: "Delete Upload"
  /api/v2/user_fields:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserFieldsResponse"
      tags:
      - "User Fields"
      description: "Returns a list of custom user fields in your account. Fields are returned in the order that you specify in your user fields configuration in Zendesk Support. Clients should cache this resource for the duration of their API usage and map the key for each User Field to the values returned under the `user_fields` attribute on the [User](/api-reference/ticketing/users/users/) resource.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListUserFields"
      summary: "List User Fields"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/UserFieldResponse"
      tags:
      - "User Fields"
      description: "Creates any of the following custom field types:\n\n* text (default when no \"type\" is specified)\n* textarea\n* checkbox\n* date\n* integer\n* decimal\n* regexp\n* dropdown\n* lookup\n* multiselect\n\nSee [About custom field types](https://support.zendesk.com/hc/en-us/articles/203661866) in Zendesk help.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateUserField"
      summary: "Create User Field"
  /api/v2/user_fields/reorder:
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "User Fields"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "ReorderUserField"
      summary: "Reorder User Field"
  /api/v2/user_fields/{user_field_id}:
    parameters:
    - description: "The ID or key of the user field"
      in: "path"
      name: "user_field_id"
      required: true
      x-example: "my_text_field"
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "User Fields"
      description: "#### Allowed for\n\n* Admins\n"
      operationId: "DeleteUserField"
      summary: "Delete User Field"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserFieldResponse"
      tags:
      - "User Fields"
      description: "#### Allowed for\n\n* Agents\n"
      operationId: "ShowUserField"
      summary: "Show User Field"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserFieldResponse"
      tags:
      - "User Fields"
      description: "#### Updating a Dropdown (Tagger) or Multiselect Field\n\nDropdown and multiselect fields return an array of `custom_field_options` which specify the name, value, and order of the list of dropdown or multiselect options.\nUnderstand the following behavior when updating a dropdown or multiselect field:\n\n- All options must be passed on update. Options that are not passed will be removed. As a result, these values will be removed from any organizations.\n- To create a new option, pass a null `id` along with `name` and `value`.\n- To update an existing option, pass its `id` along with `name` and `value`.\n- To re-order an option, reposition it in the `custom_field_options` array relative to the other options.\n- To remove an option, omit it from the list of options upon update.\n\n#### Example Request\n\n```bash\ncurl https://{subdomain}.zendesk.com/api/v2/user_fields/{user_field_id}.json \\\n  -H \"Content-Type: application/json\" -X PUT \\\n  -d '{\"user_field\": {\"custom_field_options\": [{\"id\": 124, \"name\": \"Option 2\", \"value\": \"option_2\"}, {\"id\": 123, \"name\": \"Option 1\", \"value\": \"option_1\"}, {\"id\": 125, \"name\": \"Option 2\", \"value\": \"option_3\"}]}}' \\\n  -v -u {email_address}/token:{api_token}\n```\n#### Allowed for\n\n* Admins\n"
      operationId: "UpdateUserField"
      summary: "Update User Field"
  /api/v2/user_fields/{user_field_id}/options:
    parameters:
    - description: "The ID or key of the user field"
      in: "path"
      name: "user_field_id"
      required: true
      x-example: "my_text_field"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomFieldOptionsResponse"
      tags:
      - "User Fields"
      description: "Returns a list of custom user field options for the given dropdown user field.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListUserFieldOptions"
      summary: "List User Field Options"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomFieldOptionResponse"
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/CustomFieldOptionResponse"
      tags:
      - "User Fields"
      description: "Creates a new option or updates an existing option for the given drop-down user field.\n\nTo update an option, include the id of the option in the `custom_field_option` object. Example: `{\"custom_field_option\": {\"id\": 10002, \"name\": \"Pineapples\", ... }`. If an option exists for the given ID, the option will be updated. Otherwise, a new option will be created.\n\n#### Response\n\nReturns one of the following status codes:\n\n- 200 with `Location: /api/v2/user_fields/{user_field_id}/options.json` if the user field option already exists in the database\n- 201 with `Location: /api/v2/user_fields/{user_field_id}/options.json` if the user field option is new\n\n#### Allowed For\n\n* Admins\n"
      operationId: "CreateOrUpdateUserFieldOption"
      summary: "Create or Update a User Field Option"
  /api/v2/user_fields/{user_field_id}/options/{user_field_option_id}:
    parameters:
    - description: "The ID or key of the user field"
      in: "path"
      name: "user_field_id"
      required: true
      x-example: "my_text_field"
    - description: "The ID of the user field option"
      in: "path"
      name: "user_field_option_id"
      required: true
      type: "integer"
      x-example: 10001
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "User Fields"
      description: "#### Allowed for\n* Admins\n"
      operationId: "DeleteUserFieldOption"
      summary: "Delete User Field Option"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CustomFieldOptionResponse"
      tags:
      - "User Fields"
      description: "#### Allowed for\n* Agents\n"
      operationId: "ShowUserFieldOption"
      summary: "Show a User Field Option"
  /api/v2/users:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Filters the results by role. Possible values are \"end-user\", \"agent\", or \"admin\"\n"
        enum:
        - "end-user"
        - "agent"
        - "admin"
        in: "query"
        name: "role"
        type: "string"
        x-example: "agent"
      - description: "Filters the results by more than one role using the format `role[]={role}&role[]={role}`\n"
        in: "query"
        name: "role[]"
        type: "string"
        x-example: "agent"
      - description: "For custom roles which is available on the Enterprise plan and above. You can only filter by one role ID per request"
        in: "query"
        name: "permission_set"
        type: "integer"
        x-example: 123
      - description: "List users by external id. External id has to be unique for each user under the same account."
        in: "query"
        name: "external_id"
        type: "string"
        x-example: "abc"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UsersResponse"
      tags:
      - "Users"
      description: "#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Admins, Agents and Light Agents\n"
      operationId: "ListUsers"
      summary: "List Users"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRequest"
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/UserResponse"
      tags:
      - "Users"
      operationId: "CreateUser"
      summary: "Create User"
  /api/v2/users/autocomplete:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The name to search for the user.\n"
        in: "query"
        name: "name"
        required: true
        type: "string"
        x-example: "gil"
      - description: "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
        in: "query"
        name: "field_id"
        type: "string"
      - description: "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
        examples:
          organization:
            summary: "A reference to an organization"
            value: "zen:organization"
          ticket:
            summary: "A reference to a ticket"
            value: "zen:ticket"
          user:
            summary: "A reference to a user"
            value: "zen:user"
        in: "query"
        name: "source"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UsersResponse"
      tags:
      - "Users"
      description: "Returns an array of users whose name starts with the value specified in the `name` parameter.\nIt only returns users with no foreign identities.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "AutocompleteUsers"
      summary: "Autocomplete Users"
  /api/v2/users/count:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Filters the results by role. Possible values are \"end-user\", \"agent\", or \"admin\"\n"
        enum:
        - "end-user"
        - "agent"
        - "admin"
        in: "query"
        name: "role"
        type: "string"
        x-example: "agent"
      - description: "Filters the results by more than one role using the format `role[]={role}&role[]={role}`\n"
        in: "query"
        name: "role[]"
        type: "string"
        x-example: "agent"
      - description: "For custom roles which is available on the Enterprise plan and above. You can only filter by one role ID per request"
        in: "query"
        name: "permission_set"
        type: "integer"
        x-example: 123
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CountResponse"
      tags:
      - "Users"
      description: "Returns an approximate count of users. If the count exceeds 100,000, it is updated every 24 hours.\n\nThe response includes a `refreshed_at` property in a `count` object that contains a timestamp indicating when the count was last updated.\n\n**Note**: When the count exceeds 100,000, the `refreshed_at` property may occasionally be null.\nThis indicates that the count is being updated in the background. The `count` object's `value` property is limited to 100,000 until the update is complete.\n\n#### Allowed For\n\n* Admins, Agents and Light Agents\n"
      operationId: "CountUsers"
      summary: "Count Users"
  /api/v2/users/create_many:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UsersRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Users"
      description: "Accepts an array of up to 100 user objects.\n\n**Note**: To protect the data in your Zendesk account, bulk user imports are not enabled by default in Zendesk accounts. The account owner must contact [Zendesk Customer Support](https://support.zendesk.com/hc/en-us/articles/4408843597850) to enable the imports. A 403 Forbidden\nerror is returned if data imports are not enabled.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n\n#### Specifying an organization\n\nYou can assign a user to an existing organization by setting an\n`organization_id` property in the user object.\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n"
      operationId: "CreateManyUsers"
      summary: "Create Many Users"
  /api/v2/users/create_or_update:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRequest"
      responses:
        200:
          description: "Successful response, when user exits"
          schema:
            $ref: "#/definitions/UserResponse"
        201:
          description: "Created response, when user is new"
          schema:
            $ref: "#/definitions/UserResponse"
      tags:
      - "Users"
      description: "Creates a user if the user does not already exist, or updates an existing user\nidentified by e-mail address or external ID.\n\nIf you don't specify a role parameter, the new user is assigned the role of end user.\n\nIf you need to create users without sending out a verification email, include a `\"skip_verify_email\": true` property in the body.\n\n#### External ID Case Sensitivity\n\nWhen providing an external id to identify an existing user to update, the search for the user record is not case sensitive.\n\nHowever, if an existing user is found, the system will update the user's external id to match the case of the external id used to find the user.\n\n#### Response Status Code\n\n- If the user exists in Zendesk, a successful request returns a 200 status code with \"Location: /api/v2/users/{user_id}.json\".\n- If the user does not exist in Zendesk, a successful request returns a 201 status code with \"Location: /api/v2/users/{new_user_id}.json\".\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n"
      operationId: "CreateOrUpdateUser"
      summary: "Create Or Update User"
  /api/v2/users/create_or_update_many:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UsersRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Users"
      description: "Accepts an array of up to 100 user objects. For each user, the user is created if it does not\nalready exist, or the existing user is updated.\n\n**Note**: To protect the data in your Zendesk account, bulk user imports are not enabled by default in Zendesk accounts. The account owner must contact [Zendesk Customer Support](https://support.zendesk.com/hc/en-us/articles/4408843597850) to enable the imports. A 403 Forbidden\nerror is returned if data imports are not enabled.    \n\nEach individual user object can identify an existing user by `email` or by `external_id`.\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n"
      operationId: "CreateOrUpdateManyUsers"
      summary: "Create Or Update Many Users"
  /api/v2/users/destroy_many:
    delete:
      produces:
      - "application/json"
      parameters:
      - description: "Id of the users to delete. Comma separated"
        in: "query"
        name: "ids"
        type: "string"
        x-example: "1,2,3"
      - description: "External Id of the users to delete. Comma separated"
        in: "query"
        name: "external_ids"
        type: "string"
        x-example: "abc,def,ghi"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Users"
      description: "Accepts a comma-separated list of up to 100 user ids.\n\nThe request takes an `ids` or an `external_ids` query parameter.\n\n#### Allowed for\n\n- Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n\n#### Response\n\nThis endpoint returns a `job_status` [JSON object](/api-reference/ticketing/ticket-management/job_statuses/#json-format) and queues a background job to do the work. Use the [Show Job Status](/api-reference/ticketing/ticket-management/job_statuses/#show-job-status) endpoint to check for the job's completion. Only a certain number of jobs can be queued or running at the same time. See [Job limit](/api-reference/introduction/rate-limits/#job-limit) for more information.\n"
      operationId: "DestroyManyUsers"
      summary: "Bulk Delete Users"
  /api/v2/users/logout_many:
    post:
      produces:
      - "application/json"
      parameters:
      - description: "Accepts a comma-separated list of up to 100 user ids.\n"
        in: "query"
        name: "ids"
        type: "string"
        x-example: "1,2"
      responses:
        202:
          description: "Accepted response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Users"
      description: "Accepts a comma-separated list of up to 100 user ids.\n\n#### Allowed For:\n\n* Admins\n"
      operationId: "LogoutManyUsers"
      summary: "Logout many users"
  /api/v2/users/me:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/CurrentUserResponse"
      tags:
      - "Users"
      description: "The endpoint returns [user information](/api-reference/ticketing/users/users/) and an `authenticity_token`. \n\n#### Allowed For\n\n* Anonymous users\n\n#### Authenticity Token\n\nZendesk API calls made by end users from a Zendesk help center must include `authenticity_token` in the `X-CSRF-Token` HTTP header. This helps prevent [cross-site request forgery (CSRF)](https://en.wikipedia.org/wiki/Cross-site_request_forgery) attacks.\n\nFor an example using an authenticity token, see the AJAX request in the [Upgrading from Templating API v1](https://developer.zendesk.com/documentation/help_center/help-center-templates/v1#jquery) documentation.\n"
      operationId: "ShowCurrentUser"
      summary: "Show Self"
  /api/v2/users/me/logout:
    delete:
      parameters: []
      responses:
        204:
          description: "No Content"
      tags:
      - "Sessions"
      description: "Deletes the current session. In practice, this only works when using session auth for requests, such as client-side requests\nmade from a Zendesk app. When using OAuth or basic authentication, you don't have a current session so this endpoint has no effect.\n\n#### Allowed For\n\n* Admins, Agents, End users\n"
      operationId: "DeleteAuthenticatedSession"
      summary: "Delete the Authenticated Session"
  /api/v2/users/me/session:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SessionResponse"
      tags:
      - "Sessions"
      description: "#### Allowed For\n\n* Admins, Agents, End users\n"
      operationId: "ShowCurrentlyAuthenticatedSession"
      summary: "Show the Currently Authenticated Session"
  /api/v2/users/me/session/renew:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/RenewSessionResponse"
      tags:
      - "Sessions"
      description: "#### Allowed For\n\n* Admins, Agents, End users\n"
      operationId: "RenewCurrentSession"
      summary: "Renew the current session"
  /api/v2/users/request_create:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRequest"
      responses:
        200:
          description: "description"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Users"
      description: "Sends the owner a reminder email to update their subscription so more agents can be created.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "RequestUserCreate"
      summary: "Request User Create"
  /api/v2/users/search:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The `query` parameter supports the Zendesk search syntax for more advanced\nuser searches. It can specify a partial or full value of any\nuser property, including name, email address, notes, or phone. Example:\n`query=\"jdoe\"`.\nSee the [Search API](/api-reference/ticketing/ticket-management/search/).\n"
        in: "query"
        name: "query"
        type: "string"
        x-example: "jdoe"
      - description: "The `external_id` parameter does not support the search syntax. It only accepts ids.\n"
        in: "query"
        name: "external_id"
        type: "string"
        x-example: "abc124"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UsersResponse"
      tags:
      - "Users"
      description: "Returns an array of users who meet the search criteria.\n\nReturns up to 100 records per page to a maximum of 10,000 records per query. See [Using offset pagination](/api-reference/introduction/pagination/#using-offset-pagination).\n\n#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n"
      operationId: "SearchUsers"
      summary: "Search Users"
  /api/v2/users/show_many:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Accepts a comma-separated list of up to 100 user ids.\n"
        in: "query"
        name: "ids"
        type: "string"
        x-example: "1,2"
      - description: "Accepts a comma-separated list of up to 100 external ids.\n"
        in: "query"
        name: "external_ids"
        type: "string"
        x-example: "abc,def"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UsersResponse"
      tags:
      - "Users"
      description: "Accepts a comma-separated list of up to 100 user ids or external ids.\n\n#### Allowed For:\n\n* Agents\n"
      operationId: "ShowManyUsers"
      summary: "Show Many Users"
  /api/v2/users/update_many:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - description: "Id of the users to update. Comma separated"
        in: "query"
        name: "ids"
        type: "string"
        x-example: "1,2,3"
      - description: "External Id of the users to update. Comma separated"
        in: "query"
        name: "external_ids"
        type: "string"
        x-example: "abc,def,ghi"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: object
          additionalProperties: true
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/JobStatusResponse"
      tags:
      - "Users"
      operationId: "UpdateManyUsers"
      summary: "Update Many Users"
  /api/v2/users/{user_id}:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    delete:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserResponse"
      tags:
      - "Users"
      description: "Deletes the user and associated records from the account.\n\n**Warning**:\n\n* Deleted users are not recoverable.\n* Both agents and administrators can soft delete users in the agent interface in Zendesk Support. Agents with permission can delete end users, while administrators can delete all users except the account owner.\n\nTo comply with GDPR, a further step is needed. See [Permanently Delete User](/api-reference/ticketing/users/users/#permanently-delete-user).\n\n#### Allowed For\n\n* Admins and [agents in custom roles with permission](https://support.zendesk.com/hc/en-us/articles/4408882153882#topic_cxn_hig_bd) to manage end users or team members\n"
      operationId: "DeleteUser"
      summary: "Delete User"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserResponse"
      tags:
      - "Users"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "ShowUser"
      summary: "Show User"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserResponse"
      tags:
      - "Users"
      operationId: "UpdateUser"
      summary: "Update User"
  /api/v2/users/{user_id}/compliance_deletion_statuses:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Area of compliance"
        in: "query"
        name: "application"
        type: "string"
        x-example: "chat"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ComplianceDeletionStatusesResponse"
      tags:
      - "Users"
      description: "Returns the GDPR status for each user per area of compliance. A Zendesk area of compliance is typically a product like \"support/explore\" but can be more fine-grained for areas within the product lines.\n\nIf the user is not in the account, the request returns a 404 status.\n\n```http\nStatus: 404\n{\n  \"error\":\"RecordNotFound\",\n  \"description\":\"Not found\"\n}\n```\n\n#### Allowed For\n\n* Agents, with restrictions\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ShowUserComplianceDeletionStatuses"
      summary: "Show Compliance Deletion Statuses"
  /api/v2/users/{user_id}/group_memberships/{group_membership_id}/make_default:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    - description: "The ID of the group membership"
      in: "path"
      name: "group_membership_id"
      required: true
      type: "integer"
      x-example: 4
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/GroupMembershipsResponse"
      tags:
      - "Group Memberships"
      description: "#### Allowed For:\n\n* Agents\n"
      operationId: "GroupMembershipSetDefault"
      summary: "Set Membership as Default"
  /api/v2/users/{user_id}/identities:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserIdentitiesResponse"
      tags:
      - "User Identities"
      description: "Returns a list of identities for the given user.\n\nUse the first endpoint if authenticating as an agent. Use the second if authenticating as an end user. End users can only list email and phone number identities.\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n* Verified end users\n"
      operationId: "ListUserIdentities"
      summary: "List Identities"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        201:
          description: "Created response"
          schema:
            $ref: "#/definitions/UserIdentityResponse"
      tags:
      - "User Identities"
      description: "Adds an identity to a user's profile. An agent can add an identity to any user profile.\n\nSupported identity types:\n\n| Type             | Example |\n| ---------------- | ------- |\n| email            | `{ \"type\" : \"email\", \"value\" : \"someone@example.com\" }` |\n| twitter          | `{ \"type\" : \"twitter\", \"value\" : \"screen_name\" }` |\n| facebook         | `{ \"type\" : \"facebook\", \"value\" : \"855769377321\" }` |\n| google           | `{ \"type\" : \"google\", \"value\" : \"example@gmail.com\" }` |\n| agent_forwarding | `{ \"type\" : \"agent_forwarding\", \"value\" : \"+1 555-123-4567\" }` |\n| phone_number     | `{ \"type\" : \"phone_number\", \"value\" : \"+1 555-123-4567\" }` |\n\nTo create an identity without sending out a verification email, include a `\"skip_verify_email\": true` property.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "CreateUserIdentity"
      summary: "Create Identity"
  /api/v2/users/{user_id}/identities/{user_identity_id}:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    - description: "The ID of the user identity"
      in: "path"
      name: "user_identity_id"
      required: true
      type: "integer"
      x-example: 77938
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "User Identities"
      description: "Deletes the identity for a given user.\nIn certain cases, a phone number associated with an identity is still visible on the user profile after the identity has been deleted via API. You can remove the phone number from the user profile by updating the `phone` attribute of the user to an empty string. See [Update User via API](/api-reference/ticketing/users/users/#update-user) for details and examples.\n\n#### Allowed For\n* Agents\n"
      operationId: "DeleteUserIdentity"
      summary: "Delete Identity"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserIdentityResponse"
      tags:
      - "User Identities"
      description: "Shows the identity with the given id for a given user.\n\nUse the first endpoint if authenticating as an agent. Use the second if authenticating as an end user. End users can only view email or phone number identity.\n\n#### Allowed For\n\n* Agents\n* Verified end users\n"
      operationId: "ShowUserIdentity"
      summary: "Show Identity"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserIdentityResponse"
      tags:
      - "User Identities"
      description: "This endpoint allows you to:\n\n* Set the specified identity as verified (but you cannot unverify a verified identity)\n* Update the `value` property of the specified identity\n\nYou can't change an identity's `primary` attribute with this endpoint. You must use the [Make Identity Primary](#make-identity-primary) endpoint instead.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "UpdateUserIdentity"
      summary: "Update Identity"
  /api/v2/users/{user_id}/identities/{user_identity_id}/make_primary:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    - description: "The ID of the user identity"
      in: "path"
      name: "user_identity_id"
      required: true
      type: "integer"
      x-example: 77938
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserIdentitiesResponse"
      tags:
      - "User Identities"
      description: "Sets the specified identity as primary. To change other attributes, use the [Update  Identity](#update-identity) endpoint. This is a collection-level operation and the correct behavior for an API client is to subsequently reload the entire collection.\n\nThe first endpoint is the preferred option if authenticating as an agent. If authenticating as an end user, you can only use the second endpoint. In addition, an end user can only make an email identity primary if the email is verified.\n\n#### Allowed For\n\n* Agents\n* Verified end users\n"
      operationId: "MakeUserIdentityPrimary"
      summary: "Make Identity Primary"
  /api/v2/users/{user_id}/identities/{user_identity_id}/request_verification:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    - description: "The ID of the user identity"
      in: "path"
      name: "user_identity_id"
      required: true
      type: "integer"
      x-example: 77938
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success description"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "User Identities"
      description: "Sends the user a verification email with a link to verify ownership of the email address.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "RequestUserVerfication"
      summary: "Request User Verification"
  /api/v2/users/{user_id}/identities/{user_identity_id}/verify:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    - description: "The ID of the user identity"
      in: "path"
      name: "user_identity_id"
      required: true
      type: "integer"
      x-example: 77938
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserIdentityResponse"
      tags:
      - "User Identities"
      description: "Sets the specified identity as verified.\n\nFor security reasons, you can't use this endpoint to update the email identity of the account owner. To verify the person's identity, send a verification email. See [Verifying the account owner's email address](https://support.zendesk.com/hc/en-us/articles/4408828975130) in Zendesk help.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "VerifyUserIdentity"
      summary: "Verify Identity"
  /api/v2/users/{user_id}/merge:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRequest"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserResponse"
      tags:
      - "Users"
      description: "Merges the end user specified in the path parameter into the existing end user specified in the request body.\n\nAny two end users can be merged with the exception of end users created by sharing agreements.\n\nAgents and admins cannot be merged.\n\nFor more information about how user data is merged, see [Merging a user's duplicate account](https://support.zendesk.com/hc/en-us/articles/4408887695898) in Zendesk help.\n\n#### Allowed For\n\n* Admins or agents with permission to edit end users\n"
      operationId: "MergeEndUsers"
      summary: "Merge End Users"
  /api/v2/users/{user_id}/organization_memberships/{organization_membership_id}/make_default:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    - description: "The ID of the organization membership"
      in: "path"
      name: "organization_membership_id"
      required: true
      type: "integer"
      x-example: 4
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationMembershipsResponse"
      tags:
      - "Organization Memberships"
      description: "Sets the default organization membership of a given user.\n\n#### Allowed for\n\n* Admins\n* Agents when setting the default organization membership for an end user\n"
      operationId: "SetOrganizationMembershipAsDefault"
      summary: "Set Membership as Default"
  /api/v2/users/{user_id}/organizations/{organization_id}:
    parameters:
    - description: "The ID of an organization"
      in: "path"
      name: "organization_id"
      required: true
      type: "integer"
      x-example: 16
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Organization Memberships"
      description: "Immediately removes a user from an organization and schedules a job to unassign all working tickets currently assigned to the user and organization combination. The `organization_id` of the unassigned tickets is set to null.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "UnassignOrganization"
      summary: "Unassign Organization"
  /api/v2/users/{user_id}/organizations/{organization_id}/make_default:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    - description: "The ID of an organization"
      in: "path"
      name: "organization_id"
      required: true
      type: "integer"
      x-example: 16
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/OrganizationMembershipResponse"
      tags:
      - "Organization Memberships"
      description: "Sets the default organization membership of a given user.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "SetOrganizationAsDefault"
      summary: "Set Organization as Default"
  /api/v2/users/{user_id}/password:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success description"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "User Passwords"
      description: "An admin can set a user's password only if the setting is enabled in Zendesk Support under **Settings** > **Security** > **Global**. The setting is off by default. Only the account owner can access and change this setting.\n\n[API token](https://support.zendesk.com/hc/en-us/articles/4408831452954-How-can-I-authenticate-API-requests#h_01HT5BS5HV15B7R6Q3B67M4SQW) authentication is not permitted on this endpoint.\n\n#### Allowed For\n\n* Admins\n"
      operationId: "SetUserPassword"
      summary: "Set a User's Password"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success description"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "User Passwords"
      description: "You can only change your own password. Nobody can change the password of another user because it requires knowing the user's existing password. However, an admin can set a new password for another user without knowing the existing password. See [Set a User's Password](#set-a-users-password) above.\n\n[API token](https://support.zendesk.com/hc/en-us/articles/4408831452954-How-can-I-authenticate-API-requests#h_01HT5BS5HV15B7R6Q3B67M4SQW) authentication is not permitted on this endpoint.\n\n#### Allowed For\n\n* Agents\n* End Users\n"
      operationId: "ChangeOwnPassword"
      summary: "Change Your Password"
  /api/v2/users/{user_id}/password/requirements:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserPasswordRequirementsResponse"
      tags:
      - "User Passwords"
      description: "#### Allowed For\n\n* Agents\n* End Users\n"
      operationId: "GetUserPasswordRequirements"
      summary: "List password requirements"
  /api/v2/users/{user_id}/related:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/UserRelatedResponse"
      tags:
      - "Users"
      operationId: "ShowUserRelated"
      summary: "Show User Related Information"
  /api/v2/users/{user_id}/sessions:
    parameters:
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    delete:
      parameters: []
      responses:
        204:
          description: "No Content"
      tags:
      - "Sessions"
      description: "Deletes all the sessions for a user.\n\n#### Allowed For\n\n* Admins, Agents, End users\n"
      operationId: "BulkDeleteSessionsByUserId"
      summary: "Bulk Delete Sessions"
  /api/v2/users/{user_id}/sessions/{session_id}:
    parameters:
    - description: "The ID of the session"
      in: "path"
      name: "session_id"
      required: true
      type: "integer"
      x-example: 14
    - description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    delete:
      parameters: []
      responses:
        204:
          description: "No Content"
      tags:
      - "Sessions"
      description: "#### Allowed For\n\n* Admins, Agents, End users\n"
      operationId: "DeleteSession"
      summary: "Delete Session"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/SessionResponse"
      tags:
      - "Sessions"
      description: "#### Allowed For\n\n* Admins, Agents, End users\n"
      operationId: "ShowSession"
      summary: "Show Session"
  /api/v2/users/{user_id}/skips:
    parameters:
    - description: "User ID of an agent"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    - description: "Sort order. Defaults to \"asc\""
      enum:
      - "asc"
      - "desc"
      in: "query"
      name: "sort_order"
      type: "string"
    - description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketSkipsResponse"
      tags:
      - "Ticket Skips"
      description: "Archived tickets are not included in the response. See\n[About archived tickets](https://support.zendesk.com/hc/en-us/articles/203657756) in\nthe Support Help Center.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n* Agents with \"View only\" or higher reports permissions in Support.\n  These permissions are distinct from Explore permissions.\n* Agents retrieving their own skips\n"
      operationId: "ListTicketSkips"
      summary: "List Ticket Skips"
  /api/v2/views:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Only views with given access. May be \"personal\", \"shared\", or \"account\""
        in: "query"
        name: "access"
        type: "string"
      - description: "Only active views if true, inactive views if false"
        in: "query"
        name: "active"
        type: "boolean"
      - description: "Only views belonging to given group"
        in: "query"
        name: "group_id"
        type: "integer"
      - description: "Possible values are \"alphabetical\", \"created_at\", or \"updated_at\". Defaults to \"position\""
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
        in: "query"
        name: "sort_order"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewsResponse"
      tags:
      - "Views"
      description: "Lists shared and personal views available to the current user.\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each view, if present\n| permissions      | The permissions for each view\n\n#### Pagination\n\n- Cursor pagination (recommended, but only sorts by `created_at`)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListViews"
      summary: "List Views"
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewResponse"
      tags:
      - "Views"
      description: "#### Allowed For\n\n* Agents\n\n#### JSON Format\n\nThe JSON format consists of one property, a `view` object that lists the values to set when the view is created.\n\n**Note**: The request must include at least one condition in the `all` array that checks one of the following fields: `status`, `type`, `group_id`, `assignee_id`, or `requester_id`.\n\n| Name        | Description\n| ----------- | -----------\n| title       | Required. The title of the view\n| all         | Required. An array of one or more conditions. A ticket must meet all of them to be included in the view. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n| any         | An array of one or more conditions. A ticket must meet any of them to be included in the view. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n| description | The description of the view\n| active      | Allowed values are true or false. Determines if the view is displayed or not\n| output      | An object that specifies the columns to display. Example: `\"output\": {\"columns\": [\"status\", \"description\", \"priority\"]}`. See [View columns](#view-columns)\n| restriction | An object that describes who can access the view. To give all agents access to the view, omit this property\n\nThe `restriction` object has the following properties.\n\n| Name | Comment\n| ---- | -------\n| type | Allowed values are \"Group\" or \"User\"\n| id   | The numeric ID of a single group or user\n| ids  | The numeric IDs of a single or more groups. Recommended for \"Group\" `type`\n\nIf `type` is \"Group\", the `ids` property is the preferred method of specifying the group id or ids.\n\n#### Example Request Body\n\n```js\n{\n  \"view\": {\n    \"title\": \"Kelly's tickets\",\n    \"raw_title\": \"{{dc.tickets_assigned_to_kelly}}\",\n    \"description\": \"Tickets that are assigned to Kelly\",\n    \"active\": true,\n    \"position\": 3,\n    \"restriction\": {\n      \"type\": \"User\",\n      \"id\": \"213977756\"\n    },\n    \"all\": [\n      {\n        \"field\": \"status\",\n        \"operator\": \"less_than\",\n        \"value\": \"solved\"\n      },\n      {\n        \"field\": \"group_id\",\n        \"operator\": \"is\",\n        \"value\": \"24000932\"\n      },\n      {\n        \"field\": \"custom_fields_360011872073\",\n        \"operator\": \"is\",\n        \"value\": \"Canada\"\n      },\n      ...\n    ],\n    \"output\": {\n      \"columns\": [\"status\", \"requester\", \"assignee\"],\n      \"group_by\": \"assignee\",\n      \"group_order\": \"desc\",\n      \"sort_by\": \"status\",\n      \"sort_order\": \"desc\"\n    }\n  }\n}\n```\n\n#### View columns\n\nThe `output` request parameter lets you specify what columns to include in the view in the agent interface. Example: `\"output\": {\"columns\": [\"status\", \"description\", \"priority\"]}`. The following table lists possible columns for views in the agent UI and the corresponding values in the `columns` array.\n\nFor custom fields, specify the id of the custom field in the `columns` array.\n\nYou can specify a total of 10 columns to a view.\n\n| View column title in UI     | Value                |\n|---------------------------- | -------------------- |\n| Assigned                    | `assigned`           |\n| Assignee                    | `assignee`           |\n| Due Date                    | `due_date`           |\n| Group                       | `group`              |\n| ID                          | `nice_id`            |\n| Updated                     | `updated`            |\n| Assignee updated            | `updated_assignee`   |\n| Requester updated           | `updated_requester`  |\n| Updater                     | `updated_by_type`    |\n| Organization                | `organization`       |\n| Priority                    | `priority`           |\n| Requested                   | `created`            |\n| Requester                   | `requester`          |\n| Requester language          | `locale_id`          |\n| Satisfaction                | `satisfaction_score` |\n| Solved                      | `solved`             |\n| Status category             | `status`             |\n| Subject                     | `description`        |\n| Submitter                   | `submitter`          |\n| Ticket form                 | `ticket_form`        |\n| Type                        | `type`               |\n| Brand                       | `brand`              |\n| Ticket status               | `custom_status_id`   |\n\n#### View sorting\n\nYou can group and sort items in the view by adding items to the `output` parameter:\n\n| Attribute                   | Description\n|-----------------------------| -----------\n| `group_by`, `sort_by`       | Sort or group the tickets by a column in the [View columns](#view-columns) table. The `subject` and `submitter` columns are not supported\n| `group_order`, `sort_order` | Either \"asc\" or \"desc\"\n"
      operationId: "CreateView"
      summary: "Create View"
  /api/v2/views/active:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Only views with given access. May be \"personal\", \"shared\", or \"account\""
        in: "query"
        name: "access"
        type: "string"
      - description: "Only views belonging to given group"
        in: "query"
        name: "group_id"
        type: "integer"
      - description: "Possible values are \"alphabetical\", \"created_at\", or \"updated_at\". Defaults to \"position\""
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
        in: "query"
        name: "sort_order"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewsResponse"
      tags:
      - "Views"
      description: "Lists active shared and personal views available to the current user.\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each view, if present\n| permissions      | The permissions for each view\n\n#### Pagination\n\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\nReturns a maximum of 100 records per page.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListActiveViews"
      summary: "List Active Views"
  /api/v2/views/compact:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewsResponse"
      tags:
      - "Views"
      description: "A compacted list of shared and personal views available to the current user. This endpoint never returns more than 32 records and does not respect the \"per_page\" option.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ListCompactViews"
      summary: "List Views - Compact"
  /api/v2/views/count:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Count of views"
          schema:
            $ref: "#/definitions/ViewsCountResponse"
      tags:
      - "Views"
      description: "Returns an approximate count of shared and personal views available to the current user. If the count exceeds 100,000, the count will return a cached result.  This cached result will update every 24 hours.\n\nThe `count[refreshed_at]` property is a timestamp that indicates when the count was last updated.\n\n**Note**: When the count exceeds 100,000, `count[refreshed_at]` may occasionally be null.\nThis indicates that the count is being updated in the background, and `count[value]` is limited to 100,000 until the update is complete.\n\n#### Allowed For\n* Agents"
      operationId: "CountViews"
      summary: "Count Views"
  /api/v2/views/count_many:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "List of view's ids separated by commas."
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "1,2,3"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewCountsResponse"
      tags:
      - "Views"
      description: "Returns the ticket count of each view in a list of views. Accepts up to 20 view ids per request. For the ticket count of a single view, see [Count Tickets in View](#count-tickets-in-view).\n\nOnly returns values for personal and shared views accessible to the user performing the request.\n\nThis endpoint is rate limited to 6 requests every 5 minutes.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "GetViewCounts"
      summary: "Count Tickets in Views"
  /api/v2/views/destroy_many:
    delete:
      parameters:
      - description: "The IDs of the views to delete"
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "1,2,3"
      responses:
        204:
          description: "No Content response"
      tags:
      - "Views"
      description: "Deletes the views corresponding to the provided list of IDs.\n\n#### Allowed For\n* Agents\n"
      operationId: "BulkDeleteViews"
      summary: "Bulk Delete Views"
  /api/v2/views/preview:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewResponse"
      tags:
      - "Views"
      description: "You can preview views by constructing the conditions in the proper format and nesting them under the `view` property. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference/). The output can also be controlled by passing in any of the following parameters and nesting them under the `output` property.\n\n| Name            | Type    | Comment\n| --------------- | ------- | -------\n| columns         | Array   | The ticket fields to display. System fields are looked up by name, custom fields by title or id. See the [View columns](#view-columns) table\n| group_by        | String  | When present, the field by which the tickets are grouped\n| group_order     | String  | The direction the tickets are grouped. May be one of \"asc\" or \"desc\"\n| sort_order      | String  | The direction the tickets are sorted. May be one of \"asc\" or \"desc\"\n| sort_by         | String  | The ticket field used for sorting. This will either be a title or a custom field id.\n\nThis endpoint is rate limited to 5 requests per minute, per view, per agent.\n\n#### Pagination\n\n- Cursor pagination (recommended)\n- Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n\n#### Allowed For\n\n* Agents\n"
      operationId: "PreviewViews"
      summary: "Preview Views"
  /api/v2/views/preview/count:
    post:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewCountResponse"
      tags:
      - "Views"
      description: "Returns the ticket count for a single preview.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "PreviewCount"
      summary: "Preview Ticket Count"
  /api/v2/views/search:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Query string used to find all views with matching title"
        in: "query"
        name: "query"
        required: true
        type: "string"
        x-example: "sales&group_id=25789188"
      - description: "Filter views by access. May be \"personal\", \"shared\", or \"account\""
        in: "query"
        name: "access"
        type: "string"
      - description: "Filter by active views if true or inactive views if false"
        in: "query"
        name: "active"
        type: "boolean"
      - description: "Filter views by group"
        in: "query"
        name: "group_id"
        type: "integer"
      - description: "Possible values are \"alphabetical\", \"created_at\", \"updated_at\", and \"position\". If unspecified, the views are sorted by relevance"
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
        in: "query"
        name: "sort_order"
        type: "string"
      - description: "A sideload to include in the response. See [Sideloads](#sideloads-3)"
        in: "query"
        name: "include"
        type: "string"
        x-example: "permissions"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewsResponse"
      tags:
      - "Views"
      description: "#### Pagination\n\n* Offset pagination only\n\nSee [Using Offset Pagination](/api-reference/ticketing/introduction/#using-offset-pagination).\n\n#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported. For more information, see [Side-loading](/documentation/ticketing/using-the-zendesk-api/side_loading/).\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each view, if present\n| permissions      | The permissions for each view\n"
      operationId: "SearchViews"
      summary: "Search Views"
  /api/v2/views/show_many:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "List of view's ids separated by commas."
        in: "query"
        name: "ids"
        required: true
        type: "string"
        x-example: "1,2,3"
      - description: "Only active views if true, inactive views if false"
        in: "query"
        name: "active"
        type: "boolean"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewsResponse"
      tags:
      - "Views"
      description: "#### Allowed For\n\n* Agents\n\n#### Sideloads\n\nThe following sideloads are supported:\n\n| Name             | Will sideload\n| ---------------- | -------------\n| app_installation | The app installation that requires each view, if present\n| permissions      | The permissions for each view\n"
      operationId: "ListViewsById"
      summary: "List Views By ID"
  /api/v2/views/update_many:
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewsResponse"
      tags:
      - "Views"
      description: "#### Allowed For\n\n* Agents\n\n#### Request Parameters\n\nThe PUT request expects a `views` object that lists the views to update.\n\nEach view may have the following properties:\n\n| Name     | Mandatory | Description\n| -------- | --------- | -----------\n| id       | yes       | The ID of the view to update\n| position | no        | The new position of the view\n| active   | no        | The active status of the view (true or false)\n\n#### Example Request Body\n\n```js\n{\n  \"views\": [\n    {\"id\": 25, \"position\": 3},\n    {\"id\": 23, \"position\": 5},\n    {\"id\": 27, \"position\": 9},\n    {\"id\": 22, \"position\": 7}\n  ]\n}\n```\n"
      operationId: "UpdateManyViews"
      summary: "Update Many Views"
  /api/v2/views/{view_id}:
    parameters:
    - description: "The ID of the view"
      in: "path"
      name: "view_id"
      required: true
      type: "integer"
      x-example: 25
    delete:
      parameters: []
      responses:
        204:
          description: "No Content response"
      tags:
      - "Views"
      description: "#### Allowed For\n* Agents\n"
      operationId: "DeleteView"
      summary: "Delete View"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewResponse"
      tags:
      - "Views"
      description: "#### Allowed For\n\n* Agents\n"
      operationId: "ShowView"
      summary: "Show View"
    put:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewResponse"
      tags:
      - "Views"
      description: "#### Allowed For\n\n* Agents\n\n#### JSON Format\n\n The PUT request takes one property, a `view` object that lists the values to update. All properties are optional.\n\n**Note**: Updating a condition updates the containing array, clearing the other conditions. Include all your conditions when updating any condition.\n\n| Name        | Description\n| ----------- | -----------\n| title       | The title of the view\n| all         | An array of one or more conditions. A ticket must meet all the conditions to be included in the view. The PUT request replaces all existing conditions. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n| any         | An array of one or more conditions. A ticket must meet any of them to be included in the view. At least one `all` condition must be defined with the `any` conditions. The PUT request replaces all existing `any` conditions. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)\n| active      | Allowed values are true or false. Determines if the view is displayed or not\n| output      | An object that specifies the columns to display. Example: `\"output\": {\"columns\": [\"status\", \"description,\" \"priority\"]}`. See [View columns](#view-columns)\n| restriction | An object that describes who can access the view. To give all agents access to the view, omit this property\n\nThe `restriction` object has the following properties.\n\n| Name | Comment\n| ---- | -------\n| type | Allowed values are \"Group\" or \"User\"\n| id   | The numeric ID of a single group or user\n| ids  | The numeric IDs of a single or more groups. Recommended for \"Group\" `type`\n\nIf `type` is \"Group\", the `ids` property is the preferred method of specifying the group id or ids.\n\nYou can also update how items are sorted and grouped. See [View sorting](#view-sorting) in Create View.\n\n#### Example Request Body\n\n```js\n{\n  \"view\": {\n    \"title\": \"Code red tickets\",\n    \"restriction\": {\n      \"type\": \"Group\",\n      \"ids\": [10052, 10057, 10062, 10002]\n    },\n    \"all\": [\n      {\n        \"field\": \"priority\",\n        \"operator\": \"is\",\n        \"value\": \"urgent\"\n      }\n    ],\n    \"output\": {\n      \"columns\": [\"status\", \"requester\", \"assignee\", \"updated\"]\n    }\n  }\n}\n```\n"
      operationId: "UpdateView"
      summary: "Update View"
  /api/v2/views/{view_id}/count:
    parameters:
    - description: "The ID of the view"
      in: "path"
      name: "view_id"
      required: true
      type: "integer"
      x-example: 25
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewCountResponse"
      tags:
      - "Views"
      description: "Returns the ticket count for a single view.\n\nThis endpoint is rate limited to 5 requests per minute, per view, per agent.\n\n#### View Counts\n\nThe view count endpoints, Count Tickets in View (this endpoint) and [Count Tickets in Views](#count-tickets-in-views), let you estimate how many tickets remain in a view without having to retrieve the entire view. They're designed to help estimate view size. From a business perspective, accuracy becomes less relevant as view size increases.\n\nTo ensure quality of service, these counts are cached more heavily as the number of tickets in a view grows. For a view with thousands of tickets, you can expect the count to be cached for 60-90 minutes. As a result, the count may not reflect the actual number of tickets in your view.\n\nView counts are represented as JSON objects with the following attributes:\n\n| Name            | Type        | Comment\n| --------------- | ------------| -------\n| view_id         | integer     | The id of the view\n| url             | string      | The API url of the count\n| value           | integer     | The cached number of tickets in the view. Can also be null if the system is loading and caching new data. Not to be confused with 0 tickets\n| pretty          | string      | A pretty-printed text approximation of the view count\n| fresh           | boolean     | false if the cached data is stale and the system is still loading and caching new data\n| active          | boolean     | Only active views if true, inactive views if false, all views if null.\n\n#### Example\n```js\n{\n  \"view_count\": {\n    \"view_id\": 25,\n    \"url\":     \"https://company.zendesk.com/api/v2/views/25/count.json\",\n    \"value\":   719,\n    \"pretty\":  \"~700\",\n    \"fresh\":   true\n  }\n}\n```\n"
      operationId: "GetViewCount"
      summary: "Count Tickets in View"
  /api/v2/views/{view_id}/execute:
    parameters:
    - description: "The ID of the view"
      in: "path"
      name: "view_id"
      required: true
      type: "integer"
      x-example: 25
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The ticket field used for sorting. This will either be a title or a custom field id."
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "The direction the tickets are sorted. May be one of 'asc' or 'desc'"
        in: "query"
        name: "sort_order"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewResponse"
      tags:
      - "Views"
      description: "Returns the column titles and the rows of the specified view.\n\nThe `columns` array lists the view's column titles and includes only views parameters.\n\nThe `rows` array lists the values of each column for each ticket and includes parameters from both views and tickets. Though not displayed in the view, a partial ticket object is included with each row object.\n\n**Note**: To get the full ticket objects for a specified view, use [List Tickets from a View](#list-tickets-from-a-view).\n\nThis endpoint is rate limited to 5 requests per minute, per view, per agent.\n\nThe view execution system is designed for periodic rather than high-frequency API usage. In particular, views called very frequently may be cached by Zendesk. This means that the API client will still receive a result, but that result may have been computed at any time within the last 10 minutes.\n\nZendesk recommends using the Incremental Ticket Export endpoint to get the latest changes. You can call it more often, and it returns all the tickets that changed since the last poll. For details and rate limits, see [Incremental Exports](/api-reference/ticketing/ticket-management/incremental_exports/).\n\nView output sorting can be controlled by passing the `sort_by` and `sort_order` parameters in the format described in the table in [Preview Views](#preview-views).\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ExecuteView"
      summary: "Execute View"
  /api/v2/views/{view_id}/export:
    parameters:
    - description: "The ID of the view"
      in: "path"
      name: "view_id"
      required: true
      type: "integer"
      x-example: 25
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ViewExportResponse"
      tags:
      - "Views"
      description: "Returns the csv attachment of the specified view if possible. Enqueues a job to produce the csv if necessary.\n\n#### Allowed For\n\n* Agents\n"
      operationId: "ExportView"
      summary: "Export View"
  /api/v2/views/{view_id}/tickets:
    parameters:
    - description: "The ID of the view"
      in: "path"
      name: "view_id"
      required: true
      type: "integer"
      x-example: 25
    get:
      produces:
      - "application/json"
      parameters:
      - description: "Sort or group the tickets by a column in the [View columns](#view-columns) table. The `subject` and `submitter` columns are not supported"
        in: "query"
        name: "sort_by"
        type: "string"
      - description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
        in: "query"
        name: "sort_order"
        type: "string"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/TicketsResponse"
      tags:
      - "Views"
      description: "#### Allowed For\n\n* Agents\n\n#### Pagination\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "ListTicketsFromView"
      summary: "List Tickets From a View"
  /api/v2/workspaces:
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/WorkspaceResponse"
      tags:
      - "Workspaces"
      description: "#### Allowed For\n\n* Admins, Agents\n"
      operationId: "ListWorkspaces"
      summary: "List Workspaces"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          properties:
            workspace:
              $ref: "#/definitions/WorkspaceInput"
          type: "object"
      responses:
        201:
          description: "Created workspace"
          schema:
            properties:
              workspace:
                $ref: "#/definitions/WorkspaceObject"
            type: "object"
      tags:
      - "Workspaces"
      description: "#### Allowed For\n\n* Admins\n"
      operationId: "CreateWorkspace"
      summary: "Create Workspace"
  /api/v2/workspaces/destroy_many:
    delete:
      produces:
      - "application/json"
      parameters:
      - collectionFormat: "multi"
        description: "The ids of the workspaces to delete"
        in: "query"
        items:
          type: "integer"
        name: "ids"
        required: true
        type: "array"
        x-example:
        - 1
        - 2
        - 3
      responses:
        200:
          description: "Succesful response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Workspaces"
      description: "#### Allowed For\n* Admins\n"
      operationId: "DestroyManyWorkspaces"
      summary: "Bulk Delete Workspaces"
  /api/v2/workspaces/reorder:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          properties:
            ids:
              items:
                type: "number"
              type: "array"
          type: "object"
      responses:
        200:
          description: "Succesful response"
          schema:
            description: "Empty response"
            example: ""
            type: "string"
      tags:
      - "Workspaces"
      description: "#### Allowed For\n* Admins\n"
      operationId: "ReorderWorkspaces"
      summary: "Reorder Workspaces"
  /api/v2/workspaces/{workspace_id}:
    parameters:
    - description: "The id of the workspace"
      in: "path"
      name: "workspace_id"
      required: true
      type: "integer"
      x-example: 3133
    delete:
      parameters: []
      responses:
        204:
          description: "No Content"
      tags:
      - "Workspaces"
      description: "#### Allowed For\n* Admins\n"
      operationId: "DeleteWorkspace"
      summary: "Delete Workspace"
    get:
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful response"
          schema:
            properties:
              workspace:
                $ref: "#/definitions/WorkspaceObject"
            type: "object"
      tags:
      - "Workspaces"
      description: "#### Allowed For\n* Admins\n"
      operationId: "ShowWorkspace"
      summary: "Show Workspace"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          properties:
            workspace:
              $ref: "#/definitions/WorkspaceInput"
          type: "object"
      responses:
        200:
          description: "OK"
          schema:
            properties:
              workspace:
                $ref: "#/definitions/WorkspaceObject"
            type: "object"
      tags:
      - "Workspaces"
      description: "#### Allowed For\n* Admins"
      operationId: "UpdateWorkspace"
      summary: "Update Workspace"
  /api/v2/{target_type}/{target_id}/relationship_fields/{field_id}/{source_type}:
    get:
      produces:
      - "application/json"
      parameters:
      - description: "The type of object the relationship field is targeting.\nThe options are \"zen:user\", \"zen:ticket\", \"zen:organization\", and \"zen:custom_object:CUSTOM_OBJECT_KEY\"\n"
        in: "path"
        name: "target_type"
        required: true
        type: "string"
        x-example: "zen:custom_object:apartment"
      - description: "The id of the object the relationship field is targeting\n"
        in: "path"
        name: "target_id"
        required: true
        type: "integer"
        x-example: 1234
      - description: "The id of the lookup relationship field\n"
        in: "path"
        name: "field_id"
        required: true
        type: "integer"
        x-example: 1234
      - description: "The type of object the relationship field belongs to (example. ticket field belongs to a ticket object).\nThe options are \"zen:user\", \"zen:ticket\", \"zen:organization\", and \"zen:custom_object:CUSTOM_OBJECT_KEY\"\n"
        in: "path"
        name: "source_type"
        required: true
        type: "string"
        x-example: "zen:custom_object:apartment"
      responses:
        200:
          description: "Success response"
          schema:
            $ref: "#/definitions/ReverseLookupResponse"
      tags:
      - "Lookup Relationships"
      description: "Returns a list of source objects whose values are populated with the id of a related target object.  For example,\nif you have a lookup field called \"Success Manager\" on a ticket, this endpoint can answer the question,\n\"What tickets (sources) is this user (found by `target_type` and `target_id`)\nassigned as the 'Success Manager' (field referenced by `field_id`)?\"\n\n#### Allowed For\n\n* Agents\n\n#### Pagination\n\n* Cursor pagination (recommended)\n* Offset pagination\n\nSee [Pagination](/api-reference/introduction/pagination/).\n"
      operationId: "GetSourcesByTarget"
      summary: "Get sources by target"
definitions:
  AccountSettingsActiveFeaturesObject:
    description: "The active features for an account. See [Active Features](#active-features)"
    properties:
      advanced_analytics:
        type: "boolean"
      agent_forwarding:
        type: "boolean"
      allow_ccs:
        type: "boolean"
      allow_email_template_customization:
        type: "boolean"
      automatic_answers:
        type: "boolean"
      bcc_archiving:
        type: "boolean"
      benchmark_opt_out:
        type: "boolean"
      business_hours:
        type: "boolean"
      chat:
        type: "boolean"
      chat_about_my_ticket:
        type: "boolean"
      csat_reason_code:
        type: "boolean"
      custom_dkim_domain:
        type: "boolean"
      customer_context_as_default:
        type: "boolean"
      customer_satisfaction:
        type: "boolean"
      dynamic_contents:
        type: "boolean"
      explore:
        type: "boolean"
      explore_on_support_ent_plan:
        type: "boolean"
      explore_on_support_pro_plan:
        type: "boolean"
      facebook:
        type: "boolean"
      facebook_login:
        type: "boolean"
      fallback_composer:
        type: "boolean"
      forum_analytics:
        type: "boolean"
      good_data_and_explore:
        type: "boolean"
      google_login:
        type: "boolean"
      insights:
        type: "boolean"
      is_abusive:
        type: "boolean"
      light_agents:
        type: "boolean"
      markdown:
        type: "boolean"
      on_hold_status:
        type: "boolean"
      organization_access_enabled:
        type: "boolean"
      rich_content_in_emails:
        type: "boolean"
      sandbox:
        type: "boolean"
      satisfaction_prediction:
        type: "boolean"
      suspended_ticket_notification:
        type: "boolean"
      ticket_forms:
        type: "boolean"
      ticket_tagging:
        type: "boolean"
      topic_suggestion:
        type: "boolean"
      twitter:
        type: "boolean"
      twitter_login:
        type: "boolean"
      user_org_fields:
        type: "boolean"
      user_tagging:
        type: "boolean"
      voice:
        type: "boolean"
    type: "object"
  AccountSettingsAgentObject:
    description: "Configuration for the agent workspace. See [Agents](#agents)"
    properties:
      agent_home:
        type: "boolean"
      agent_workspace:
        type: "boolean"
      aw_self_serve_migration_enabled:
        type: "boolean"
      focus_mode:
        type: "boolean"
      idle_timeout_enabled:
        type: "boolean"
      unified_agent_statuses:
        type: "boolean"
    type: "object"
  AccountSettingsApiObject:
    description: "API configuration options. See [API](#api)"
    properties:
      accepted_api_agreement:
        type: "boolean"
      api_password_access:
        type: "string"
      api_token_access:
        type: "string"
    type: "object"
  AccountSettingsAppsObject:
    description: "Apps configuration options. See [Apps](#apps)"
    properties:
      create_private:
        type: "boolean"
      create_public:
        type: "boolean"
      use:
        type: "boolean"
    type: "object"
  AccountSettingsBillingObject:
    description: "Billing configuration options. See [Billing](#billing)"
    properties:
      backend:
        type: "string"
    type: "object"
  AccountSettingsBrandingObject:
    description: "Branding settings. See [Branding](#branding)"
    properties:
      favicon_url:
        type: "string"
        x-nullable: true
      header_color:
        type: "string"
      header_logo_url:
        type: "string"
        x-nullable: true
      page_background_color:
        type: "string"
      tab_background_color:
        type: "string"
      text_color:
        type: "string"
    type: "object"
  AccountSettingsBrandsObject:
    description: "Brand settings. See [Brands](#brands)"
    properties:
      default_brand_id:
        type: "integer"
      require_brand_on_new_tickets:
        type: "boolean"
    type: "object"
  AccountSettingsCdnObject:
    description: "CDN settings"
    properties:
      cdn_provider:
        type: "string"
      fallback_cdn_provider:
        type: "string"
      hosts:
        items:
          properties:
            name:
              type: "string"
            url:
              type: "string"
          type: "object"
        type: "array"
    type: "object"
  AccountSettingsChatObject:
    description: "Zendesk Chat settings. See [Chat](#chat)"
    properties:
      available:
        type: "boolean"
      enabled:
        type: "boolean"
      integrated:
        type: "boolean"
      maximum_request_count:
        type: "integer"
      welcome_message:
        type: "string"
    type: "object"
  AccountSettingsCrossSellObject:
    description: "Cross Sell settings"
    properties:
      show_chat_tooltip:
        type: "boolean"
      xsell_source:
        type: "string"
        x-nullable: true
    type: "object"
  AccountSettingsGooddataAdvancedAnalyticsObject:
    description: "GoodData settings, used for insights. Legacy configuration prior to Zendesk Explore. See [GoodData Advanced Analytics](#gooddata-advanced-analytics)"
    properties:
      enabled:
        type: "boolean"
    type: "object"
  AccountSettingsGoogleAppsObject:
    description: "Google Apps configuration. See [G Suite](#g-suite)"
    properties:
      has_google_apps:
        type: "boolean"
      has_google_apps_admin:
        type: "boolean"
    type: "object"
  AccountSettingsGroupObject:
    description: "Group configuration"
    properties:
      check_group_name_uniqueness:
        type: "boolean"
    type: "object"
  AccountSettingsLimitsObject:
    description: "Account limits configuration. See [Limits](#limits)"
    properties:
      attachment_size:
        type: "integer"
    type: "object"
  AccountSettingsLocalizationObject:
    description: "Internationalization configuration settings. See [Localization](#localization)"
    properties:
      locale_ids:
        items:
          type: "integer"
        type: "array"
    type: "object"
  AccountSettingsLotusObject:
    description: "Support UI settings. See [Lotus](#lotus)"
    properties:
      pod_id:
        type: "integer"
      prefer_lotus:
        type: "boolean"
      reporting:
        type: "boolean"
    type: "object"
  AccountSettingsMetricsObject:
    description: "Account metrics settings. See [Metrics](#metrics)"
    properties:
      account_size:
        type: "string"
    type: "object"
  AccountSettingsObject:
    example:
      active_features:
        advanced_analytics: false
        agent_forwarding: false
        allow_ccs: true
        allow_email_template_customization: true
        automatic_answers: false
        bcc_archiving: false
        benchmark_opt_out: false
        business_hours: false
        chat: false
        chat_about_my_ticket: false
        csat_reason_code: false
        custom_dkim_domain: true
        customer_context_as_default: false
        customer_satisfaction: false
        dynamic_contents: false
        explore: true
        explore_on_support_ent_plan: false
        explore_on_support_pro_plan: false
        facebook: false
        facebook_login: false
        fallback_composer: false
        forum_analytics: true
        good_data_and_explore: false
        google_login: false
        insights: false
        is_abusive: false
        light_agents: false
        markdown: false
        on_hold_status: false
        organization_access_enabled: true
        rich_content_in_emails: true
        sandbox: false
        satisfaction_prediction: false
        suspended_ticket_notification: false
        ticket_forms: true
        ticket_tagging: true
        topic_suggestion: false
        twitter: true
        twitter_login: false
        user_org_fields: true
        user_tagging: true
        voice: true
      agents:
        agent_home: false
        agent_workspace: false
        aw_self_serve_migration_enabled: true
        focus_mode: false
        idle_timeout_enabled: false
        unified_agent_statuses: false
      api:
        accepted_api_agreement: true
        api_password_access: "true"
        api_token_access: "true"
      apps:
        create_private: true
        create_public: false
        use: true
      billing:
        backend: "zuora"
      branding:
        favicon_url: null
        header_color: "78A300"
        header_logo_url: null
        page_background_color: "333333"
        tab_background_color: "7FA239"
        text_color: "FFFFFF"
      brands:
        default_brand_id: 1873
        require_brand_on_new_tickets: false
      cdn:
        cdn_provider: "default"
        fallback_cdn_provider: "cloudfront"
        hosts:
        - name: "default"
          url: "https://p18.zdassets.com"
        - name: "cloudfront"
          url: "https://d2y9oszrd3dhjh.cloudfront.net"
      chat:
        available: true
        enabled: false
        integrated: true
        maximum_request_count: 1
        welcome_message: "Hi there. How can I help today?"
      cross_sell:
        show_chat_tooltip: true
        xsell_source: null
      gooddata_advanced_analytics:
        enabled: true
      google_apps:
        has_google_apps: false
        has_google_apps_admin: false
      groups:
        check_group_name_uniqueness: true
      limits:
        attachment_size: 52428800
      localization:
        locale_ids:
        - 1042
      lotus:
        pod_id: 999
        prefer_lotus: true
        reporting: true
      metrics:
        account_size: "100-399"
      onboarding:
        checklist_onboarding_version: 2
        onboarding_segments: null
        product_sign_up: null
      routing:
        autorouting_tag: ""
        enabled: false
        max_email_capacity: 0
        max_messaging_capacity: 0
        reassignment_messaging_enabled: true
        reassignment_messaging_timeout: 30
        reassignment_talk_timeout: 30
      rule:
        macro_most_used: true
        macro_order: "alphabetical"
        skill_based_filtered_views: []
        using_skill_based_routing: false
      side_conversations:
        email_channel: false
        msteams_channel: false
        show_in_context_panel: false
        slack_channel: false
        tickets_channel: false
      statistics:
        forum: true
        rule_usage: true
        search: true
      ticket_form:
        raw_ticket_forms_instructions: "Please choose your issue below"
        ticket_forms_instructions: "Please choose your issue below"
      tickets:
        accepted_new_collaboration_tos: false
        agent_collision: true
        agent_invitation_enabled: true
        agent_ticket_deletion: false
        allow_group_reset: true
        assign_default_organization: true
        assign_tickets_upon_solve: true
        auto_translation_enabled: false
        auto_updated_ccs_followers_rules: false
        chat_sla_enablement: false
        collaboration: true
        comments_public_by_default: true
        default_solved_ticket_reassignment_strategy: "legacy"
        email_attachments: false
        emoji_autocompletion: true
        follower_and_email_cc_collaborations: false
        has_color_text: true
        is_first_comment_private_enabled: true
        light_agent_email_ccs_allowed: false
        list_empty_views: true
        list_newest_comments_first: true
        markdown_ticket_comments: false
        maximum_personal_views_to_list: 8
        modern_ticket_reassignment: false
        private_attachments: false
        rich_text_comments: true
        show_modern_ticket_reassignment: false
        status_hold: false
        tagging: true
        using_skill_based_routing: false
      twitter:
        shorten_url: "optional"
      user:
        agent_created_welcome_emails: true
        end_user_phone_number_validation: false
        have_gravatars_enabled: true
        language_selection: true
        multiple_organizations: false
        tagging: true
        time_zone_selection: true
      voice:
        agent_confirmation_when_forwarding: true
        agent_wrap_up_after_calls: true
        enabled: true
        logging: true
        maximum_queue_size: 5
        maximum_queue_wait_time: 1
        only_during_business_hours: false
        outbound_enabled: true
        recordings_public: true
        uk_mobile_forwarding: true
    properties:
      active_features:
        $ref: "#/definitions/AccountSettingsActiveFeaturesObject"
      agents:
        $ref: "#/definitions/AccountSettingsAgentObject"
      api:
        $ref: "#/definitions/AccountSettingsApiObject"
      apps:
        $ref: "#/definitions/AccountSettingsAppsObject"
      billing:
        $ref: "#/definitions/AccountSettingsBillingObject"
      branding:
        $ref: "#/definitions/AccountSettingsBrandingObject"
      brands:
        $ref: "#/definitions/AccountSettingsBrandsObject"
      cdn:
        $ref: "#/definitions/AccountSettingsCdnObject"
      chat:
        $ref: "#/definitions/AccountSettingsChatObject"
      cross_sell:
        $ref: "#/definitions/AccountSettingsCrossSellObject"
      gooddata_advanced_analytics:
        $ref: "#/definitions/AccountSettingsGooddataAdvancedAnalyticsObject"
      google_apps:
        $ref: "#/definitions/AccountSettingsGoogleAppsObject"
      groups:
        $ref: "#/definitions/AccountSettingsGroupObject"
      limits:
        $ref: "#/definitions/AccountSettingsLimitsObject"
      localization:
        $ref: "#/definitions/AccountSettingsLocalizationObject"
      lotus:
        $ref: "#/definitions/AccountSettingsLotusObject"
      metrics:
        $ref: "#/definitions/AccountSettingsMetricsObject"
      onboarding:
        $ref: "#/definitions/AccountSettingsOnboardingObject"
      routing:
        $ref: "#/definitions/AccountSettingsRoutingObject"
      rule:
        $ref: "#/definitions/AccountSettingsRuleObject"
      side_conversations:
        $ref: "#/definitions/AccountSettingsSideConversationsObject"
      statistics:
        $ref: "#/definitions/AccountSettingsStatisticsObject"
      ticket_form:
        $ref: "#/definitions/AccountSettingsTicketFormObject"
      tickets:
        $ref: "#/definitions/AccountSettingsTicketObject"
      twitter:
        $ref: "#/definitions/AccountSettingsTwitterObject"
      user:
        $ref: "#/definitions/AccountSettingsUserObject"
      voice:
        $ref: "#/definitions/AccountSettingsVoiceObject"
    type: "object"
  AccountSettingsOnboardingObject:
    description: "Onboarding settings"
    properties:
      checklist_onboarding_version:
        type: "integer"
      onboarding_segments:
        type: "string"
        x-nullable: true
      product_sign_up:
        type: "string"
        x-nullable: true
    type: "object"
  AccountSettingsResponse:
    example:
      settings:
        active_features:
          advanced_analytics: false
          agent_forwarding: false
          allow_ccs: true
          allow_email_template_customization: true
          automatic_answers: false
          bcc_archiving: false
          benchmark_opt_out: false
          business_hours: false
          chat: false
          chat_about_my_ticket: false
          csat_reason_code: false
          custom_dkim_domain: true
          customer_context_as_default: false
          customer_satisfaction: false
          dynamic_contents: false
          explore: true
          explore_on_support_ent_plan: false
          explore_on_support_pro_plan: false
          facebook: false
          facebook_login: false
          fallback_composer: false
          forum_analytics: true
          good_data_and_explore: false
          google_login: false
          insights: false
          is_abusive: false
          light_agents: false
          markdown: false
          on_hold_status: false
          organization_access_enabled: true
          rich_content_in_emails: true
          sandbox: false
          satisfaction_prediction: false
          suspended_ticket_notification: false
          ticket_forms: true
          ticket_tagging: true
          topic_suggestion: false
          twitter: true
          twitter_login: false
          user_org_fields: true
          user_tagging: true
          voice: true
        agents:
          agent_home: false
          agent_workspace: false
          aw_self_serve_migration_enabled: true
          focus_mode: false
          idle_timeout_enabled: false
          unified_agent_statuses: false
        api:
          accepted_api_agreement: true
          api_password_access: "true"
          api_token_access: "true"
        apps:
          create_private: true
          create_public: false
          use: true
        billing:
          backend: "zuora"
        branding:
          favicon_url: null
          header_color: "78A300"
          header_logo_url: null
          page_background_color: "333333"
          tab_background_color: "7FA239"
          text_color: "FFFFFF"
        brands:
          default_brand_id: 1873
          require_brand_on_new_tickets: false
        cdn:
          cdn_provider: "default"
          fallback_cdn_provider: "cloudfront"
          hosts:
          - name: "default"
            url: "https://p18.zdassets.com"
          - name: "cloudfront"
            url: "https://d2y9oszrd3dhjh.cloudfront.net"
        chat:
          available: true
          enabled: false
          integrated: true
          maximum_request_count: 1
          welcome_message: "Hi there. How can I help today?"
        cross_sell:
          show_chat_tooltip: true
          xsell_source: null
        gooddata_advanced_analytics:
          enabled: true
        google_apps:
          has_google_apps: false
          has_google_apps_admin: false
        groups:
          check_group_name_uniqueness: true
        limits:
          attachment_size: 52428800
        localization:
          locale_ids:
          - 1042
        lotus:
          pod_id: 999
          prefer_lotus: true
          reporting: true
        metrics:
          account_size: "100-399"
        onboarding:
          checklist_onboarding_version: 2
          onboarding_segments: null
          product_sign_up: null
        routing:
          autorouting_tag: ""
          enabled: false
          max_email_capacity: 0
          max_messaging_capacity: 0
        rule:
          macro_most_used: true
          macro_order: "alphabetical"
          skill_based_filtered_views: []
          using_skill_based_routing: false
        side_conversations:
          email_channel: false
          msteams_channel: false
          show_in_context_panel: false
          slack_channel: false
          tickets_channel: false
        statistics:
          forum: true
          rule_usage: true
          search: true
        ticket_form:
          raw_ticket_forms_instructions: "Please choose your issue below"
          ticket_forms_instructions: "Please choose your issue below"
        tickets:
          accepted_new_collaboration_tos: false
          agent_collision: true
          agent_invitation_enabled: true
          agent_ticket_deletion: false
          allow_group_reset: true
          assign_default_organization: true
          assign_tickets_upon_solve: true
          auto_translation_enabled: false
          auto_updated_ccs_followers_rules: false
          chat_sla_enablement: false
          collaboration: true
          comments_public_by_default: true
          default_solved_ticket_reassignment_strategy: "legacy"
          email_attachments: false
          emoji_autocompletion: true
          follower_and_email_cc_collaborations: false
          has_color_text: true
          is_first_comment_private_enabled: true
          light_agent_email_ccs_allowed: false
          list_empty_views: true
          list_newest_comments_first: true
          markdown_ticket_comments: false
          maximum_personal_views_to_list: 8
          modern_ticket_reassignment: false
          private_attachments: false
          rich_text_comments: true
          show_modern_ticket_reassignment: false
          status_hold: false
          tagging: true
          using_skill_based_routing: false
        twitter:
          shorten_url: "optional"
        user:
          agent_created_welcome_emails: true
          end_user_phone_number_validation: false
          have_gravatars_enabled: true
          language_selection: true
          multiple_organizations: false
          tagging: true
          time_zone_selection: true
        voice:
          agent_confirmation_when_forwarding: true
          agent_wrap_up_after_calls: true
          enabled: true
          logging: true
          maximum_queue_size: 5
          maximum_queue_wait_time: 1
          only_during_business_hours: false
          outbound_enabled: true
          recordings_public: true
          uk_mobile_forwarding: true
    properties:
      settings:
        $ref: "#/definitions/AccountSettingsObject"
    type: "object"
  AccountSettingsRoutingObject:
    description: "Configuration for routing. See [Routing](#routing)"
    properties:
      autorouting_tag:
        type: "string"
      enabled:
        type: "boolean"
      max_email_capacity:
        type: "integer"
      max_messaging_capacity:
        type: "integer"
      reassignment_messaging_enabled:
        type: "boolean"
      reassignment_messaging_timeout:
        type: "integer"
      reassignment_talk_timeout:
        type: "integer"
    type: "object"
  AccountSettingsRuleObject:
    description: "Rules settings for triggers, macros, views, and automations. See [Rules](#rules)"
    properties:
      macro_most_used:
        type: "boolean"
      macro_order:
        type: "string"
      skill_based_filtered_views:
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      using_skill_based_routing:
        type: "boolean"
    type: "object"
  AccountSettingsSideConversationsObject:
    description: "Side conversations settings"
    properties:
      email_channel:
        type: "boolean"
      msteams_channel:
        type: "boolean"
      show_in_context_panel:
        type: "boolean"
      slack_channel:
        type: "boolean"
      tickets_channel:
        type: "boolean"
    type: "object"
  AccountSettingsStatisticsObject:
    description: "Account statistics settings. See [Statistics](#statistics)"
    properties:
      forum:
        type: "boolean"
      rule_usage:
        type: "boolean"
      search:
        type: "boolean"
    type: "object"
  AccountSettingsTicketFormObject:
    description: "Ticket form settings. See [Ticket Form](#ticket-form)"
    properties:
      raw_ticket_forms_instructions:
        type: "string"
      ticket_forms_instructions:
        type: "string"
    type: "object"
  AccountSettingsTicketObject:
    description: "Ticket settings. See [Tickets](#tickets)"
    properties:
      accepted_new_collaboration_tos:
        type: "boolean"
      agent_collision:
        type: "boolean"
      agent_invitation_enabled:
        type: "boolean"
      agent_ticket_deletion:
        type: "boolean"
      allow_group_reset:
        type: "boolean"
      assign_default_organization:
        type: "boolean"
      assign_tickets_upon_solve:
        type: "boolean"
      auto_translation_enabled:
        type: "boolean"
      auto_updated_ccs_followers_rules:
        type: "boolean"
      chat_sla_enablement:
        type: "boolean"
      collaboration:
        type: "boolean"
      comments_public_by_default:
        type: "boolean"
      default_solved_ticket_reassignment_strategy:
        type: "string"
      email_attachments:
        type: "boolean"
      emoji_autocompletion:
        type: "boolean"
      follower_and_email_cc_collaborations:
        type: "boolean"
      has_color_text:
        type: "boolean"
      is_first_comment_private_enabled:
        type: "boolean"
      light_agent_email_ccs_allowed:
        type: "boolean"
      list_empty_views:
        type: "boolean"
      list_newest_comments_first:
        type: "boolean"
      markdown_ticket_comments:
        type: "boolean"
      maximum_personal_views_to_list:
        type: "integer"
      modern_ticket_reassignment:
        type: "boolean"
      private_attachments:
        type: "boolean"
      rich_text_comments:
        type: "boolean"
      show_modern_ticket_reassignment:
        type: "boolean"
      status_hold:
        type: "boolean"
      tagging:
        type: "boolean"
      using_skill_based_routing:
        type: "boolean"
    type: "object"
  AccountSettingsTwitterObject:
    description: "X (formerly Twitter) settings. See [X](#x-formerly-twitter)"
    properties:
      shorten_url:
        type: "string"
    type: "object"
  AccountSettingsUserObject:
    description: "User settings. See [Users](#users)"
    properties:
      agent_created_welcome_emails:
        type: "boolean"
      end_user_phone_number_validation:
        type: "boolean"
      have_gravatars_enabled:
        type: "boolean"
      language_selection:
        type: "boolean"
      multiple_organizations:
        type: "boolean"
      tagging:
        type: "boolean"
      time_zone_selection:
        type: "boolean"
    type: "object"
  AccountSettingsVoiceObject:
    description: "Zendesk Talk settings. See [Voice](#voice)"
    properties:
      agent_confirmation_when_forwarding:
        type: "boolean"
      agent_wrap_up_after_calls:
        type: "boolean"
      enabled:
        type: "boolean"
      logging:
        type: "boolean"
      maximum_queue_size:
        type: "integer"
      maximum_queue_wait_time:
        type: "integer"
      only_during_business_hours:
        type: "boolean"
      outbound_enabled:
        type: "boolean"
      recordings_public:
        type: "boolean"
      uk_mobile_forwarding:
        type: "boolean"
    type: "object"
  ActionObject:
    properties:
      field:
        description: "The name of a ticket field to modify"
        type: "string"
      value:
        description: "The new value of the field"
        type: "string"
    type: "object"
  ActionsObject:
    properties:
      actions:
        items:
          $ref: "#/definitions/ActionObject"
        type: "array"
    type: "object"
  ActivitiesCountResponse:
    properties:
      count:
        properties:
          refreshed_at:
            format: "date-time"
            type: "string"
          value:
            type: "integer"
        type: "object"
    type: "object"
  ActivitiesResponse:
    example:
      activities:
      - actor:
          tags: []
          active: true
          alias: ""
          created_at: "2020-11-17T00:32:12Z"
          custom_role_id: null
          default_group_id: 1873
          details: ""
          email: "cgoddard+ted@zendesk.com"
          external_id: null
          iana_time_zone: "America/Juneau"
          id: 158488612
          last_login_at: "2020-11-17T00:33:44Z"
          locale: "en-gb"
          locale_id: 5
          moderator: true
          name: "Tedd"
          notes: ""
          only_private_comments: false
          organization_id: null
          phone: null
          photo: null
          report_csv: true
          restricted_agent: false
          role: "admin"
          role_type: null
          shared: false
          shared_agent: false
          shared_phone_number: null
          signature: ""
          suspended: false
          ticket_restriction: null
          time_zone: "Alaska"
          two_factor_auth_enabled: null
          updated_at: "2020-11-17T00:34:38Z"
          url: "https://example.zendesk.com/api/v2/users/158488612.json"
          user_fields:
            its_remember_september: null
            skittles: null
            user_field_1: null
          verified: true
        actor_id: 158488612
        created_at: "2020-11-17T00:34:40Z"
        id: 29183462
        object:
          ticket:
            id: 1521
            subject: "test"
        target:
          ticket:
            id: 1521
            subject: "test"
        title: "Tedd assigned ticket #1521 to you."
        updated_at: "2020-11-17T00:34:40Z"
        url: "https://example.zendesk.com/api/v2/activities/29183462.json"
        user:
          tags:
          - "101"
          active: true
          alias: "test"
          created_at: "2017-08-14T20:13:53Z"
          custom_role_id: null
          default_group_id: 1873
          details: ""
          email: "user@zendesk.com"
          external_id: "oev7jj"
          iana_time_zone: "Pacific/Pago_Pago"
          id: 3343
          last_login_at: "2020-11-16T22:57:45Z"
          locale: "en-gb"
          locale_id: 5
          moderator: true
          name: "Samwise Gamgee"
          notes: "test"
          only_private_comments: false
          organization_id: 1873
          phone: null
          photo:
            content_type: "image/gif"
            content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
            deleted: false
            file_name: "1f84950b8d7949b3.gif"
            height: 80
            id: 8730791
            inline: false
            mapped_content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
            size: 4566
            thumbnails:
            - content_type: "image/gif"
              content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
              deleted: false
              file_name: "1f84950b8d7949b3_thumb.gif"
              height: 32
              id: 8730801
              inline: false
              mapped_content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
              size: 1517
              url: "https://example.zendesk.com/api/v2/attachments/8730801.json"
              width: 32
            url: "https://example.zendesk.com/api/v2/attachments/8730791.json"
            width: 80
          report_csv: true
          restricted_agent: false
          role: "admin"
          role_type: null
          shared: false
          shared_agent: false
          shared_phone_number: null
          signature: "test"
          suspended: false
          ticket_restriction: null
          time_zone: "American Samoa"
          two_factor_auth_enabled: null
          updated_at: "2020-11-17T00:33:55Z"
          url: "https://example.zendesk.com/api/v2/users/3343.json"
          user_fields:
            its_remember_september: null
            skittles: "2018-09-14T00:00:00+00:00"
            user_field_1: "101"
          verified: true
        user_id: 3343
        verb: "tickets.assignment"
      actors:
      - tags: []
        active: true
        alias: ""
        created_at: "2020-11-17T00:32:12Z"
        custom_role_id: null
        default_group_id: 1873
        details: ""
        email: "cgoddard+ted@zendesk.com"
        external_id: null
        iana_time_zone: "America/Juneau"
        id: 158488612
        last_login_at: "2020-11-17T00:33:44Z"
        locale: "en-gb"
        locale_id: 5
        moderator: true
        name: "Tedd"
        notes: ""
        only_private_comments: false
        organization_id: null
        phone: null
        photo: null
        report_csv: true
        restricted_agent: false
        role: "admin"
        role_type: null
        shared: false
        shared_agent: false
        shared_phone_number: null
        signature: ""
        suspended: false
        ticket_restriction: null
        time_zone: "Alaska"
        two_factor_auth_enabled: null
        updated_at: "2020-11-17T00:34:38Z"
        url: "https://example.zendesk.com/api/v2/users/158488612.json"
        user_fields:
          its_remember_september: null
          skittles: null
          user_field_1: null
        verified: true
      count: 1
      next_page: null
      previous_page: null
      users:
      - tags:
        - "101"
        active: true
        alias: "test"
        created_at: "2017-08-14T20:13:53Z"
        custom_role_id: null
        default_group_id: 1873
        details: ""
        email: "user@zendesk.com"
        external_id: "oev7jj"
        iana_time_zone: "Pacific/Pago_Pago"
        id: 3343
        last_login_at: "2020-11-16T22:57:45Z"
        locale: "en-gb"
        locale_id: 5
        moderator: true
        name: "Samwise Gamgee"
        notes: "test"
        only_private_comments: false
        organization_id: 1873
        phone: null
        photo:
          content_type: "image/gif"
          content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
          deleted: false
          file_name: "1f84950b8d7949b3.gif"
          height: 80
          id: 8730791
          inline: false
          mapped_content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
          size: 4566
          thumbnails:
          - content_type: "image/gif"
            content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
            deleted: false
            file_name: "1f84950b8d7949b3_thumb.gif"
            height: 32
            id: 8730801
            inline: false
            mapped_content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
            size: 1517
            url: "https://example.zendesk.com/api/v2/attachments/8730801.json"
            width: 32
          url: "https://example.zendesk.com/api/v2/attachments/8730791.json"
          width: 80
        report_csv: true
        restricted_agent: false
        role: "admin"
        role_type: null
        shared: false
        shared_agent: false
        shared_phone_number: null
        signature: "test"
        suspended: false
        ticket_restriction: null
        time_zone: "American Samoa"
        two_factor_auth_enabled: null
        updated_at: "2020-11-17T00:33:55Z"
        url: "https://example.zendesk.com/api/v2/users/3343.json"
        user_fields:
          its_remember_september: null
          skittles: "2018-09-14T00:00:00+00:00"
          user_field_1: "101"
        verified: true
    properties:
      activities:
        items:
          $ref: "#/definitions/ActivityObject"
        readOnly: true
        type: "array"
      actors:
        items:
          additionalProperties: true
          type: "object"
        readOnly: true
        type: "array"
      count:
        readOnly: true
        type: "integer"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
      users:
        items:
          additionalProperties: true
          type: "object"
        readOnly: true
        type: "array"
    type: "object"
  ActivityObject:
    example:
      actor:
        id: 8678530
        name: "James A. Rosen"
      actor_id: 23546
      created_at: "2019-03-05T10:38:52Z"
      id: 35
      object: {}
      target: {}
      title: "John Hopeful assigned ticket #123 to you"
      updated_at: "2019-03-05T10:38:52Z"
      url: "https://company.zendesk.com/api/v2/activities/35.json"
      user:
        id: 223443
        name: "Johnny Agent"
      user_id: 29451
      verb: "tickets.assignment"
    properties:
      actor:
        allOf:
        - $ref: "#/definitions/UserObject"
        description: "The full user record of the user responsible for the ticket activity. See [Users](/api-reference/ticketing/users/users/)"
        readOnly: true
        type: "object"
      actor_id:
        description: "The id of the user responsible for the ticket activity. An `actor_id` of \"-1\" is a Zendesk system user, such as an automations action."
        readOnly: true
        type: "integer"
      created_at:
        description: "When the record was created"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned on creation"
        readOnly: true
        type: "integer"
      object:
        additionalProperties: true
        description: "The content of the activity. Can be a ticket, comment, or change."
        readOnly: true
        type: "object"
      target:
        additionalProperties: true
        description: "The target of the activity, a ticket."
        readOnly: true
        type: "object"
      title:
        description: "Description of the activity"
        readOnly: true
        type: "string"
      updated_at:
        description: "When the record was last updated"
        readOnly: true
        type: "string"
      url:
        description: "The API url of the activity"
        readOnly: true
        type: "string"
      user:
        allOf:
        - $ref: "#/definitions/UserObject"
        description: "The full user record of the agent making the request. See [Users](/api-reference/ticketing/users/users/)"
        readOnly: true
        type: "object"
      user_id:
        description: "The id of the agent making the request"
        readOnly: true
        type: "integer"
      verb:
        description: "The type of activity. Can be \"tickets.assignment\", \"tickets.comment\", or \"tickets.priority_increase\""
        readOnly: true
        type: "string"
    title: "Ticket Activities"
    type: "object"
  ActivityResponse:
    example:
      activity:
        actor:
          tags: []
          active: true
          alias: ""
          created_at: "2020-11-17T00:32:12Z"
          custom_role_id: null
          default_group_id: 1873
          details: ""
          email: "cgoddard+ted@zendesk.com"
          external_id: null
          iana_time_zone: "America/Juneau"
          id: 158488612
          last_login_at: "2020-11-17T00:33:44Z"
          locale: "en-gb"
          locale_id: 5
          moderator: true
          name: "Tedd"
          notes: ""
          only_private_comments: false
          organization_id: null
          phone: null
          photo: null
          report_csv: true
          restricted_agent: false
          role: "admin"
          role_type: null
          shared: false
          shared_agent: false
          shared_phone_number: null
          signature: ""
          suspended: false
          ticket_restriction: null
          time_zone: "Alaska"
          two_factor_auth_enabled: null
          updated_at: "2020-11-17T00:34:38Z"
          url: "https://example.zendesk.com/api/v2/users/158488612.json"
          user_fields:
            its_remember_september: null
            skittles: null
            user_field_1: null
          verified: true
        actor_id: 158488612
        created_at: "2020-11-17T00:34:40Z"
        id: 29183462
        object:
          ticket:
            id: 1521
            subject: "test"
        target:
          ticket:
            id: 1521
            subject: "test"
        title: "Tedd assigned ticket #1521 to you."
        updated_at: "2020-11-17T00:34:40Z"
        url: "https://example.zendesk.com/api/v2/activities/29183462.json"
        user:
          tags:
          - "101"
          active: true
          alias: "test"
          created_at: "2017-08-14T20:13:53Z"
          custom_role_id: null
          default_group_id: 1873
          details: ""
          email: "user@zendesk.com"
          external_id: "oev7jj"
          iana_time_zone: "Pacific/Pago_Pago"
          id: 3343
          last_login_at: "2020-11-16T22:57:45Z"
          locale: "en-gb"
          locale_id: 5
          moderator: true
          name: "Samwise Gamgee"
          notes: "test"
          only_private_comments: false
          organization_id: 1873
          phone: null
          photo:
            content_type: "image/gif"
            content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
            deleted: false
            file_name: "1f84950b8d7949b3.gif"
            height: 80
            id: 8730791
            inline: false
            mapped_content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
            size: 4566
            thumbnails:
            - content_type: "image/gif"
              content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
              deleted: false
              file_name: "1f84950b8d7949b3_thumb.gif"
              height: 32
              id: 8730801
              inline: false
              mapped_content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
              size: 1517
              url: "https://example.zendesk.com/api/v2/attachments/8730801.json"
              width: 32
            url: "https://example.zendesk.com/api/v2/attachments/8730791.json"
            width: 80
          report_csv: true
          restricted_agent: false
          role: "admin"
          role_type: null
          shared: false
          shared_agent: false
          shared_phone_number: null
          signature: "test"
          suspended: false
          ticket_restriction: null
          time_zone: "American Samoa"
          two_factor_auth_enabled: null
          updated_at: "2020-11-17T00:33:55Z"
          url: "https://example.zendesk.com/api/v2/users/3343.json"
          user_fields:
            its_remember_september: null
            skittles: "2018-09-14T00:00:00+00:00"
            user_field_1: "101"
          verified: true
        user_id: 3343
        verb: "tickets.assignment"
    properties:
      activity:
        $ref: "#/definitions/ActivityObject"
    type: "object"
  AssigneeFieldAssignableAgentObject:
    example:
      avatar_url: "https://z3n-example.zendesk.com/system/photos/900005192023/my_profile.png"
      id: 6473829100
      name: "Joe Smith"
    properties:
      avatar_url:
        description: "URL of Agent's avatar"
        type: "string"
        x-nullable: true
      id:
        description: "Agent Support ID"
        type: "integer"
      name:
        description: "Name of the agent"
        type: "string"
    title: "AssigneeFieldAssignableAgents"
    type: "object"
  AssigneeFieldAssignableGroupAgentsResponse:
    example:
      agents:
      - avatar_url: "https://z3n-example.zendesk.com/system/photos/900005192023/my_profile.png"
        id: 6473829100
        name: "Joe Smith"
      - avatar_url: "https://z3n-example.zendesk.com/system/photos/412005192023/my_profile.png"
        id: 9182736400
        name: "Jane Doe"
      - avatar_url: "https://z3n-example.zendesk.com/system/photos/887005192023/my_profile.png"
        id: 1928373460
        name: "Cookie Monster"
      count: 3
      next_page: null
      previous_page: null
    properties:
      agents:
        items:
          $ref: "#/definitions/AssigneeFieldAssignableAgentObject"
        type: "array"
      count:
        description: "Number of agents listed in `agents` property."
        type: "integer"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  AssigneeFieldAssignableGroupObject:
    example:
      description: "Engineering team for bugs"
      id: 9182736455
      name: "Engineering"
    properties:
      description:
        description: "Description of the group"
        readOnly: true
        type: "string"
      id:
        description: "Group ID"
        readOnly: true
        type: "integer"
      name:
        description: "Name of the group"
        readOnly: true
        type: "string"
    title: "AssigneeFieldAssignableGroups"
    type: "object"
  AssigneeFieldAssignableGroupsAndAgentsSearchResponse:
    example:
      agents:
      - group: "Tech"
        group_id: 6574839201
        id: 8392017465
        name: "Sam Technologist"
        photo_url: "https://z3n-example.zendesk.com/system/photos/410305192023/my_profile.png"
      count: 2
      groups:
      - id: 6574839201
        name: "Tech"
    properties:
      agents:
        items:
          $ref: "#/definitions/AssigneeFieldAssignableSearchAgentObject"
        type: "array"
      count:
        description: "Number of agents + groups listed from search result."
        type: "integer"
      groups:
        items:
          $ref: "#/definitions/AssigneeFieldAssignableSearchGroupObject"
        type: "array"
    type: "object"
  AssigneeFieldAssignableGroupsResponse:
    example:
      count: 3
      groups:
      - description: "Engineering"
        id: 9182736455
        name: "Group for Bugs for Engineering"
      - description: "Product"
        id: 1928374655
        name: "Group for feature requests"
      - description: "Customer Support"
        id: 5519283746
        name: "Group for customer inquiries"
      next_page: null
      previous_page: null
    properties:
      count:
        description: "Number of groups listed in `groups` property."
        type: "integer"
      groups:
        items:
          $ref: "#/definitions/AssigneeFieldAssignableGroupObject"
        type: "array"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  AssigneeFieldAssignableSearchAgentObject:
    example:
      group: "Engineering"
      group_id: 9182736455
      id: 6473829100
      name: "Joe Smith"
      photo_url: "https://z3n-example.zendesk.com/system/photos/900005192023/my_profile.png"
    properties:
      group:
        description: "Name of the agent's group"
        type: "string"
      group_id:
        description: "Agent's Group ID"
        type: "integer"
      id:
        description: "Agent ID"
        type: "integer"
      name:
        description: "Name of the agent"
        type: "string"
      photo_url:
        description: "URL of Avatar"
        type: "string"
        x-nullable: true
    type: "object"
  AssigneeFieldAssignableSearchGroupObject:
    example:
      id: 9182736455
      name: "Engineering"
    properties:
      id:
        description: "Group ID"
        type: "integer"
      name:
        description: "Name of the group"
        type: "string"
    type: "object"
  AttachmentBaseObject:
    properties:
      content_type:
        description: "The content type of the image. Example value: \"image/png\""
        readOnly: true
        type: "string"
      content_url:
        description: "A full URL where the attachment image file can be downloaded. The file may be hosted externally so take care not to inadvertently send Zendesk authentication credentials. See [Working with url properties](/documentation/ticketing/managing-tickets/working-with-url-properties)"
        readOnly: true
        type: "string"
      deleted:
        description: "If true, the attachment has been deleted"
        readOnly: true
        type: "boolean"
      file_name:
        description: "The name of the image file"
        readOnly: true
        type: "string"
      height:
        description: "The height of the image file in pixels. If height is unknown, returns null"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      inline:
        description: "If true, the attachment is excluded from the attachment list and the attachment's URL\ncan be referenced within the comment of a ticket. Default is false\n"
        readOnly: true
        type: "boolean"
      malware_access_override:
        description: "If true, you can download an attachment flagged as malware. If false, you can't download such an attachment."
        readOnly: true
        type: "boolean"
      malware_scan_result:
        description: "The result of the malware scan. There is a delay between the time the attachment is uploaded and when the malware scan is completed. Usually the scan is done within a few seconds, but high load conditions can delay the scan results. Possible values: \"malware_found\", \"malware_not_found\", \"failed_to_scan\", \"not_scanned\""
        readOnly: true
        type: "string"
      mapped_content_url:
        description: "The URL the attachment image file has been mapped to"
        readOnly: true
        type: "string"
      size:
        description: "The size of the image file in bytes"
        readOnly: true
        type: "integer"
      url:
        description: "A URL to access the attachment details"
        readOnly: true
        type: "string"
      width:
        description: "The width of the image file in pixels. If width is unknown, returns null"
        readOnly: true
        type: "string"
    type: "object"
  AttachmentObject:
    allOf:
    - $ref: "#/definitions/AttachmentBaseObject"
    - $ref: "#/definitions/AttachmentThumbnails"
    description: "A file represented as an [Attachment](/api-reference/ticketing/tickets/ticket-attachments/) object"
    example:
      content_type: "image/png"
      content_url: "https://company.zendesk.com/attachments/my_funny_profile_pic.png"
      file_name: "my_funny_profile_pic.png"
      id: 928374
      size: 166144
      thumbnails:
      - content_type: "image/png"
        content_url: "https://company.zendesk.com/attachments/my_funny_profile_pic_thumb.png"
        file_name: "my_funny_profile_pic_thumb.png"
        id: 928375
        size: 58298
    type: "object"
  AttachmentResponse:
    properties:
      attachment:
        $ref: "#/definitions/AttachmentObject"
    type: "object"
  AttachmentThumbnails:
    properties:
      thumbnails:
        description: "An array of attachment objects. Note that photo thumbnails do not have thumbnails"
        items:
          $ref: "#/definitions/AttachmentBaseObject"
        readOnly: true
        type: "array"
    type: "object"
  AttachmentUpdateInput:
    properties:
      malware_access_override:
        description: "If true, allows access to attachments with detected malware."
        type: "boolean"
    type: "object"
  AttachmentUpdateRequest:
    properties:
      attachment:
        $ref: "#/definitions/AttachmentUpdateInput"
    type: "object"
  AttachmentUploadResponse:
    properties:
      upload:
        properties:
          attachment:
            $ref: "#/definitions/AttachmentObject"
          attachments:
            items:
              $ref: "#/definitions/AttachmentObject"
            type: "array"
          token:
            description: "Token for subsequent request"
            readOnly: true
            type: "string"
        type: "object"
    type: "object"
  AuditLogObject:
    example:
      action: "update"
      action_label: "Updated"
      actor_id: 1234
      actor_name: "Sameer Patel"
      change_description: "Role changed from Administrator to End User"
      created_at: "2012-03-05T11:32:44Z"
      id: 498483
      ip_address: "209.119.38.228"
      source_id: 3456
      source_label: "John Doe"
      source_type: "user"
      url: "https://company.zendesk.com/api/v2/audit_logs/498483.json"
    properties:
      action:
        description: "Type of change made. Possible values are \"create\", \"destroy\", \"exported\", \"login\", and \"update\"\n"
        readOnly: true
        type: "string"
      action_label:
        description: "Localized string of action field"
        readOnly: true
        type: "string"
      actor_id:
        description: "id of the user or system that initiated the change"
        readOnly: true
        type: "integer"
      actor_name:
        description: "Name of the user or system that initiated the change"
        readOnly: true
        type: "string"
      change_description:
        description: "The description of the change that occurred"
        readOnly: true
        type: "string"
      created_at:
        description: "The time the audit got created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "The id automatically assigned upon creation"
        readOnly: true
        type: "integer"
      ip_address:
        description: "The IP address of the user doing the audit"
        readOnly: true
        type: "string"
      source_id:
        description: "The id of the item being audited"
        readOnly: true
        type: "integer"
      source_label:
        description: "The name of the item being audited"
        readOnly: true
        type: "string"
      source_type:
        description: "Item type being audited. Typically describes the system where the change\nwas initiated. Possible values vary based on your account's Zendesk\nproducts and activity. Common values include \"apitoken\", \"rule\", \"ticket\",\n\"user\", and \"zendesk/app_market/app\". The \"rule\" value is used for\n[automations](https://support.zendesk.com/hc/en-us/articles/4408832701850),\n[macros](https://support.zendesk.com/hc/en-us/articles/4408844187034),\n[triggers](https://support.zendesk.com/hc/en-us/articles/4408822236058),\n[views](https://support.zendesk.com/hc/en-us/articles/4408888828570),\nand other automated business rules\n"
        readOnly: true
        type: "string"
      url:
        description: "The URL to access the audit log"
        readOnly: true
        type: "string"
    type: "object"
  AuditLogResponse:
    properties:
      audit_log:
        $ref: "#/definitions/AuditLogObject"
    type: "object"
  AuditLogsResponse:
    properties:
      audit_logs:
        items:
          $ref: "#/definitions/AuditLogObject"
        type: "array"
    type: "object"
  AuditObject:
    properties:
      author_id:
        readOnly: true
        type: "integer"
      created_at:
        format: "date-time"
        readOnly: true
        type: "string"
      events:
        items:
          properties:
            attachments:
              readOnly: true
              items:
                type: "object"
              type: "array"
            audit_id:
              readOnly: true
              type: "integer"
            author_id:
              readOnly: true
              type: "integer"
            body:
              readOnly: true
              type: "string"
            field_name:
              readOnly: true
              type: "string"
            html_body:
              readOnly: true
              type: "string"
            id:
              readOnly: true
              type: "integer"
            plain_body:
              readOnly: true
              type: "string"
            public:
              readOnly: true
              type: "boolean"
            type:
              readOnly: true
              type: "string"
            value: {}
          type: "object"
        readOnly: true
        type: "array"
      id:
        readOnly: true
        type: "integer"
      metadata:
        readOnly: true
        type: "object"
      ticket_id:
        readOnly: true
        type: "integer"
      via:
        $ref: "#/definitions/ViaObject"
    type: "object"
  AuthorObject:
    properties:
      email:
        description: "The author email"
        readOnly: true
        type: "string"
      id:
        description: "The author id"
        readOnly: true
        type: "integer"
      name:
        description: "The author name"
        readOnly: true
        type: "string"
    type: "object"
  AutomationObject:
    example:
      actions:
      - field: "priority"
        value: "high"
      active: true
      conditions:
        all:
        - field: "status"
          operator: "is"
          value: "open"
        - field: "priority"
          operator: "less_than"
          value: "high"
        any: []
      default: false
      id: 9873843
      position: 8
      raw_title: "Roger Wilco"
      title: "Roger Wilco"
    properties:
      actions:
        description: "An object describing what the automation will do. See [Actions reference](/documentation/ticketing/reference-guides/actions-reference)"
        items:
          $ref: "#/definitions/ActionObject"
        type: "array"
      active:
        description: "Whether the automation is active"
        type: "boolean"
      conditions:
        $ref: "#/definitions/ConditionsObject"
      created_at:
        description: "The time the automation was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "If true, the automation is a default automation"
        readOnly: true
        type: "boolean"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      position:
        description: "The position of the automation which specifies the order it will be executed"
        type: "integer"
      raw_title:
        description: "The raw title of the automation"
        readOnly: true
        type: "string"
      title:
        description: "The title of the automation"
        type: "string"
      updated_at:
        description: "The time of the last update of the automation"
        format: "date-time"
        readOnly: true
        type: "string"
    type: "object"
  AutomationResponse:
    properties:
      automation:
        $ref: "#/definitions/AutomationObject"
    type: "object"
  AutomationsResponse:
    properties:
      automations:
        items:
          $ref: "#/definitions/AutomationObject"
        type: "array"
      count:
        readOnly: true
        type: "integer"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  BatchErrorItem:
    allOf:
    - $ref: "#/definitions/Error"
    - properties:
        trigger_id:
          type: "string"
      type: "object"
    type: "object"
  BatchJobRequest:
    properties:
      job:
        properties:
          action:
            enum:
            - "patch"
            type: "string"
          items:
            properties:
              trigger_categories:
                items:
                  $ref: "#/definitions/TriggerCategoryBatchRequest"
                type: "array"
              triggers:
                items:
                  $ref: "#/definitions/TriggerBatchRequest"
                type: "array"
            type: "object"
        type: "object"
    type: "object"
  BatchJobResponse:
    properties:
      errors:
        items:
          $ref: "#/definitions/BatchErrorItem"
        type: "array"
      results:
        properties:
          trigger_categories:
            items:
              $ref: "#/definitions/TriggerCategory"
            type: "array"
          triggers:
            items:
              $ref: "#/definitions/TriggerObject"
            type: "array"
        type: "object"
      status:
        enum:
        - "complete"
        - "failed"
        type: "string"
    type: "object"
  BookmarkCreateRequest:
    properties:
      bookmark:
        $ref: "#/definitions/BookmarkInput"
    type: "object"
  BookmarkInput:
    properties:
      ticket_id:
        description: "The id of the ticket the bookmark is for."
        type: "integer"
    type: "object"
  BookmarkObject:
    example:
      created_at: "2014-11-20T22:55:29Z"
      id: 35436
      ticket:
        description: "The fire is very colorful."
        id: 60
        priority: "high"
        requester_id: 156
        subject: "Help, my printer is on fire!"
      url: "https://{subdomain}.zendesk.com/api/v2/bookmarks/35436.json"
    properties:
      created_at:
        description: "The time the bookmark was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when the bookmark is created"
        readOnly: true
        type: "integer"
      ticket:
        allOf:
        - $ref: "#/definitions/TicketObject"
        readOnly: true
        type: "object"
      url:
        description: "The API url of this bookmark"
        readOnly: true
        type: "string"
    title: "Bookmarks"
    type: "object"
  BookmarkResponse:
    properties:
      bookmark:
        $ref: "#/definitions/BookmarkObject"
    type: "object"
  BookmarksResponse:
    allOf:
    - $ref: "#/definitions/OffsetPaginationObject"
    - properties:
        bookmarks:
          items:
            $ref: "#/definitions/BookmarkObject"
          type: "array"
      type: "object"
    title: "Bookmarks"
    type: "object"
  BrandCreateRequest:
    properties:
      brand:
        $ref: "#/definitions/BrandObject"
    type: "object"
  BrandObject:
    example:
      active: true
      brand_url: "https://brand1.com"
      created_at: "2012-04-02T22:55:29Z"
      default: true
      has_help_center: true
      help_center_state: "enabled"
      host_mapping: "brand1.com"
      id: 47
      logo:
        content_type: "image/png"
        content_url: "https://company.zendesk.com/logos/brand1_logo.png"
        file_name: "brand1_logo.png"
        id: 928374
        size: 166144
        thumbnails:
        - content_type: "image/png"
          content_url: "https://company.zendesk.com/photos/brand1_logo_thumb.png"
          file_name: "brand1_logo_thumb.png"
          id: 928375
          mapped_content_url: "https://company.com/photos/brand1_logo_thumb.png"
          size: 58298
          url: "https://company.zendesk.com/api/v2/attachments/928375.json"
        - content_type: "image/png"
          content_url: "https://company.zendesk.com/photos/brand1_logo_small.png"
          file_name: "brand1_logo_small.png"
          id: 928376
          mapped_content_url: "https://company.com/photos/brand1_logo_small.png"
          size: 58298
          url: "https://company.zendesk.com/api/v2/attachments/928376.json"
        url: "https://company.zendesk.com/api/v2/attachments/928374.json"
      name: "Brand 1"
      signature_template: "{{agent.signature}}"
      subdomain: "brand1"
      ticket_form_ids:
      - 47
      - 33
      - 22
      updated_at: "2012-04-02T22:55:29Z"
      url: "https://company.zendesk.com/api/v2/brands/47.json"
    properties:
      active:
        description: "If the brand is set as active"
        type: "boolean"
      brand_url:
        description: "The url of the brand"
        type: "string"
      created_at:
        description: "The time the brand was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "Is the brand the default brand for this account"
        type: "boolean"
      has_help_center:
        description: "If the brand has a Help Center"
        type: "boolean"
      help_center_state:
        description: "The state of the Help Center"
        enum:
        - "enabled"
        - "disabled"
        - "restricted"
        readOnly: true
        type: "string"
      host_mapping:
        description: "The hostmapping to this brand, if any. Only admins view this property."
        type: "string"
      id:
        description: "The ID automatically assigned when the brand is created"
        readOnly: true
        type: "integer"
      is_deleted:
        description: "If the brand object is deleted or not"
        type: "boolean"
      logo:
        $ref: "#/definitions/AttachmentObject"
      name:
        description: "The name of the brand"
        type: "string"
      signature_template:
        description: "The signature template for a brand"
        type: "string"
      subdomain:
        description: "The subdomain of the brand"
        type: "string"
      ticket_form_ids:
        description: "The ids of ticket forms that are available for use by a brand"
        items:
          type: "integer"
        readOnly: true
        type: "array"
      updated_at:
        description: "The time of the last update of the brand"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this brand"
        readOnly: true
        type: "string"
    required:
    - "name"
    - "subdomain"
    title: "Brands"
    type: "object"
  BrandResponse:
    properties:
      brand:
        $ref: "#/definitions/BrandObject"
    type: "object"
  BrandUpdateRequest:
    properties:
      brand:
        $ref: "#/definitions/BrandObject"
    type: "object"
  BrandsResponse:
    allOf:
    - $ref: "#/definitions/OffsetPaginationObject"
    - properties:
        brands:
          description: "Array of brands"
          items:
            $ref: "#/definitions/BrandObject"
          type: "array"
      type: "object"
    title: "Brands"
    type: "object"
  BulkUpdateDefaultCustomStatusRequest:
    properties:
      ids:
        description: "The comma-separated list of custom ticket status ids to be set as default for their status categories"
        type: "string"
    type: "object"
  BulkUpdateDefaultCustomStatusResponse:
    type: "object"
  ChannelFrameworkPushResultsResponse:
    properties:
      results:
        description: "An array of [result objects](#result-object)"
        items:
          $ref: "#/definitions/ChannelFrameworkResultObject"
        type: "array"
    type: "object"
  ChannelFrameworkResultObject:
    properties:
      external_resource_id:
        description: "The external ID of the resource, as passed in"
        readOnly: true
        type: "string"
      status:
        $ref: "#/definitions/ChannelFrameworkResultStatusObject"
    type: "object"
  ChannelFrameworkResultStatusObject:
    description: "The status of the import for the indicated resource"
    properties:
      code:
        description: "A code indicating the status of the import of the resource, as described in [status codes](#status-codes)"
        readOnly: true
        type: "string"
      description:
        description: "In the case of an exception, a description of the exception. Otherwise, not present."
        readOnly: true
        type: "string"
    type: "object"
  CollaboratorObject:
    example:
      email: "someone@example.com"
      name: "Someone Special"
    properties:
      email:
        format: "email"
        type: "string"
      name:
        type: "string"
    type: "object"
  ComplianceDeletionStatusObject:
    properties:
      account_subdomain:
        type: "string"
      action:
        type: "string"
      application:
        type: "string"
      created_at:
        type: "string"
      executer_id:
        type: "integer"
        x-nullable: true
      user_id:
        type: "integer"
    required:
    - "action"
    - "application"
    - "account_subdomain"
    - "executer_id"
    - "user_id"
    - "created_at"
    type: "object"
  ComplianceDeletionStatusesResponse:
    properties:
      compliance_deletion_statuses:
        items:
          $ref: "#/definitions/ComplianceDeletionStatusObject"
        type: "array"
    type: "object"
  ConditionObject:
    properties:
      field:
        description: "The name of a ticket field"
        type: "string"
      operator:
        description: "A comparison operator"
        type: "string"
      value:
        description: "The value of a ticket field"
        type: "string"
    type: "object"
  ConditionsObject:
    description: "An object that describes the conditions under which the automation will execute. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)"
    properties:
      all:
        description: "Logical AND. Tickets must fulfill all of the conditions to be considered matching"
        items:
          $ref: "#/definitions/ConditionObject"
        type: "array"
      any:
        description: "Logical OR. Tickets may satisfy any of the conditions to be considered matching"
        items:
          $ref: "#/definitions/ConditionObject"
        type: "array"
    type: "object"
  CountOrganizationObject:
    properties:
      refreshed_at:
        readOnly: true
        type: "string"
      value:
        readOnly: true
        type: "integer"
    type: "object"
  CountOrganizationResponse:
    properties:
      count:
        $ref: "#/definitions/CountOrganizationObject"
    type: "object"
  CountResponse:
    properties:
      count:
        properties:
          refreshed_at:
            format: "datetime"
            type: "string"
          value:
            type: "integer"
        type: "object"
    type: "object"
  CreateOrganizationRequest:
    properties:
      organization:
        $ref: "#/definitions/OrganizationObject"
    required:
    - "organization"
    type: "object"
  CreateResourceResult:
    properties:
      id:
        description: "the id of the new resource"
        type: "integer"
      index:
        description: "the index number of the resul"
        type: "integer"
    required:
    - "id"
    - "index"
    type: "object"
  CurrentUserResponse:
    properties:
      user:
        allOf:
        - $ref: "#/definitions/UserObject"
        - properties:
            authenticity_token:
              description: "CSRF token required by some Zendesk APIs."
              readOnly: true
              type: "string"
          type: "object"
    type: "object"
  CursorBasedExportIncrementalTicketsResponse:
    description: "See [Tickets](/api-reference/ticketing/tickets/tickets/) for a detailed example.\n"
    example:
      after_cursor: "MTU3NjYxMzUzOS4wfHw0Njd8"
      after_url: "https://{subdomain}.zendesk.com/api/v2/incremental/tickets/cursor.json?cursor=MTU3NjYxMzUzOS4wfHw0Njd8"
      before_cursor: null
      before_url: null
      end_of_stream: true
      tickets:
      - tags:
        - "enterprise"
        - "other_tag"
        assignee_id: 235323
        collaborator_ids:
        - 35334
        - 234
        created_at: "2009-07-20T22:55:29Z"
        custom_fields:
        - id: 27642
          value: "745"
        - id: 27648
          value: "yes"
        description: "The fire is very colorful."
        due_at: null
        external_id: "ahg35h3jh"
        follower_ids:
        - 35334
        - 234
        group_id: 98738
        has_incidents: false
        id: 35436
        organization_id: 509974
        priority: "high"
        problem_id: 9873764
        raw_subject: "{{dc.printer_on_fire}}"
        recipient: "support@company.com"
        requester_id: 20978392
        satisfaction_rating:
          comment: "Great support!"
          id: 1234
          score: "good"
        sharing_agreement_ids:
        - 84432
        status: "open"
        subject: "Help, my printer is on fire!"
        submitter_id: 76872
        type: "incident"
        updated_at: "2011-05-05T10:38:52Z"
        url: "https://company.zendesk.com/api/v2/tickets/35436.json"
        via:
          channel: "web"
    properties:
      after_cursor:
        type: "string"
        x-nullable: true
      after_url:
        type: "string"
        x-nullable: true
      before_cursor:
        type: "string"
        x-nullable: true
      before_url:
        type: "string"
        x-nullable: true
      end_of_stream:
        type: "boolean"
      tickets:
        items:
          $ref: "#/definitions/TicketObject"
        type: "array"
    type: "object"
  CursorBasedExportIncrementalUsersResponse:
    example:
      after_cursor: "MTU3NjYxMzUzOS4wfHw0Njd8"
      after_url: "https://example.zendesk.com/api/v2/incremental/users/cursor.json?cursor=MTU3NjYxMzUzOS4wfHw0Njd8"
      before_cursor: null
      before_url: null
      end_of_stream: true
      users:
      - tags:
        - "enterprise"
        - "other_tag"
        active: true
        alias: "Mr. Johnny"
        created_at: "2009-07-20T22:55:29Z"
        custom_role_id: 9373643
        details: ""
        email: "johnny@example.com"
        external_id: "sai989sur98w9"
        id: 35436
        last_login_at: "2011-05-05T10:38:52Z"
        locale: "en-US"
        locale_id: 1
        moderator: true
        name: "Johnny Agent"
        notes: "Johnny is a nice guy!"
        only_private_comments: false
        organization_id: 57542
        phone: "+15551234567"
        photo:
          content_type: "image/png"
          content_url: "https://company.zendesk.com/photos/my_funny_profile_pic.png"
          id: 928374
          name: "my_funny_profile_pic.png"
          size: 166144
          thumbnails:
          - content_type: "image/png"
            content_url: "https://company.zendesk.com/photos/my_funny_profile_pic_thumb.png"
            id: 928375
            name: "my_funny_profile_pic_thumb.png"
            size: 58298
        restricted_agent: true
        role: "agent"
        role_type: 0
        shared: false
        shared_agent: false
        signature: "Have a nice day, Johnny"
        suspended: true
        ticket_restriction: "assigned"
        time_zone: "Copenhagen"
        updated_at: "2011-05-05T10:38:52Z"
        url: "https://company.zendesk.com/api/v2/users/35436.json"
        user_fields:
          user_date: "2012-07-23T00:00:00Z"
          user_decimal: 5.1
          user_dropdown: "option_1"
        verified: true
    properties:
      after_cursor:
        type: "string"
        x-nullable: true
      after_url:
        type: "string"
        x-nullable: true
      before_cursor:
        type: "string"
        x-nullable: true
      before_url:
        type: "string"
        x-nullable: true
      end_of_stream:
        type: "boolean"
      users:
        items:
          $ref: "#/definitions/UserObject"
        type: "array"
    type: "object"
  CustomFieldObject:
    properties:
      active:
        description: "If true, this field is available for use"
        type: "boolean"
      created_at:
        description: "The time of the last update of the ticket field"
        format: "date-time"
        readOnly: true
        type: "string"
      custom_field_options:
        description: "Required and presented for a custom field of type \"dropdown\". Each option is represented by an object with a `name` and `value` property"
        items:
          $ref: "#/definitions/CustomFieldOptionObject"
        type: "array"
      description:
        description: "User-defined description of this field's purpose"
        type: "string"
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      key:
        description: "A unique key that identifies this custom field. This is used for updating the field and referencing in placeholders. The key must consist of only letters, numbers, and underscores. It can't be only numbers"
        type: "string"
      position:
        description: "Ordering of the field relative to other fields"
        type: "integer"
      raw_description:
        description: "The dynamic content placeholder, if present, or the `description` value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      raw_title:
        description: "The dynamic content placeholder, if present, or the `title` value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      regexp_for_validation:
        description: "Regular expression field only. The validation pattern for a field value to be deemed valid"
        type: "string"
        x-nullable: true
      relationship_filter:
        description: "A filter definition that allows your autocomplete to filter down results"
        type: "object"
      relationship_target_type:
        description: "A representation of what type of object the field references. Options are \"zen:user\", \"zen:organization\", \"zen:ticket\", and \"zen:custom_object:{key}\" where key is a custom object key. For example \"zen:custom_object:apartment\"."
        type: "string"
      system:
        description: "If true, only active and position values of this field can be changed"
        readOnly: true
        type: "boolean"
      tag:
        description: "Optional for custom field of type \"checkbox\"; not presented otherwise."
        type: "string"
      title:
        description: "The title of the custom field"
        type: "string"
      type:
        description: "The custom field type: \"checkbox\", \"date\", \"decimal\", \"dropdown\", \"integer\", [\"lookup\"](/api-reference/ticketing/lookup_relationships/lookup_relationships/), \"multiselect\", \"regexp\", \"text\", or \"textarea\""
        type: "string"
      updated_at:
        description: "The time of the last update of the ticket field"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The URL for this resource"
        readOnly: true
        type: "string"
    required:
    - "key"
    - "type"
    - "title"
    type: "object"
  CustomFieldOptionObject:
    properties:
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      name:
        description: "Name of the dropdown option"
        type: "string"
      position:
        description: "Position of the dropdown option"
        type: "integer"
      raw_name:
        description: "Raw name of the dropdown option"
        readOnly: true
        type: "string"
      url:
        description: "URL of the dropdown option"
        readOnly: true
        type: "string"
      value:
        description: "Value of the dropdown option"
        type: "string"
    required:
    - "name"
    - "value"
    type: "object"
  CustomFieldOptionResponse:
    properties:
      custom_field_option:
        $ref: "#/definitions/CustomFieldOptionObject"
    type: "object"
  CustomFieldOptionsResponse:
    properties:
      count:
        description: "Total count of records retrieved"
        readOnly: true
        type: "integer"
      custom_field_options:
        items:
          $ref: "#/definitions/CustomFieldOptionObject"
        type: "array"
      next_page:
        description: "URL of the next page"
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        description: "URL of the previous page"
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  CustomObject:
    properties:
      created_at:
        description: "The time the object type was created"
        format: "date-time"
        readOnly: true
        type: "string"
      created_by_user_id:
        description: "Id of a user who created the object"
        readOnly: true
        type: "string"
      description:
        description: "User-defined description of the object"
        type: "string"
      include_in_list_view:
        description: "A flag setting the visibility of the object in the agent's list view. If true, all agents and admins have viewing access to the object in the Custom objects record page in the Agent Workspace. If false, only admins have viewing access"
        type: "boolean"
      key:
        description: "A user-defined unique identifier. Writable on create only"
        readOnly: true
        type: "string"
      raw_description:
        description: "The dynamic content placeholder, if present, or the \"raw_description\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      raw_title:
        description: "The dynamic content placeholder, if present, or the \"title\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      raw_title_pluralized:
        description: "The dynamic content placeholder, if present, or the \"raw_title_pluralized\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      title:
        description: "User-defined display name for the object"
        type: "string"
      title_pluralized:
        description: "User-defined pluralized version of the object's title"
        type: "string"
      updated_at:
        description: "The time of the last update of the object"
        format: "date-time"
        readOnly: true
        type: "string"
      updated_by_user_id:
        description: "Id of the last user who updated the object"
        readOnly: true
        type: "string"
      url:
        description: "Direct link to the specific custom object"
        readOnly: true
        type: "string"
    required:
    - "key"
    - "title"
    - "title_pluralized"
    - "include_in_list_view"
    type: "object"
  CustomObjectCreateInput:
    properties:
      key:
        description: "Unique identifier. Writable on create only"
        type: "string"
      title:
        description: "Display name for the object"
        type: "string"
      title_pluralized:
        description: "Pluralized version of the object's title"
        type: "string"
    type: "object"
  CustomObjectField:
    allOf:
    - $ref: "#/definitions/CustomFieldObject"
    example:
      active: true
      created_at: "2022-09-07T23:21:59Z"
      description: "Make"
      id: 4398096842879
      key: "make"
      position: 0
      raw_description: "Make"
      raw_title: "Make"
      regexp_for_validation: null
      system: false
      title: "Make"
      type: "text"
      updated_at: "2022-09-07T23:22:00Z"
      url: "https://company.zendesk.com/api/v2/custom_objects/car/fields/4398096842879.json"
    type: "object"
  CustomObjectFieldResponse:
    properties:
      custom_object_field:
        $ref: "#/definitions/CustomObjectField"
    type: "object"
  CustomObjectFieldsCreateRequest:
    properties:
      custom_object_field:
        $ref: "#/definitions/CustomObjectField"
    type: "object"
  CustomObjectFieldsResponse:
    properties:
      custom_object_fields:
        items:
          $ref: "#/definitions/CustomObjectField"
        type: "array"
    type: "object"
  CustomObjectLimitsResponse:
    properties:
      count:
        description: "The current numnber of the requested resource"
        readOnly: true
        type: "integer"
      limit:
        description: "The maximum allowed number for the requested resource"
        readOnly: true
        type: "integer"
    type: "object"
  CustomObjectRecord:
    properties:
      created_at:
        description: "The time the object was created"
        format: "date-time"
        readOnly: true
        type: "string"
      created_by_user_id:
        description: "Id of a user who created the object"
        readOnly: true
        type: "string"
      custom_object_fields:
        additionalProperties: true
        type: "object"
      custom_object_key:
        description: "A user-defined unique identifier"
        readOnly: true
        type: "string"
      external_id:
        description: "An id you can use to link custom object records to external data"
        type: "string"
        x-nullable: true
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "string"
      name:
        description: "User-defined display name for the object"
        readOnly: true
        type: "string"
      updated_at:
        description: "The time of the last update of the object"
        format: "date-time"
        readOnly: true
        type: "string"
      updated_by_user_id:
        description: "Id of the last user who updated the object"
        readOnly: true
        type: "string"
      url:
        description: "Direct link to the specific custom object"
        readOnly: true
        type: "string"
    required:
    - "name"
    type: "object"
  CustomObjectRecordFilteredSearchCondition:
    additionalProperties: true
    properties:
      field_key:
        example:
          operator: "value"
        properties:
          operator:
            type: "string"
          value: {}
        type: "object"
        x-nullable: true
    type: "object"
  CustomObjectRecordResponse:
    properties:
      custom_object_record:
        $ref: "#/definitions/CustomObjectRecord"
    type: "object"
  CustomObjectRecordsBulkCreateRequest:
    properties:
      job:
        properties:
          action:
            type: "string"
          items:
            description: "An array of record objects for job actions that create, update, or set. An array of strings for job actions that delete."
            items:
              $ref: "#/definitions/CustomObjectRecord"
            type: "array"
        type: "object"
    type: "object"
  CustomObjectRecordsCreateRequest:
    properties:
      custom_object_record:
        $ref: "#/definitions/CustomObjectRecord"
    type: "object"
  CustomObjectRecordsFilteredSearchRequestBasic:
    properties:
      filter:
        $ref: "#/definitions/CustomObjectRecordFilteredSearchCondition"
    type: "object"
  CustomObjectRecordsFilteredSearchRequestComplex:
    properties:
      filter:
        properties:
          $and:
            items:
              $ref: "#/definitions/CustomObjectRecordFilteredSearchCondition"
            type: "array"
          $or:
            items:
              $ref: "#/definitions/CustomObjectRecordFilteredSearchCondition"
            type: "array"
        type: "object"
    type: "object"
  CustomObjectRecordsJobsResponse:
    properties:
      job_status:
        properties:
          id:
            type: "string"
          message:
            type: "string"
            x-nullable: true
          progress:
            type: "integer"
            x-nullable: true
          results:
            items:
              $ref: "#/definitions/CustomObjectRecord"
            type: "array"
            x-nullable: true
          status:
            type: "string"
          total:
            type: "integer"
          url:
            type: "string"
        type: "object"
    type: "object"
  CustomObjectRecordsResponse:
    properties:
      count:
        description: "The number of results returned for the current request"
        readOnly: true
        type: "integer"
      custom_object_records:
        items:
          $ref: "#/definitions/CustomObjectRecord"
        type: "array"
      links:
        properties:
          next:
            type: "string"
            x-nullable: true
          prev:
            type: "string"
            x-nullable: true
        required:
        - "prev"
        - "next"
        type: "object"
      meta:
        properties:
          after_cursor:
            type: "string"
            x-nullable: true
          before_cursor:
            type: "string"
            x-nullable: true
          has_more:
            type: "boolean"
        required:
        - "has_more"
        - "after_cursor"
        - "before_cursor"
        type: "object"
    type: "object"
  CustomObjectRecordsUpsertRequest:
    properties:
      custom_object_record:
        $ref: "#/definitions/CustomObjectRecord"
    type: "object"
  CustomObjectResponse:
    properties:
      custom_object:
        $ref: "#/definitions/CustomObject"
    type: "object"
  CustomObjectsCreateRequest:
    properties:
      custom_object:
        $ref: "#/definitions/CustomObjectCreateInput"
    type: "object"
  CustomObjectsResponse:
    properties:
      custom_objects:
        items:
          $ref: "#/definitions/CustomObject"
        type: "array"
    type: "object"
  CustomRoleConfigurationObject:
    description: "Configuration settings for the role. See [Configuration](#configuration)"
    properties:
      assign_tickets_to_any_group:
        description: "Whether or not the agent can assign tickets to any group"
        readOnly: true
        type: "boolean"
      chat_access:
        description: "Whether or not the agent has access to Chat"
        readOnly: true
        type: "boolean"
      end_user_list_access:
        description: "Whether or not the agent can view lists of user profiles. Allowed values: \"full\", \"none\""
        type: "string"
      end_user_profile_access:
        description: "What the agent can do with end-user profiles. Allowed values: \"edit\", \"edit-within-org\", \"full\", \"readonly\""
        type: "string"
      explore_access:
        description: "Allowed values: \"edit\", \"full\", \"none\", \"readonly\""
        type: "string"
      forum_access:
        description: "The kind of access the agent has to Guide. Allowed values: \"edit-topics\", \"full\", \"readonly\""
        type: "string"
      forum_access_restricted_content:
        type: "boolean"
      group_access:
        description: "Whether or not the agent can add or modify groups"
        readOnly: true
        type: "boolean"
      light_agent:
        readOnly: true
        type: "boolean"
      macro_access:
        description: "What the agent can do with macros. Allowed values: \"full\", \"manage-group\", \"manage-personal\", \"readonly\""
        type: "string"
      manage_business_rules:
        description: "Whether or not the agent can manage business rules"
        type: "boolean"
      manage_contextual_workspaces:
        description: "Whether or not the agent can view, add, and edit contextual workspaces"
        type: "boolean"
      manage_dynamic_content:
        description: "Whether or not the agent can access dynamic content"
        type: "boolean"
      manage_extensions_and_channels:
        description: "Whether or not the agent can manage channels and extensions"
        type: "boolean"
      manage_facebook:
        description: "Whether or not the agent can manage Facebook pages"
        type: "boolean"
      manage_organization_fields:
        description: "Whether or not the agent can create and manage organization fields"
        type: "boolean"
      manage_ticket_fields:
        description: "Whether or not the agent can create and manage ticket fields"
        type: "boolean"
      manage_ticket_forms:
        description: "Whether or not the agent can create and manage ticket forms"
        type: "boolean"
      manage_user_fields:
        description: "Whether or not the agent can create and manage user fields"
        type: "boolean"
      moderate_forums:
        readOnly: true
        type: "boolean"
      organization_editing:
        description: "Whether or not the agent can add or modify organizations"
        type: "boolean"
      organization_notes_editing:
        description: "Whether or not the agent can add or modify organization notes"
        readOnly: true
        type: "boolean"
      report_access:
        description: "What the agent can do with reports. Allowed values: \"full\", \"none\", \"readonly\""
        type: "string"
      side_conversation_create:
        description: "Whether or not the agent can contribute to side conversations"
        type: "boolean"
      ticket_access:
        description: "What kind of tickets the agent can access. Allowed values: \"all\", \"assigned-only\", \"within-groups\", \"within-groups-and-public-groups\", \"within-organization\""
        type: "string"
      ticket_comment_access:
        description: "What type of comments the agent can make. Allowed values: \"public\", \"none\""
        type: "string"
      ticket_deletion:
        description: "Whether or not the agent can delete tickets"
        type: "boolean"
      ticket_editing:
        description: "Whether or not the agent can edit ticket properties"
        type: "boolean"
      ticket_merge:
        description: "Whether or not the agent can merge tickets"
        type: "boolean"
      ticket_tag_editing:
        description: "Whether or not the agent can edit ticket tags"
        type: "boolean"
      twitter_search_access:
        type: "boolean"
      user_view_access:
        description: "What the agent can do with customer lists. Allowed values: \"full\", \"manage-group\", \"manage-personal\", \"none\", \"readonly\""
        type: "string"
      view_access:
        description: "What the agent can do with views. Allowed values: \"full\", \"manage-group\", \"manage-personal\", \"playonly\", \"readonly\""
        type: "string"
      view_deleted_tickets:
        description: "Whether or not the agent can view deleted tickets"
        type: "boolean"
      voice_access:
        description: "Whether or not the agent can answer and place calls to end users"
        type: "boolean"
      voice_dashboard_access:
        description: "Whether or not the agent can view details about calls on the Talk dashboard"
        type: "boolean"
    type: "object"
  CustomRoleObject:
    properties:
      configuration:
        $ref: "#/definitions/CustomRoleConfigurationObject"
      created_at:
        description: "The time the record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      description:
        description: "A description of the role"
        type: "string"
      id:
        description: "Automatically assigned on creation"
        readOnly: true
        type: "integer"
      name:
        description: "Name of the custom role"
        type: "string"
      role_type:
        description: "The user's role. 0 stands for a custom agent, 1 for a light agent, 2 for a chat agent, 3 for a contributor, 4 for an admin and 5 for a billing admin. See [Understanding standard agent roles in Zendesk Support](https://support.zendesk.com/hc/en-us/articles/4409155971354-Understanding-standard-agent-roles-in-Zendesk-Support) in Zendesk help"
        readOnly: true
        type: "integer"
      team_member_count:
        description: "The number of team members assigned to this role"
        readOnly: true
        type: "integer"
      updated_at:
        description: "The time the record was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
    required:
    - "name"
    - "role_type"
    title: "Custom Agent Roles"
    type: "object"
  CustomRoleResponse:
    properties:
      custom_role:
        $ref: "#/definitions/CustomRoleObject"
    type: "object"
  CustomRolesResponse:
    properties:
      custom_roles:
        items:
          $ref: "#/definitions/CustomRoleObject"
        type: "array"
    type: "object"
  CustomStatusCreateInput:
    allOf:
    - $ref: "#/definitions/CustomStatusUpdateInput"
    - properties:
        status_category:
          description: "The status category the custom ticket status belongs to"
          enum:
          - "new"
          - "open"
          - "pending"
          - "hold"
          - "solved"
          type: "string"
      type: "object"
    type: "object"
  CustomStatusCreateRequest:
    properties:
      custom_status:
        $ref: "#/definitions/CustomStatusCreateInput"
    type: "object"
  CustomStatusObject:
    properties:
      active:
        description: "If true, the custom status is set to active, If false, the custom status is set to inactive"
        type: "boolean"
      agent_label:
        description: "The label displayed to agents. Maximum length is 48 characters"
        type: "string"
      created_at:
        description: "The date and time the custom ticket status was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "If true, the custom status is set to default. If false, the custom status is set to non-default"
        type: "boolean"
      description:
        description: "The description of when the user should select this custom ticket status"
        type: "string"
      end_user_description:
        description: "The description displayed to end users"
        type: "string"
      end_user_label:
        description: "The label displayed to end users. Maximum length is 48 characters"
        type: "string"
      id:
        description: "Automatically assigned when the custom ticket status is created"
        readOnly: true
        type: "integer"
      raw_agent_label:
        description: "The dynamic content placeholder. If the dynamic content placeholder is not available, this is the \"agent_label\" value. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        readOnly: true
        type: "string"
      raw_description:
        description: "The dynamic content placeholder. If the dynamic content placeholder is not available, this is the \"description\" value. [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        readOnly: true
        type: "string"
      raw_end_user_description:
        description: "The dynamic content placeholder. If the dynamic content placeholder is not available, this is the \"end_user_description\" value. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        readOnly: true
        type: "string"
      raw_end_user_label:
        description: "The dynamic content placeholder. If the dynamic content placeholder is not available, this is the \"end_user_label\" value. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        readOnly: true
        type: "string"
      status_category:
        description: "The status category the custom ticket status belongs to"
        enum:
        - "new"
        - "open"
        - "pending"
        - "hold"
        - "solved"
        type: "string"
      updated_at:
        description: "The date and time the custom ticket status was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
    required:
    - "status_category"
    - "agent_label"
    type: "object"
  CustomStatusResponse:
    properties:
      custom_status:
        $ref: "#/definitions/CustomStatusObject"
    type: "object"
  CustomStatusUpdateInput:
    properties:
      active:
        description: "True if the custom status is set as active; inactive if false"
        type: "boolean"
      agent_label:
        description: "The dynamic content placeholder, if present, or the \"agent_label\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      description:
        description: "The dynamic content placeholder, if present, or the \"description\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      end_user_description:
        description: "The dynamic content placeholder, if present, or the \"end_user_description\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      end_user_label:
        description: "The dynamic content placeholder, if present, or the \"end_user_label\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
    type: "object"
  CustomStatusUpdateRequest:
    properties:
      custom_status:
        $ref: "#/definitions/CustomStatusUpdateInput"
    type: "object"
  CustomStatusesResponse:
    properties:
      custom_statuses:
        items:
          $ref: "#/definitions/CustomStatusObject"
        type: "array"
    type: "object"
  DefinitionsResponse:
    properties:
      definitions:
        properties:
          conditions_all:
            items:
              properties:
                group:
                  type: "string"
                nullable:
                  type: "boolean"
                operators:
                  items:
                    properties:
                      terminal:
                        type: "boolean"
                      title:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
                repeatable:
                  type: "boolean"
                subject:
                  type: "string"
                title:
                  type: "string"
                type:
                  type: "string"
                values:
                  items:
                    properties:
                      enabled:
                        type: "boolean"
                      title:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
              type: "object"
            type: "array"
          conditions_any:
            items:
              properties:
                group:
                  type: "string"
                nullable:
                  type: "boolean"
                operators:
                  items:
                    properties:
                      terminal:
                        type: "boolean"
                      title:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
                repeatable:
                  type: "boolean"
                subject:
                  type: "string"
                title:
                  type: "string"
                type:
                  type: "string"
                values:
                  items:
                    properties:
                      enabled:
                        type: "boolean"
                      title:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
              type: "object"
            type: "array"
        type: "object"
    type: "object"
  DeletedUserObject:
    properties:
      active:
        type: "boolean"
      created_at:
        type: "string"
      email:
        type: "string"
      id:
        type: "integer"
      locale:
        type: "string"
      locale_id:
        type: "integer"
      name:
        type: "string"
      organization_id:
        type: "integer"
      phone:
        type: "string"
        x-nullable: true
      photo:
        type: "object"
        x-nullable: true
      role:
        type: "string"
      shared_phone_number:
        type: "string"
        x-nullable: true
      time_zone:
        type: "string"
      updated_at:
        type: "string"
      url:
        type: "string"
    required:
    - "id"
    - "url"
    - "name"
    - "email"
    - "created_at"
    - "updated_at"
    - "time_zone"
    - "phone"
    - "shared_phone_number"
    - "photo"
    - "locale_id"
    - "locale"
    - "organization_id"
    - "role"
    - "active"
    type: "object"
  DeletedUserResponse:
    properties:
      deleted_user:
        $ref: "#/definitions/DeletedUserObject"
    type: "object"
  DeletedUsersResponse:
    properties:
      deleted_users:
        items:
          $ref: "#/definitions/DeletedUserObject"
        type: "array"
    type: "object"
  DeletionSchedule:
    properties:
      active:
        description: "Whether the deletion schedule is active"
        type: "boolean"
      conditions:
        $ref: "#/definitions/ConditionsObject"
      created_at:
        description: "The time the deletion schedule was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "Whether the deletion schedule is the default"
        readOnly: true
        type: "boolean"
      description:
        description: "The description of the deletion schedule"
        type: "string"
      id:
        description: "The id of the deletion schedule"
        readOnly: true
        type: "integer"
      title:
        description: "The title of the deletion schedule"
        type: "string"
      updated_at:
        description: "The time the deletion schedule was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "Url for obtaining the deletion schedule JSON"
        readOnly: true
        type: "string"
    type: "object"
  DynamicContentObject:
    properties:
      created_at:
        description: "When this record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default_locale_id:
        description: "The default locale for the item. Must be one of the [locales the account has active](/api-reference/ticketing/account-configuration/locales/#list-locales)."
        type: "integer"
      id:
        description: "Automatically assigned when creating items"
        readOnly: true
        type: "integer"
      name:
        description: "The unique name of the item"
        type: "string"
      outdated:
        description: "Indicates the item has outdated variants within it"
        readOnly: true
        type: "boolean"
      placeholder:
        description: "Automatically generated placeholder for the item, derived from name"
        readOnly: true
        type: "string"
      updated_at:
        description: "When this record was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this item"
        readOnly: true
        type: "string"
      variants:
        description: "All variants within this item. See [Dynamic Content Item Variants](/api-reference/ticketing/ticket-management/dynamic_content_item_variants/)"
        items:
          $ref: "#/definitions/DynamicContentVariantObject"
        type: "array"
    required:
    - "name"
    - "default_locale_id"
    - "variants"
    title: "Dynamic Content Items"
    type: "object"
  DynamicContentResponse:
    properties:
      item:
        $ref: "#/definitions/DynamicContentObject"
    type: "object"
  DynamicContentVariantObject:
    example:
      active: true
      content: "This is my dynamic content in English"
      created_at: "2014-04-09T19:53:23Z"
      default: true
      id: 23
      locale_id: 125
      outdated: false
      updated_at: "2014-04-09T19:53:23Z"
      url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/23.json"
    properties:
      active:
        description: "If the variant is active and useable"
        type: "boolean"
      content:
        description: "The content of the variant"
        type: "string"
      created_at:
        description: "When the variant was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "If the variant is the default for the item it belongs to"
        type: "boolean"
      id:
        description: "Automatically assigned when the variant is created"
        readOnly: true
        type: "integer"
      locale_id:
        description: "An active locale"
        type: "integer"
      outdated:
        description: "If the variant is outdated"
        readOnly: true
        type: "boolean"
      updated_at:
        description: "When the variant was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of the variant"
        readOnly: true
        type: "string"
    required:
    - "content"
    - "locale_id"
    type: "object"
  DynamicContentVariantResponse:
    properties:
      variant:
        $ref: "#/definitions/DynamicContentVariantObject"
    type: "object"
  DynamicContentVariantsResponse:
    properties:
      variants:
        items:
          $ref: "#/definitions/DynamicContentVariantObject"
        type: "array"
    type: "object"
  DynamicContentsResponse:
    properties:
      items:
        items:
          $ref: "#/definitions/DynamicContentObject"
        type: "array"
    type: "object"
  EmailCCObject:
    allOf:
    - $ref: "#/definitions/FollowerObject"
    - properties:
        action:
          enum:
          - "put"
          - "delete"
          type: "string"
        user_email:
          type: "string"
        user_id:
          type: "string"
        user_name:
          type: "string"
      type: "object"
    type: "object"
  EmailNotificationObject:
    example:
      comment_id: 7824075373565
      created_at: "2024-02-21T23:13:07Z"
      email_id: "01HQ6Z3DE28F34XBFCYH0SRM95"
      message_id: "<56Z97D7G67G_65d68382aa493_4639581606f3@example.com>"
      notification_id: 7824075373693
      recipients:
      - delivery_status:
          code: "530 5.7.0"
          id: 24
          message: "Email failed to deliver. 530 5.7.0"
          name: "authentication_required"
        email_address: "recipient@example.com"
        user_id: 7612709251581
      ticket_id: 623
      updated_at: "2024-02-21T23:13:07Z"
      url: "https://example.zendesk.com/api/v2/email_notifications/7824075373693.json"
    properties:
      comment_id:
        description: "The comment ID associated to this email notification"
        readOnly: true
        type: "integer"
      created_at:
        description: "When this email notification was created"
        format: "date-time"
        readOnly: true
        type: "string"
      email_id:
        description: "The email ID of this email notification"
        readOnly: true
        type: "string"
      message_id:
        description: "The value of the Message-Id header of the email"
        readOnly: true
        type: "string"
      notification_id:
        description: "The notification id of this email notification"
        readOnly: true
        type: "integer"
      recipients:
        description: "The list of recipients associated to this email notification"
        items:
          $ref: "#/definitions/RecipientObject"
        readOnly: true
        type: "array"
      ticket_id:
        description: "The ticket ID associated to this email notification"
        readOnly: true
        type: "integer"
      updated_at:
        description: "When this email notification was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this email notification"
        readOnly: true
        type: "string"
    type: "object"
  EmailNotificationResponse:
    properties:
      email_notification:
        $ref: "#/definitions/EmailNotificationObject"
    type: "object"
  EmailNotificationsResponse:
    properties:
      email_notifications:
        items:
          $ref: "#/definitions/EmailNotificationObject"
        type: "array"
    type: "object"
  Error:
    properties:
      code:
        type: "string"
      detail:
        type: "string"
      id:
        type: "string"
      links:
        type: "object"
      source:
        type: "object"
      status:
        type: "string"
      title:
        type: "string"
    required:
    - "code"
    - "title"
    type: "object"
  Errors:
    properties:
      errors:
        items:
          $ref: "#/definitions/Error"
        type: "array"
    type: "object"
  EssentialsCardObject:
    example:
      created_at: "2012-04-02T22:55:29Z"
      default: true
      fields:
      - id: null
        zrn: "zen:user:identity:email"
      - id: null
        zrn: "zen:user:field:standard:external_id"
      - id: null
        zrn: "zen:user:field:standard:iana_time_zone"
      - id: null
        zrn: "zen:user:field:standard:locale"
      - id: null
        zrn: "zen:user:field:standard:organization_id"
      id: "123"
      key: "zen:custom_object:boat"
      layout: "essentials_card"
      max_count: 20
      updated_at: "2012-04-02T22:55:29Z"
    properties:
      created_at:
        description: "Date and time the essentials card were created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "If true, the system has used the first twenty fields for the custom object type as the essentials card."
        readOnly: true
        type: "boolean"
      fields:
        description: "Fields that are displayed in the essentials card details. The order is defined by the order of the fields in the array"
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      id:
        description: "id of the essentials card\n"
        readOnly: true
        type: "string"
        x-nullable: true
      key:
        description: "Object type. Example: `zen:user` refers to `User` type\n"
        readOnly: true
        type: "string"
      layout:
        description: "layout type\n"
        readOnly: true
        type: "string"
      max_count:
        description: "Maximum number of fields allowed in the essentials card"
        readOnly: true
        type: "integer"
      updated_at:
        description: "Date and time the essentials card were last updated"
        format: "date-time"
        readOnly: true
        type: "string"
    required:
    - "fields"
    type: "object"
  EssentialsCardResponse:
    properties:
      object_layout:
        $ref: "#/definitions/EssentialsCardObject"
    type: "object"
  EssentialsCardsResponse:
    properties:
      object_layouts:
        items:
          $ref: "#/definitions/EssentialsCardObject"
        type: "array"
    type: "object"
  ExportIncrementalOrganizationsResponse:
    example:
      count: 1
      end_of_stream: true
      end_time: 1601357503
      next_page: "https://example.zendesk.com/api/v2/incremental/ticket_events.json?start_time=1601357503"
      organizations:
      - tags:
        - "smiley"
        - "teapot_kettle"
        created_at: "2018-11-14T00:14:52Z"
        details: "caterpillar =)"
        domain_names:
        - "remain.com"
        external_id: "ABC198"
        group_id: 1835962
        id: 4112492
        name: "Groablet Enterprises"
        notes: "donkey"
        organization_fields:
          datepudding: "2018-11-04T00:00:00+00:00"
          org_field_1: "happy happy"
          org_field_2: "teapot_kettle"
        shared_comments: false
        shared_tickets: false
        updated_at: "2018-11-14T00:54:22Z"
        url: "https://example.zendesk.com/api/v2/organizations/4112492.json"
    properties:
      count:
        type: "integer"
      end_of_stream:
        type: "boolean"
      end_time:
        type: "integer"
      next_page:
        type: "string"
        x-nullable: true
      organizations:
        items:
          $ref: "#/definitions/OrganizationObject"
        type: "array"
    type: "object"
  ExportIncrementalTicketEventsResponse:
    example:
      count: 1
      end_of_stream: true
      end_time: 1601357503
      next_page: "https://example.zendesk.com/api/v2/incremental/ticket_events.json?start_time=1601357503"
      ticket_events:
      - id: 926256957613
        instance_id: 1
        metric: "agent_work_time"
        ticket_id: 155
        time: "2020-10-26T12:53:12Z"
        type: "measure"
    properties:
      count:
        type: "integer"
      end_of_stream:
        type: "boolean"
      end_time:
        type: "integer"
      next_page:
        type: "string"
        x-nullable: true
      ticket_events:
        items:
          $ref: "#/definitions/TicketMetricEventBaseObject"
        type: "array"
    type: "object"
  FollowerObject:
    properties:
      action:
        enum:
        - "put"
        - "delete"
        type: "string"
      user_email:
        format: "email"
        type: "string"
      user_id:
        type: "string"
    type: "object"
  GroupMembershipObject:
    properties:
      created_at:
        description: "The time the group was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "If true, tickets assigned directly to the agent will assume this membership's group"
        type: "boolean"
      group_id:
        description: "The id of a group"
        type: "integer"
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      updated_at:
        description: "The time of the last update of the group"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this record"
        readOnly: true
        type: "string"
      user_id:
        description: "The id of an agent"
        type: "integer"
    required:
    - "user_id"
    - "group_id"
    type: "object"
  GroupMembershipResponse:
    properties:
      group_membership:
        $ref: "#/definitions/GroupMembershipObject"
    type: "object"
  GroupMembershipsResponse:
    properties:
      group_memberships:
        items:
          $ref: "#/definitions/GroupMembershipObject"
        type: "array"
    type: "object"
  GroupObject:
    example:
      created_at: "2009-07-20T22:55:29Z"
      default: true
      deleted: false
      description: "Some clever description here"
      id: 3432
      is_public: true
      name: "First Level Support"
      updated_at: "2011-05-05T10:38:52Z"
      url: "https://company.zendesk.com/api/v2/groups/3432.json"
    properties:
      created_at:
        description: "The time the group was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "If the group is the default one for the account"
        readOnly: true
        type: "boolean"
      deleted:
        description: "Deleted groups get marked as such"
        readOnly: true
        type: "boolean"
      description:
        description: "The description of the group"
        type: "string"
      id:
        description: "Automatically assigned when creating groups"
        readOnly: true
        type: "integer"
      is_public:
        description: "If true, the group is public.\nIf false, the group is private.\nYou can't change a private group to a public group\n"
        type: "boolean"
      name:
        description: "The name of the group"
        type: "string"
      updated_at:
        description: "The time of the last update of the group"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of the group"
        readOnly: true
        type: "string"
    required:
    - "name"
    type: "object"
  GroupResponse:
    properties:
      group:
        $ref: "#/definitions/GroupObject"
    type: "object"
  GroupSLAPoliciesResponse:
    properties:
      count:
        readOnly: true
        type: "integer"
      group_sla_policies:
        items:
          $ref: "#/definitions/GroupSLAPolicyObject"
        type: "array"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  GroupSLAPolicyFilterConditionObject:
    properties:
      field:
        description: "The name of a ticket field"
        type: "string"
      operator:
        description: "A comparison operator"
        type: "string"
      value:
        description: "The value of a ticket field"
        items: {}
        type: "array"
    type: "object"
  GroupSLAPolicyFilterDefinitionResponse:
    properties:
      definitions:
        properties:
          all:
            items:
              properties:
                group:
                  type: "string"
                operators:
                  items:
                    properties:
                      title:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
                title:
                  type: "string"
                value:
                  type: "string"
                values:
                  properties:
                    list:
                      items:
                        properties:
                          title:
                            type: "string"
                          value:
                            type: "integer"
                            x-nullable: true
                        type: "object"
                      type: "array"
                    type:
                      type: "string"
                  type: "object"
              type: "object"
            type: "array"
        type: "object"
    type: "object"
  GroupSLAPolicyFilterObject:
    description: "An object that describes the conditions a ticket must match for a Group SLA policy to be applied to the ticket. See [Filter](#filter)."
    properties:
      all:
        items:
          $ref: "#/definitions/GroupSLAPolicyFilterConditionObject"
        type: "array"
    type: "object"
  GroupSLAPolicyMetricObject:
    properties:
      business_hours:
        description: "Whether the metric targets are being measured in business hours or calendar hours"
        type: "boolean"
      metric:
        description: "The definition of the time that is being measured"
        type: "string"
      priority:
        description: "Priority that a ticket must match"
        type: "string"
      target:
        description: "The time within which the end-state for a metric should be met"
        type: "integer"
    type: "object"
  GroupSLAPolicyObject:
    example:
      created_at: "2023-03-17T22:50:26Z"
      description: "Group: Tier 1"
      filter:
        all: []
      id: "01H078CBDY28BZG7P6BONY09DN"
      policy_metrics:
      - business_hours: false
        metric: "group_ownership_time"
        priority: "low"
        target: 3600
      position: 3
      title: "Tier 1"
      updated_at: "2023-03-17T22:50:26Z"
      url: "https://company.zendesk.com/api/v2/group_slas/policies/01H078CBDY28BZG7P6BONY09DN.json"
    properties:
      created_at:
        description: "The time the Group SLA policy was created"
        format: "date-time"
        readOnly: true
        type: "string"
      description:
        description: "The description of the Group SLA policy"
        type: "string"
      filter:
        $ref: "#/definitions/GroupSLAPolicyFilterObject"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "string"
      policy_metrics:
        description: "Array of [policy metric](#policy-metric) objects"
        items:
          $ref: "#/definitions/GroupSLAPolicyMetricObject"
        type: "array"
      position:
        description: "Position of the Group SLA policy. This position determines the order in which policies are matched to tickets. If not specified, the Group SLA policy is added at the last position"
        type: "integer"
      title:
        description: "The title of the Group SLA policy"
        type: "string"
      updated_at:
        description: "The time of the last update of the Group SLA policy"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "URL of the Group SLA policy record"
        readOnly: true
        type: "string"
    required:
    - "title"
    - "filter"
    type: "object"
  GroupSLAPolicyResponse:
    properties:
      group_sla_policy:
        $ref: "#/definitions/GroupSLAPolicyObject"
    type: "object"
  GroupsCountObject:
    properties:
      count:
        properties:
          refreshed_at:
            description: "Timestamp that indicates when the count was last updated"
            format: "date-time"
            readOnly: true
            type: "string"
          value:
            description: "Approximate count of groups"
            readOnly: true
            type: "integer"
        type: "object"
    type: "object"
  GroupsResponse:
    properties:
      groups:
        items:
          $ref: "#/definitions/GroupObject"
        type: "array"
    type: "object"
  HostMappingObject:
    example:
      cname: "google.com"
      expected_cnames:
      - "bar.zendesk.coom"
      is_valid: false
      reason: "wrong_cname"
    properties:
      cname:
        description: "The canonical name record for a host mapping"
        type: "string"
      expected_cnames:
        description: "Array of expected CNAME records for host mapping(s) of a given brand"
        items:
          type: "string"
        type: "array"
      is_valid:
        description: "Whether a host mapping is valid or not for a given brand"
        type: "boolean"
      reason:
        description: "Reason why a host mapping is valid or not"
        type: "string"
    title: "Host Mapping"
    type: "object"
  IncrementalSkillBasedRouting:
    properties:
      attribute_values:
        description: "Routing attribute values"
        items:
          $ref: "#/definitions/IncrementalSkillBasedRoutingAttributeValue"
        type: "array"
      attributes:
        description: "Routing attributes"
        items:
          $ref: "#/definitions/IncrementalSkillBasedRoutingAttribute"
        type: "array"
      count:
        description: "The number of results returned for the current request"
        readOnly: true
        type: "integer"
      end_time:
        description: "The most recent resource creation time present in this result set in Unix epoch time"
        readOnly: true
        type: "integer"
      instance_values:
        description: "Routing instance values"
        items:
          $ref: "#/definitions/IncrementalSkillBasedRoutingInstanceValue"
        type: "array"
      next_page:
        description: "The URL that should be called to get the next set of results"
        readOnly: true
        type: "string"
    title: "Incremental Skill-based Routing"
    type: "object"
  IncrementalSkillBasedRoutingAttribute:
    properties:
      id:
        description: "Automatically assigned when an attribute is created"
        readOnly: true
        type: "string"
      name:
        description: "The name of the attribute"
        readOnly: true
        type: "string"
      time:
        description: "The time the attribute was created, updated, or deleted"
        format: "date-time"
        readOnly: true
        type: "string"
      type:
        description: "One of \"create\", \"update\", or \"delete\""
        readOnly: true
        type: "string"
    type: "object"
  IncrementalSkillBasedRoutingAttributeValue:
    properties:
      attribute_id:
        description: "Id of the associated attribute"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when an attribute value is created"
        readOnly: true
        type: "string"
      name:
        description: "The name of the attribute value"
        readOnly: true
        type: "string"
      time:
        description: "The time the attribute value was created, updated, or deleted"
        format: "date-time"
        readOnly: true
        type: "string"
      type:
        description: "One of \"create\", \"update\", or \"delete\""
        readOnly: true
        type: "string"
    type: "object"
  IncrementalSkillBasedRoutingInstanceValue:
    properties:
      attribute_value_id:
        description: "Id of the associated attribute value"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when an instance value is created"
        readOnly: true
        type: "string"
      instance_id:
        description: "Id of the associated agent or ticket"
        readOnly: true
        type: "string"
      time:
        description: "The time the instance value was created or deleted"
        format: "date-time"
        readOnly: true
        type: "string"
      type:
        description: "One of \"associate_agent\", \"unassociate_agent\", \"associate_ticket\", or \"unassociate_ticket\""
        readOnly: true
        type: "string"
    type: "object"
  JobStatusObject:
    example:
      id: "82de0b044094f0c67893ac9fe64f1a99"
      message: "Completed at 2018-03-08 10:07:04 +0000"
      progress: 2
      results:
      - action: "update"
        id: 244
        status: "Updated"
        success: true
      - action: "update"
        id: 245
        status: "Updated"
        success: true
      status: "completed"
      total: 2
      url: "https://example.zendesk.com/api/v2/job_statuses/82de0b0467893ac9fe64f1a99.json"
    properties:
      id:
        description: "Automatically assigned when the job is queued"
        readOnly: true
        type: "string"
      job_type:
        description: "The type of the job"
        readOnly: true
        type: "string"
      message:
        description: "Message from the job worker, if any"
        readOnly: true
        type: "string"
        x-nullable: true
      progress:
        description: "Number of tasks that have already been completed"
        readOnly: true
        type: "integer"
        x-nullable: true
      results:
        description: "Result data from processed tasks. See [Results](#results) below"
        readOnly: true
      status:
        description: "The current status. One of the following: \"queued\", \"working\", \"failed\", \"completed\""
        readOnly: true
        type: "string"
      total:
        description: "The total number of tasks this job is batching through"
        readOnly: true
        type: "integer"
        x-nullable: true
      url:
        description: "The URL to poll for status updates"
        readOnly: true
        type: "string"
    type: "object"
  JobStatusResponse:
    properties:
      job_status:
        $ref: "#/definitions/JobStatusObject"
    type: "object"
  JobStatusResultObject:
    type: "object"
    additionalProperties: true
  JobStatusesResponse:
    properties:
      job_statuses:
        items:
          $ref: "#/definitions/JobStatusObject"
        type: "array"
    required:
    - "job_statuses"
    type: "object"
  ListDeletedTicketsResponse:
    allOf:
    - properties:
        deleted_tickets:
          items:
            properties:
              actor:
                properties:
                  id:
                    type: "integer"
                  name:
                    type: "string"
                type: "object"
              deleted_at:
                type: "string"
              id:
                type: "integer"
              previous_state:
                type: "string"
              subject:
                type: "string"
            type: "object"
          type: "array"
      type: "object"
    - $ref: "#/definitions/OffsetPaginationObject"
    type: "object"
  ListTicketCollaboratorsResponse:
    additionalProperties: true
    type: "object"
  ListTicketEmailCCsResponse:
    additionalProperties: true
    type: "object"
  ListTicketFollowersResponse:
    additionalProperties: true
    type: "object"
  ListTicketIncidentsResponse:
    additionalProperties: true
    type: "object"
  ListTicketProblemsResponse:
    additionalProperties: true
    type: "object"
  LocaleObject:
    example:
      created_at: "2009-07-20T22:55:29Z"
      id: 1
      locale: "en-US"
      name: "English"
      updated_at: "2011-05-05T10:38:52Z"
      url: "https://company.zendesk.com/api/v2/locales/en-US.json"
    properties:
      created_at:
        description: "The ISO 8601 formatted date-time the locale was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "The unique ID of the locale"
        readOnly: true
        type: "integer"
      locale:
        description: "The name of the locale"
        readOnly: true
        type: "string"
      name:
        description: "The name of the language"
        readOnly: true
        type: "string"
      updated_at:
        description: "The ISO 8601 formatted date-time when the locale was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The URL of the locale record"
        readOnly: true
        type: "string"
    type: "object"
  LocaleResponse:
    properties:
      locale:
        $ref: "#/definitions/LocaleObject"
    type: "object"
  LocalesResponse:
    properties:
      locales:
        items:
          $ref: "#/definitions/LocaleObject"
        type: "array"
    type: "object"
  MacroApplyTicketResponse:
    properties:
      result:
        properties:
          ticket:
            properties:
              assignee_id:
                type: "integer"
              comment:
                properties:
                  body:
                    type: "string"
                  public:
                    type: "boolean"
                  scoped_body:
                    items:
                      items:
                        type: "string"
                      type: "array"
                    type: "array"
                type: "object"
              fields:
                properties:
                  id:
                    type: "integer"
                  value:
                    type: "string"
                type: "object"
              group_id:
                type: "integer"
              id:
                type: "integer"
              url:
                type: "string"
            type: "object"
        type: "object"
    type: "object"
  MacroAttachmentObject:
    properties:
      content_type:
        description: "The content type of the image. Example value: \"image/png\""
        readOnly: true
        type: "string"
      content_url:
        description: "A full URL where the attachment image file can be downloaded"
        readOnly: true
        type: "string"
      created_at:
        description: "The time when this attachment was created"
        format: "date-time"
        type: "string"
      filename:
        description: "The name of the image file"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      size:
        description: "The size of the image file in bytes"
        readOnly: true
        type: "integer"
    type: "object"
  MacroAttachmentResponse:
    properties:
      macro_attachment:
        $ref: "#/definitions/MacroAttachmentObject"
    type: "object"
  MacroAttachmentsResponse:
    properties:
      macro_attachments:
        items:
          $ref: "#/definitions/MacroAttachmentObject"
        type: "array"
    type: "object"
  MacroCategoriesResponse:
    properties:
      categories:
        items:
          type: "string"
        type: "array"
    type: "object"
  MacroCommonObject:
    example:
      actions:
      - field: "status"
        value: "solved"
      - field: "priority"
        value: "normal"
      - field: "type"
        value: "incident"
      - field: "assignee_id"
        value: "current_user"
      - field: "group_id"
        value: "current_groups"
      - field: "comment_value"
        value: "Thanks for your request. This issue you reported is a known issue. For more information, please visit our forums. "
      active: true
      created_at: "2019-09-16T02:17:38Z"
      default: false
      description: null
      id: 360111062754
      position: 9999
      restriction: null
      title: "Close and redirect to topics"
      updated_at: "2019-09-16T02:17:38Z"
      url: "https://subdomain.zendesk.com/api/v2/macros/360111062754.json"
    properties:
      actions:
        description: "Each action describes what the macro will do. See [Actions reference](/documentation/ticketing/reference-guides/actions-reference)"
        items:
          $ref: "#/definitions/ActionObject"
        type: "array"
      active:
        description: "Useful for determining if the macro should be displayed"
        type: "boolean"
      created_at:
        description: "The time the macro was created"
        format: "date-time"
        type: "string"
      default:
        description: "If true, the macro is a default macro"
        readOnly: true
        type: "boolean"
      description:
        description: "The description of the macro"
        type: "string"
        x-nullable: true
      id:
        description: "The ID automatically assigned when a macro is created"
        type: "integer"
      position:
        description: "The position of the macro"
        type: "integer"
      restriction:
        additionalProperties: true
        description: "Access to this macro. A null value allows unrestricted access for all users in the account"
        type: "object"
        x-nullable: true
      title:
        description: "The title of the macro"
        type: "string"
      updated_at:
        description: "The time of the last update of the macro"
        format: "date-time"
        type: "string"
      url:
        description: "A URL to access the macro's details"
        type: "string"
    required:
    - "actions"
    - "title"
    type: "object"
  MacroInput:
    properties:
      actions:
        description: "Each action describes what the macro will do"
        items:
          $ref: "#/definitions/ActionObject"
        type: "array"
      active:
        description: "Useful for determining if the macro should be displayed"
        type: "boolean"
      description:
        description: "The description of the macro"
        type: "string"
        x-nullable: true
      restriction:
        additionalProperties: true
        description: "Who may access this macro. Will be null when everyone in the account can access it"
        properties:
          id:
            description: "The numeric ID of the group or user"
            type: "integer"
          ids:
            description: "The numeric IDs of the groups"
            items:
              type: "integer"
            type: "array"
          type:
            description: "Allowed values are Group or User"
            type: "string"
        type: "object"
      title:
        description: "The title of the macro"
        type: "string"
    required:
    - "title"
    - "actions"
    type: "object"
  MacroObject:
    allOf:
    - $ref: "#/definitions/MacroCommonObject"
    - properties:
        app_installation:
          description: "The app installation that requires each macro, if present"
          type: "string"
          x-nullable: true
        categories:
          description: "The macro categories"
          type: "string"
          x-nullable: true
        permissions:
          description: "Permissions for each macro"
          type: "string"
          x-nullable: true
        usage_1h:
          description: "The number of times each macro has been used in the past hour"
          type: "integer"
        usage_24h:
          description: "The number of times each macro has been used in the past day"
          type: "integer"
        usage_30d:
          description: "The number of times each macro has been used in the past thirty days"
          type: "integer"
        usage_7d:
          description: "The number of times each macro has been used in the past week"
          type: "integer"
      type: "object"
    example:
      actions: []
      active: true
      description: "Sets the ticket status to `solved`"
      id: 25
      position: 42
      restriction:
        id: 4
        type: "User"
      title: "Close and Save"
    type: "object"
  MacroResponse:
    properties:
      macro:
        $ref: "#/definitions/MacroObject"
    type: "object"
  MacroUpdateManyInput:
    properties:
      macros:
        items:
          properties:
            active:
              description: "The active status of the macro (true or false)"
              type: "boolean"
            id:
              description: "The ID of the macro to update"
              type: "integer"
            position:
              description: "The new position of the macro"
              type: "integer"
          required:
          - "id"
          type: "object"
        type: "array"
    type: "object"
  MacrosResponse:
    allOf:
    - properties:
        macros:
          items:
            $ref: "#/definitions/MacroObject"
          type: "array"
      type: "object"
    - $ref: "#/definitions/OffsetPaginationObject"
    type: "object"
  ObjectTriggerActionDefinitionObject:
    properties:
      group:
        type: "string"
      nullable:
        type: "boolean"
      repeatable:
        type: "boolean"
      subject:
        type: "string"
      title:
        type: "string"
      type:
        type: "string"
      values:
        items:
          properties:
            enabled:
              type: "boolean"
            format:
              type: "string"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
    type: "object"
  ObjectTriggerBulkUpdateItem:
    example:
      active: true
      id: 25
      position: 8
    properties:
      active:
        description: "Whether an object trigger is active"
        type: "boolean"
      id:
        description: "The id of the object trigger to update"
        type: "integer"
      position:
        description: "The new position of the object trigger"
        type: "integer"
    required:
    - "id"
    type: "object"
  ObjectTriggerBulkUpdateRequest:
    properties:
      triggers:
        items:
          $ref: "#/definitions/ObjectTriggerBulkUpdateItem"
        type: "array"
    type: "object"
  ObjectTriggerConditionDefinitionObjectAll:
    properties:
      group:
        type: "string"
      nullable:
        type: "boolean"
      operators:
        items:
          properties:
            format:
              type: "string"
            terminal:
              type: "boolean"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
      repeatable:
        type: "boolean"
      subject:
        type: "string"
      title:
        type: "string"
      type:
        type: "string"
      values:
        items:
          properties:
            enabled:
              type: "boolean"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
    type: "object"
  ObjectTriggerConditionDefinitionObjectAny:
    properties:
      group:
        type: "string"
      nullable:
        type: "boolean"
      operators:
        items:
          properties:
            format:
              type: "string"
            terminal:
              type: "boolean"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
      repeatable:
        type: "boolean"
      subject:
        type: "string"
      title:
        type: "string"
      type:
        type: "string"
      values:
        items:
          properties:
            enabled:
              type: "boolean"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
    type: "object"
  ObjectTriggerDefinitionObject:
    properties:
      actions:
        items:
          $ref: "#/definitions/ObjectTriggerActionDefinitionObject"
        type: "array"
      conditions_all:
        items:
          $ref: "#/definitions/ObjectTriggerConditionDefinitionObjectAll"
        type: "array"
      conditions_any:
        items:
          $ref: "#/definitions/ObjectTriggerConditionDefinitionObjectAny"
        type: "array"
    type: "object"
  ObjectTriggerDefinitionResponse:
    properties:
      definitions:
        $ref: "#/definitions/ObjectTriggerDefinitionObject"
    type: "object"
  ObjectTriggerObject:
    example:
      actions:
      - {}
      active: true
      conditions: {}
      created_at: "2024-07-08T20:44:32Z"
      default: false
      description: "Sets mile count when heat not present on order custom object"
      id: 25
      position: 8
      raw_title: "CO trigger with tagger field condition"
      title: "CO trigger with tagger field condition"
      updated_at: "2024-07-08T20:44:32Z"
      url: "http://{subdomain}.zendesk.com/api/v2/custom_objects/order/triggers/25.json"
    properties:
      actions:
        description: "An array of actions the trigger does when its conditions are met. See [Actions reference](/documentation/ticketing/reference-guides/actions-reference)"
        items:
          $ref: "#/definitions/TriggerActionObject"
        type: "array"
      active:
        description: "Whether the trigger is active"
        type: "boolean"
      conditions:
        $ref: "#/definitions/TriggerConditionsObject"
      created_at:
        description: "The time the trigger was created"
        readOnly: true
        type: "string"
      default:
        description: "Always false for object triggers"
        readOnly: true
        type: "boolean"
      description:
        description: "The description of the trigger"
        type: "string"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      position:
        description: "Position of the trigger, determines the order they will execute in"
        type: "integer"
      raw_title:
        description: "The raw format of the title of the trigger"
        type: "string"
      title:
        description: "The title of the trigger"
        type: "string"
      updated_at:
        description: "The time of the last update of the trigger"
        readOnly: true
        type: "string"
      url:
        description: "The url of the trigger"
        readOnly: true
        type: "string"
    required:
    - "conditions"
    - "actions"
    - "title"
    type: "object"
  ObjectTriggerRequest:
    properties:
      trigger:
        allOf:
        - $ref: "#/definitions/ObjectTriggerObject"
    type: "object"
  ObjectTriggerResponse:
    properties:
      trigger:
        $ref: "#/definitions/ObjectTriggerObject"
    type: "object"
  ObjectTriggersResponse:
    properties:
      count:
        type: "integer"
      next_page:
        type: "string"
        x-nullable: true
      previous_page:
        type: "string"
        x-nullable: true
      triggers:
        items:
          $ref: "#/definitions/ObjectTriggerObject"
        type: "array"
    type: "object"
  OffsetPaginationObject:
    properties:
      count:
        description: "the total record count"
        type: "integer"
      next_page:
        description: "the URL of the next page"
        format: "url"
        type: "string"
        x-nullable: true
      previous_page:
        description: "the URL of the previous page"
        format: "url"
        type: "string"
        x-nullable: true
    type: "object"
  OrganizationFieldObject:
    allOf:
    - $ref: "#/definitions/CustomFieldObject"
    example:
      active: true
      created_at: "2012-10-16T16:04:06Z"
      description: "Description of Custom Field"
      id: 7
      key: "custom_field_1"
      position: 9999
      raw_description: "{{dc.my_description}}"
      raw_title: "Custom Field 1"
      regexp_for_validation: null
      title: "Custom Field 1"
      type: "text"
      updated_at: "2012-10-16T16:04:06Z"
      url: "https://company.zendesk.com/api/v2/organization_fields/7.json"
    type: "object"
  OrganizationFieldResponse:
    properties:
      organization_field:
        $ref: "#/definitions/OrganizationFieldObject"
    type: "object"
  OrganizationFieldsResponse:
    properties:
      count:
        description: "Total count of records retrieved"
        readOnly: true
        type: "integer"
      next_page:
        description: "URL of the next page"
        readOnly: true
        type: "string"
        x-nullable: true
      organization_fields:
        items:
          $ref: "#/definitions/OrganizationFieldObject"
        type: "array"
      previous_page:
        description: "URL of the previous page"
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  OrganizationMembershipObject:
    example:
      created_at: "2009-05-13T00:07:08Z"
      default: true
      id: 4
      organization_id: 12
      organization_name: "first organization"
      updated_at: "2011-07-22T00:11:12Z"
      url: "https://example.zendesk.com/api/v2/organization_memberships/4.json"
      user_id: 29
      view_tickets: true
    properties:
      created_at:
        description: "When this record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "Denotes whether this is the default organization membership for the user. If false, returns `null`"
        type: "boolean"
        x-nullable: true
      id:
        description: "Automatically assigned when the membership is created"
        readOnly: true
        type: "integer"
      organization_id:
        description: "The ID of the organization associated with this user, in this membership"
        readOnly: true
        type: "integer"
      organization_name:
        description: "The name of the organization associated with this user, in this membership"
        readOnly: true
        type: "string"
      updated_at:
        description: "When this record last got updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this membership"
        readOnly: true
        type: "string"
      user_id:
        description: "The ID of the user for whom this memberships belongs"
        readOnly: true
        type: "integer"
      view_tickets:
        description: "Denotes whether the user can or cannot have access to all organization's tickets."
        readOnly: true
        type: "boolean"
    required:
    - "user_id"
    - "organization_id"
    - "default"
    type: "object"
  OrganizationMembershipResponse:
    properties:
      organization_membership:
        $ref: "#/definitions/OrganizationMembershipObject"
    type: "object"
  OrganizationMembershipsResponse:
    properties:
      organization_memberships:
        items:
          $ref: "#/definitions/OrganizationMembershipObject"
        type: "array"
    type: "object"
  OrganizationMergeListResponse:
    properties:
      organization_merges:
        items:
          properties:
            id:
              format: "string"
              type: "string"
            loser_id:
              type: "integer"
            status:
              enum:
              - "new"
              - "in_progress"
              - "error"
              - "complete"
              type: "string"
            url:
              format: "string"
              type: "string"
            winner_id:
              type: "integer"
          type: "object"
          required:
          - "id"
          - "url"
          - "loser_id"
          - "winner_id"
          - "status"
        type: "array"
    type: "object"
  OrganizationMergeRequest:
    properties:
      organization_merge:
        properties:
          winner_id:
            description: "The id of the winning organization."
            type: "integer"
        required:
        - "winner_id"
        type: "object"
    type: "object"
  OrganizationMergeResponse:
    properties:
      organization_merge:
        properties:
          id:
            format: "string"
            type: "string"
          loser_id:
            type: "integer"
          status:
            enum:
            - "new"
            - "in_progress"
            - "error"
            - "complete"
            type: "string"
          url:
            format: "string"
            type: "string"
          winner_id:
            type: "integer"
        required:
        - "id"
        - "url"
        - "loser_id"
        - "winner_id"
        - "status"
        type: "object"
    type: "object"
  OrganizationMetadataObject:
    properties:
      tickets_count:
        description: "The number of tickets for the organization"
        type: "integer"
      users_count:
        description: "The number of users for the organization"
        type: "integer"
    type: "object"
  OrganizationObject:
    example:
      tags:
      - "enterprise"
      - "other_tag"
      created_at: "2009-07-20T22:55:29Z"
      details: "This is a kind of organization"
      domain_names:
      - "example.com"
      - "test.com"
      external_id: "ABC123"
      group_id: null
      id: 35436
      name: "One Organization"
      notes: ""
      organization_fields:
        org_decimal: 5.2
        org_dropdown: "option_1"
      shared_comments: true
      shared_tickets: true
      updated_at: "2011-05-05T10:38:52Z"
      url: "https://company.zendesk.com/api/v2/organizations/35436.json"
    properties:
      tags:
        description: "The tags of the organization"
        items:
          type: "string"
        type: "array"
      created_at:
        description: "The time the organization was created"
        readOnly: true
        type: "string"
      details:
        description: "Any details obout the organization, such as the address"
        type: "string"
        x-nullable: true
      domain_names:
        description: "An array of domain names associated with this organization"
        items:
          type: "string"
        type: "array"
      external_id:
        description: "A unique external id to associate organizations to an external record. The id is case-insensitive. For example, \"company1\" and \"Company1\" are considered the same"
        type: "string"
        x-nullable: true
      group_id:
        description: "New tickets from users in this organization are automatically put in this group"
        type: "integer"
        x-nullable: true
      id:
        description: "Automatically assigned when the organization is created"
        type: "integer"
      name:
        description: "A unique name for the organization"
        type: "string"
      notes:
        description: "Any notes you have about the organization"
        type: "string"
        x-nullable: true
      organization_fields:
        additionalProperties:
          oneOf:
          - type: "string"
          - type: "number"
        description: "Custom fields for this organization. See [Custom organization fields](/api-reference/ticketing/organizations/organizations/#custom-organization-fields)"
        type: "object"
        x-nullable: true
      shared_comments:
        description: "End users in this organization are able to comment on each other's tickets"
        type: "boolean"
      shared_tickets:
        description: "End users in this organization are able to see each other's tickets"
        type: "boolean"
      updated_at:
        description: "The time of the last update of the organization"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this organization"
        readOnly: true
        type: "string"
    required:
    - "name"
    type: "object"
  OrganizationResponse:
    properties:
      organization:
        $ref: "#/definitions/OrganizationObject"
    type: "object"
  OrganizationSubscriptionCreateRequest:
    properties:
      organization_subscription:
        $ref: "#/definitions/OrganizationSubscriptionInput"
    type: "object"
  OrganizationSubscriptionInput:
    properties:
      organization_id:
        description: "The ID of the organization"
        type: "integer"
      user_id:
        description: "The ID of the user"
        type: "integer"
    type: "object"
  OrganizationSubscriptionObject:
    example:
      created_at: "2009-07-20T22:55:29Z"
      id: 1234
      organization_id: 32
      user_id: 482
    properties:
      created_at:
        description: "The date the organization subscription was created"
        format: "date-time"
        type: "string"
      id:
        description: "The ID of the organization subscription"
        type: "integer"
      organization_id:
        description: "The ID of the organization"
        type: "integer"
      user_id:
        description: "The ID of the user"
        type: "integer"
    title: "Organization Subscriptions"
    type: "object"
  OrganizationSubscriptionResponse:
    properties:
      organization_subscription:
        $ref: "#/definitions/OrganizationSubscriptionObject"
    type: "object"
  OrganizationSubscriptionsResponse:
    allOf:
    - $ref: "#/definitions/OffsetPaginationObject"
    - properties:
        organization_subscriptions:
          description: "An array of organization subscriptions"
          items:
            $ref: "#/definitions/OrganizationSubscriptionObject"
          type: "array"
      type: "object"
    type: "object"
  OrganizationsRelatedResponse:
    properties:
      organization_related:
        $ref: "#/definitions/OrganizationMetadataObject"
    type: "object"
  OrganizationsResponse:
    properties:
      count:
        type: "integer"
      next_page:
        type: "string"
        x-nullable: true
      organizations:
        items:
          $ref: "#/definitions/OrganizationObject"
        type: "array"
      previous_page:
        type: "string"
        x-nullable: true
    type: "object"
  Pagination:
    properties:
      links:
        properties:
          next:
            type: "string"
          prev:
            type: "string"
        type: "object"
      meta:
        properties:
          after_cursor:
            type: "string"
          before_cursor:
            type: "string"
          has_more:
            type: "boolean"
        type: "object"
    type: "object"
  PushNotificationDevicesInput:
    items:
      description: "Mobile device token"
      type: "string"
    type: "array"
  PushNotificationDevicesRequest:
    properties:
      push_notification_devices:
        $ref: "#/definitions/PushNotificationDevicesInput"
    type: "object"
  QueueObject:
    example:
      created_at: "2023-11-27T09:03:59Z"
      definition:
        all:
        - field: "priority"
          operator: "is"
          value: "urgent"
        any: []
      description: "Queue description"
      id: "01HG80ATNNZK1N7XRFVKX48XD6"
      name: "New queue with valid definition"
      order: 1
      primary_groups:
        count: 2
        groups:
        - id: 6784729637757
          name: "EWR"
        - id: 5399674286077
          name: "test"
      priority: 1
      secondary_groups:
        count: 0
        groups: []
      updated_at: "2023-11-27T09:03:59Z"
      url: "https://company.zendesk.com/api/v2/queues/01HG80ATNNZK1N7XRFVKX48XD6.json"
    properties:
      created_at:
        description: "The time the queue was created"
        format: "date-time"
        readOnly: true
        type: "string"
      definition:
        description: "Conditions when queue could be applied"
        properties:
          all:
            items:
              properties:
                field:
                  type: "string"
                operator:
                  type: "string"
                value:
                  type: "string"
              type: "object"
            type: "array"
          any:
            items:
              properties:
                field:
                  type: "string"
                operator:
                  type: "string"
                value:
                  type: "string"
              type: "object"
            type: "array"
        type: "object"
      description:
        description: "The description of the queue"
        type: "string"
      id:
        description: "Automatically assigned when creating queue"
        readOnly: true
        type: "string"
      name:
        description: "The name of the queue"
        type: "string"
      order:
        description: "The queue-applied order"
        type: "integer"
      primary_groups:
        description: "Primary group ids linked to the queue"
        properties:
          count:
            type: "integer"
          groups:
            items:
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
              type: "object"
            type: "array"
        type: "object"
      priority:
        description: "The queue-applied priority"
        type: "integer"
      secondary_groups:
        description: "Secondary group ids linked to the queue"
        properties:
          count:
            type: "integer"
          groups:
            items:
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
              type: "object"
            type: "array"
        type: "object"
      updated_at:
        description: "The time of the queue's last update"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API URL of the queue"
        readOnly: true
        type: "string"
    type: "object"
  QueueResponse:
    properties:
      queue:
        $ref: "#/definitions/QueueObject"
    type: "object"
  QueuesResponse:
    properties:
      queues:
        items:
          $ref: "#/definitions/QueueObject"
        type: "array"
    type: "object"
  RecipientObject:
    properties:
      delivery_status:
        description: "Details about the delivery status"
        properties:
          code:
            description: "The delivery status code (SMTP code and DSN code)"
            readOnly: true
            type: "string"
          id:
            description: "The delivery status id"
            readOnly: true
            type: "integer"
          message:
            description: "The delivery status description"
            readOnly: true
            type: "string"
          name:
            description: "The delivery status type (key)"
            readOnly: true
            type: "string"
        type: "object"
      email_address:
        description: "The recipient's email address"
        readOnly: true
        type: "string"
      user_id:
        description: "The recipient's user id"
        readOnly: true
        type: "integer"
    type: "object"
  RecoverSuspendedTicketResponse:
    properties:
      ticket:
        items:
          $ref: "#/definitions/SuspendedTicketObject"
        type: "array"
    type: "object"
  RecoverSuspendedTicketUnprocessableContentResponse:
    properties:
      ticket:
        items:
          $ref: "#/definitions/SuspendedTicketObject"
        type: "array"
    type: "object"
  RecoverSuspendedTicketsResponse:
    properties:
      tickets:
        items:
          $ref: "#/definitions/SuspendedTicketObject"
        type: "array"
    type: "object"
  RelationshipFilterDefinition:
    properties:
      conditions_all:
        items:
          $ref: "#/definitions/TriggerConditionDefinitionObjectAll"
        type: "array"
      conditions_any:
        items:
          $ref: "#/definitions/TriggerConditionDefinitionObjectAny"
        type: "array"
    type: "object"
  RelationshipFilterDefinitionResponse:
    properties:
      definitions:
        $ref: "#/definitions/RelationshipFilterDefinition"
    type: "object"
  RenewSessionResponse:
    properties:
      authenticity_token:
        description: "A token of authenticity for the request"
        type: "string"
    type: "object"
  RequestObject:
    example:
      assignee_id: 72983
      can_be_solved_by_me: false
      collaborator_ids: []
      created_at: "2009-07-20T22:55:29Z"
      description: "The fire is very colorful."
      due_at: "2011-05-24T12:00:00Z"
      group_id: 8665
      id: 35436
      organization_id: 509974
      priority: "normal"
      requester_id: 1462
      status: "open"
      subject: "Help, my printer is on fire!"
      ticket_form_id: 2
      type: "problem"
      updated_at: "2011-05-05T10:38:52Z"
      url: "https://company.zendesk.com/api/v2/requests/35436.json"
      via:
        channel: "web"
    properties:
      assignee_id:
        description: "The id of the assignee if the field is visible to end users"
        readOnly: true
        type: "integer"
      can_be_solved_by_me:
        description: "If true, an end user can mark the request as solved. See [Update Request](/api-reference/ticketing/tickets/ticket-requests/#update-request)"
        readOnly: true
        type: "boolean"
      collaborator_ids:
        description: "The ids of users currently CC'ed on the ticket"
        items:
          type: "integer"
        readOnly: true
        type: "array"
      created_at:
        description: "When this record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      custom_fields:
        description: "Custom fields for the request. See [Setting custom field values](/api-reference/ticketing/tickets/tickets/#setting-custom-field-values) in the Tickets doc"
        items:
          properties:
            id:
              type: "integer"
            value:
              type: "string"
          type: "object"
        type: "array"
      custom_status_id:
        description: "The custom ticket status id of the ticket"
        type: "integer"
      description:
        description: "Read-only first comment on the request. When [creating a request](#create-request), use `comment` to set the description"
        readOnly: true
        type: "string"
      due_at:
        description: "When the task is due (only applies if the request is of type \"task\")"
        format: "date-time"
        type: "string"
      email_cc_ids:
        description: "The ids of users who are currently email CCs on the ticket. See [CCs and followers resources](https://support.zendesk.com/hc/en-us/articles/360020585233) in the Support Help Center"
        items:
          type: "integer"
        readOnly: true
        type: "array"
      followup_source_id:
        description: "The id of the original ticket if this request is a follow-up ticket. See [Create Request](#create-request)"
        readOnly: true
        type: "integer"
      group_id:
        description: "The id of the assigned group if the field is visible to end users"
        readOnly: true
        type: "integer"
      id:
        description: "Automatically assigned when creating requests"
        readOnly: true
        type: "integer"
      is_public:
        description: "Is true if any comments are public, false otherwise"
        readOnly: true
        type: "boolean"
      organization_id:
        description: "The organization of the requester"
        readOnly: true
        type: "integer"
      priority:
        description: "The priority of the request, \"low\", \"normal\", \"high\", \"urgent\""
        type: "string"
      recipient:
        description: "The original recipient e-mail address of the request"
        type: "string"
      requester_id:
        description: "The id of the requester"
        readOnly: true
        type: "integer"
      solved:
        description: "Whether or not request is solved (an end user can set this if \"can_be_solved_by_me\", above, is true for that user)"
        type: "boolean"
      status:
        description: "The state of the request, \"new\", \"open\", \"pending\", \"hold\", \"solved\", \"closed\""
        type: "string"
      subject:
        description: "The value of the subject field for this request if the subject field is visible to end users; a truncated version of the description otherwise"
        type: "string"
      ticket_form_id:
        description: "The numeric id of the ticket form associated with this request if the form is visible to end users - only applicable for enterprise accounts"
        type: "integer"
      type:
        description: "The type of the request, \"question\", \"incident\", \"problem\", \"task\""
        type: "string"
      updated_at:
        description: "When this record last got updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this request"
        readOnly: true
        type: "string"
      via:
        $ref: "#/definitions/TicketAuditViaObject"
    required:
    - "subject"
    type: "object"
  RequestResponse:
    properties:
      request:
        $ref: "#/definitions/RequestObject"
    type: "object"
  RequestsResponse:
    properties:
      requests:
        items:
          $ref: "#/definitions/RequestObject"
        type: "array"
    type: "object"
  ResourceCollectionObject:
    example:
      created_at: "2011-07-20T22:55:29Z"
      id: 35436
      resources:
      - deleted: false
        identifier: "email_on_ticket_solved"
        resource_id: 10824486485524
        type: "triggers"
      - deleted: false
        identifier: "support_description"
        resource_id: 10824486482580
        type: "ticket_fields"
      updated_at: "2011-07-20T22:55:29Z"
    properties:
      created_at:
        description: "When the resource collection was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "id for the resource collection. Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      resources:
        description: "Array of resource metadata objects. See [Resource objects](#resource-objects)"
        items:
          properties:
            deleted:
              type: "boolean"
            identifier:
              type: "string"
            resource_id:
              type: "integer"
            type:
              type: "string"
          type: "object"
        readOnly: true
        type: "array"
      updated_at:
        description: "Last time the resource collection was updated"
        format: "date-time"
        readOnly: true
        type: "string"
    type: "object"
  ResourceCollectionResponse:
    properties:
      resource_collection:
        $ref: "#/definitions/ResourceCollectionObject"
    type: "object"
  ResourceCollectionsResponse:
    properties:
      count:
        readOnly: true
        type: "integer"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
      resource_collections:
        items:
          $ref: "#/definitions/ResourceCollectionObject"
        type: "array"
    type: "object"
  ReverseLookupResponse:
    type: "object"
  SLAPoliciesResponse:
    properties:
      count:
        readOnly: true
        type: "integer"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
      sla_policies:
        items:
          $ref: "#/definitions/SLAPolicyObject"
        type: "array"
    type: "object"
  SLAPolicyFilterConditionObject:
    properties:
      field:
        description: "The name of a ticket field"
        type: "string"
      operator:
        description: "A comparison operator"
        type: "string"
      value:
        description: "The value of a ticket field"
    type: "object"
  SLAPolicyFilterDefinitionResponse:
    properties:
      definitions:
        properties:
          all:
            items:
              properties:
                group:
                  type: "string"
                operators:
                  items:
                    properties:
                      title:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
                target:
                  type: "string"
                  x-nullable: true
                title:
                  type: "string"
                value:
                  type: "string"
                values:
                  properties:
                    list:
                      items:
                        properties:
                          title:
                            type: "string"
                          value:
                            type: "string"
                            x-nullable: true
                        type: "object"
                      type: "array"
                    type:
                      type: "string"
                  type: "object"
              type: "object"
            type: "array"
          any:
            items:
              properties:
                group:
                  type: "string"
                operators:
                  items:
                    properties:
                      title:
                        type: "string"
                      value:
                        type: "string"
                    type: "object"
                  type: "array"
                target:
                  type: "string"
                  x-nullable: true
                title:
                  type: "string"
                value:
                  type: "string"
                values:
                  properties:
                    list:
                      items:
                        properties:
                          title:
                            type: "string"
                          value:
                            type: "string"
                            x-nullable: true
                        type: "object"
                      type: "array"
                    type:
                      type: "string"
                  type: "object"
              type: "object"
            type: "array"
        type: "object"
    type: "object"
  SLAPolicyFilterObject:
    description: "An object that describes the conditions that a ticket must match in order for an SLA policy to be applied to that ticket. See [Filter](#filter)."
    properties:
      all:
        items:
          $ref: "#/definitions/SLAPolicyFilterConditionObject"
        type: "array"
      any:
        items:
          $ref: "#/definitions/SLAPolicyFilterConditionObject"
        type: "array"
    type: "object"
  SLAPolicyMetricObject:
    properties:
      business_hours:
        description: "Whether the metric targets are being measured in business hours or calendar hours"
        type: "boolean"
      metric:
        description: "The definition of the time that is being measured"
        type: "string"
      priority:
        description: "Priority that a ticket must match"
        type: "string"
      target:
        description: "The time within which the end-state for a metric should be met"
        type: "integer"
    type: "object"
  SLAPolicyObject:
    example:
      created_at: "2015-03-17T22:50:26Z"
      description: "Organizations: Silver Plan"
      filter:
        all:
        - field: "type"
          operator: "is"
          value: "incident"
        - field: "via_id"
          operator: "is"
          value: "4"
        - field: "custom_status_id"
          operator: "includes"
          value:
          - "1"
          - "2"
        any: []
      id: 25
      policy_metrics:
      - business_hours: false
        metric: "first_reply_time"
        priority: "low"
        target: 60
      position: 3
      title: "Silver Plan"
      updated_at: "2015-03-17T22:50:26Z"
      url: "https://company.zendesk.com/api/v2/slas/policies/25.json"
    properties:
      created_at:
        description: "The time the SLA policy was created"
        format: "date-time"
        readOnly: true
        type: "string"
      description:
        description: "The description of the SLA policy"
        type: "string"
      filter:
        $ref: "#/definitions/SLAPolicyFilterObject"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      policy_metrics:
        description: "Array of [Policy Metric](#policy-metric) objects"
        items:
          $ref: "#/definitions/SLAPolicyMetricObject"
        type: "array"
      position:
        description: "Position of the SLA policy that determines the order they will be matched. If not specified, the SLA policy is added as the last position"
        type: "integer"
      title:
        description: "The title of the SLA policy"
        type: "string"
      updated_at:
        description: "The time of the last update of the SLA policy"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "URL of the SLA Policy reacord"
        readOnly: true
        type: "string"
    required:
    - "title"
    - "filter"
    type: "object"
  SLAPolicyResponse:
    properties:
      sla_policy:
        $ref: "#/definitions/SLAPolicyObject"
    type: "object"
  SatisfactionRatingObject:
    example:
      assignee_id: 135
      created_at: "2011-07-20T22:55:29Z"
      group_id: 44
      id: 35436
      requester_id: 7881
      score: "good"
      ticket_id: 208
      updated_at: "2011-07-20T22:55:29Z"
      url: "https://company.zendesk.com/api/v2/satisfaction_ratings/62.json"
    properties:
      assignee_id:
        description: "The id of agent assigned to at the time of rating"
        readOnly: true
        type: "integer"
      comment:
        description: "The comment received with this rating, if available"
        type: "string"
      created_at:
        description: "The time the satisfaction rating got created"
        format: "date-time"
        readOnly: true
        type: "string"
      group_id:
        description: "The id of group assigned to at the time of rating"
        readOnly: true
        type: "integer"
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      reason:
        description: "The reason for a bad rating given by the requester in a follow-up question. Satisfaction reasons must be [enabled](https://support.zendesk.com/hc/en-us/articles/223152967)"
        type: "string"
      reason_code:
        description: "The default reasons the user can select from a list menu for giving a negative rating. See [Reason codes](/api-reference/ticketing/ticket-management/satisfaction_reasons/#reason-codes) in the Satisfaction Reasons API. Can only be set on ratings with a `score` of \"bad\". Responses don't include this property"
        type: "integer"
      reason_id:
        description: "id for the reason the user gave a negative rating. Can only be set on ratings with a `score` of \"bad\". To get a descriptive value for the id, use the [Show Reason for Satisfaction Rating](/api-reference/ticketing/ticket-management/satisfaction_reasons/#show-reason-for-satisfaction-rating) endpoint"
        type: "integer"
      requester_id:
        description: "The id of ticket requester submitting the rating"
        readOnly: true
        type: "integer"
      score:
        description: "The rating \"offered\", \"unoffered\", \"good\" or \"bad\""
        type: "string"
      ticket_id:
        description: "The id of ticket being rated"
        readOnly: true
        type: "integer"
      updated_at:
        description: "The time the satisfaction rating got updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this rating"
        readOnly: true
        type: "string"
    required:
    - "assignee_id"
    - "group_id"
    - "requester_id"
    - "ticket_id"
    - "score"
    type: "object"
  SatisfactionRatingResponse:
    properties:
      satisfaction_rating:
        items:
          $ref: "#/definitions/SatisfactionRatingObject"
        type: "array"
    type: "object"
  SatisfactionRatingsCountResponse:
    properties:
      count:
        properties:
          refreshed_at:
            format: "date-time"
            type: "string"
          value:
            type: "integer"
        type: "object"
    type: "object"
  SatisfactionRatingsResponse:
    properties:
      satisfaction_ratings:
        items:
          $ref: "#/definitions/SatisfactionRatingObject"
        type: "array"
    type: "object"
  SatisfactionReasonObject:
    example:
      created_at: "2011-07-20T22:55:29Z"
      deleted_at: "2012-03-12T12:45:32Z"
      id: 35436
      raw_value: "{{dc.reason_code_1003}}"
      reason_code: 1003
      updated_at: "2011-07-20T22:55:29Z"
      url: "https://example.zendesk.com/api/v2/satisfaction_reasons/35436.json"
      value: "Agent did not respond quickly"
    properties:
      created_at:
        description: "The time the reason was created"
        format: "date-time"
        readOnly: true
        type: "string"
      deleted_at:
        description: "The time the reason was deleted"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      raw_value:
        description: "The dynamic content placeholder, if present, or the current \"value\", if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      reason_code:
        description: "An account-level code for referencing the reason. Custom reasons are assigned an auto-incrementing integer (non-system reason codes begin at 1000). See [Reason codes](#reason-codes)"
        readOnly: true
        type: "integer"
      updated_at:
        description: "The time the reason was updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "API URL for the resource"
        readOnly: true
        type: "string"
      value:
        description: "Translated value of the reason in the account locale"
        type: "string"
    required:
    - "value"
    type: "object"
  SatisfactionReasonResponse:
    properties:
      reason:
        items:
          $ref: "#/definitions/SatisfactionReasonObject"
        type: "array"
    type: "object"
  SatisfactionReasonsResponse:
    properties:
      reasons:
        items:
          $ref: "#/definitions/SatisfactionReasonObject"
        type: "array"
    type: "object"
  SearchCountResponse:
    properties:
      count:
        type: "integer"
    type: "object"
  SearchExportResponse:
    example:
      facets: null
      links:
        next: "https://example.zendesk.com/api/v2/search/export.json?filter%5Btype%5D=ticket&page%5Bafter%5D=eyJmaWVsZCI6ImNyZWF0ZWRfYXQiLCJkZXNjIjp0cnVlLCJ0aWVCcmVha0ZpZWxkIjoiaWQiLCJ0aWVCcmVha0Rlc2MiOmZhbHNlLCJzb3J0VmFsdWVzIjpudWxsLCJleHBvcnRlZFRodXNGYXIiOjAsInNlc3Npb25TdGFydCI6MTYwNzAzOTI1Mzk4NSwiY3JlYXRlZEF0IjoxNjA3MDM5MjUzOTg1LCJzYWx0ZWRSZXF1ZXN0SGFzaCI6LTQ5ODM0ODc3LCJzYWx0ZWRDdXJzb3JIYXNoIjotMjQwMzQ4MjgwfQ%3D%3D&page%5Bsize%5D=100&query=hello%26page%5Bsize%5D%3D100%26filter%5Btype%5D%3Dticket"
        prev: null
      meta:
        after_cursor: "eyJmaWVsZCI6ImNyZWF0ZWRfYXQiLCJkZXNjIjp0cnVlLCJ0aWVCcmVha0ZpZWxkIjoiaWQiLCJ0aWVCcmVha0Rlc2MiOmZhbHNlLCJzb3J0VmFsdWVzIjpudWxsLCJleHBvcnRlZFRodXNGYXIiOjAsInNlc3Npb25TdGFydCI6MTYwNzAzOTI1Mzk4NSwiY3JlYXRlZEF0IjoxNjA3MDM5MjUzOTg1LCJzYWx0ZWRSZXF1ZXN0SGFzaCI6LTQ5ODM0ODc3LCJzYWx0ZWRDdXJzb3JIYXNoIjotMjQwMzQ4MjgwfQ=="
        before_cursor: null
        has_more: true
      results: []
    properties:
      facets:
        description: "The facets corresponding to the search query"
        readOnly: true
        type: "string"
        x-nullable: true
      links:
        description: "The links to the previous and next entries via the cursor ids in the metadata."
        properties:
          next:
            description: "The url to the next entry via the cursor."
            readOnly: true
            type: "string"
            x-nullable: true
          prev:
            description: "The url to the previous entry via the cursor."
            readOnly: true
            type: "string"
            x-nullable: true
        type: "object"
      meta:
        description: "Metadata for the export query response."
        properties:
          after_cursor:
            description: "The cursor id for the next object."
            readOnly: true
            type: "string"
            x-nullable: true
          before_cursor:
            description: "The cursor id for the previous object."
            readOnly: true
            type: "string"
            x-nullable: true
          has_more:
            description: "Whether there are more items yet to be returned by the cursor."
            readOnly: true
            type: "boolean"
        type: "object"
      results:
        description: "May consist of tickets, users, groups, or organizations, as specified by the `result_type` property in each result object"
        items:
          $ref: "#/definitions/SearchResultObject"
        readOnly: true
        type: "array"
    type: "object"
  SearchResponse:
    example:
      count: 1
      facets: null
      next_page: null
      previous_page: null
      results:
      - created_at: "2018-04-06T03:17:05Z"
        default: false
        deleted: false
        description: ""
        id: 1835972
        name: "Ragtail"
        result_type: "group"
        updated_at: "2018-04-06T03:17:05Z"
        url: "https://example.zendesk.com/api/v2/groups/1835972.json"
    properties:
      count:
        description: "The number of resources returned by the query corresponding to this page of results in the paginated response"
        readOnly: true
        type: "integer"
      facets:
        description: "The facets corresponding to the search query"
        readOnly: true
        type: "string"
        x-nullable: true
      next_page:
        description: "URL to the next page of results"
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        description: "URL to the previous page of results"
        readOnly: true
        type: "string"
        x-nullable: true
      results:
        description: "May consist of tickets, users, groups, or organizations, as specified by the `result_type` property in each result object"
        items:
          $ref: "#/definitions/SearchResultObject"
        readOnly: true
        type: "array"
    type: "object"
  SearchResultObject:
    properties:
      created_at:
        description: "When the resource was created"
        type: "string"
      default:
        description: "Flag to indicate whether this is the default resource"
        type: "boolean"
      deleted:
        description: "Flag to indicate whether or not resource has been deleted"
        type: "boolean"
      description:
        description: "The description of the resource"
        type: "string"
      id:
        description: "The ID of the resource"
        type: "integer"
      name:
        description: "The name of the resource"
        type: "string"
      result_type:
        description: "The type of the resource"
        type: "string"
      updated_at:
        description: "When the resource was last updated"
        type: "string"
      url:
        description: "The url of the resource"
        type: "string"
    type: "object"
  SessionObject:
    example:
      authenticated_at: "2014-11-18T17:24:29Z"
      id: 3432
      last_seen_at: "2014-11-18T17:30:52Z"
      url: "https://company.zendesk.com/api/v2/users/12345/sessions/3432.json"
      user_id: 12345
    properties:
      authenticated_at:
        description: "When the session was created"
        type: "string"
        x-nullable: true
      id:
        description: "Automatically assigned when the session is created"
        type: "integer"
      last_seen_at:
        description: "The last approximate time this session was seen. This does not update on every request."
        type: "string"
        x-nullable: true
      url:
        description: "The API URL of this session"
        type: "string"
        x-nullable: true
      user_id:
        description: "The id of the user"
        type: "integer"
        x-nullable: true
    required:
    - "id"
    type: "object"
  SessionResponse:
    properties:
      session:
        items:
          $ref: "#/definitions/SessionObject"
        type: "array"
    type: "object"
  SessionsResponse:
    properties:
      sessions:
        items:
          $ref: "#/definitions/SessionObject"
        type: "array"
    type: "object"
  SharingAgreementObject:
    example:
      created_at: "2012-02-20T22:55:29Z"
      id: 88335
      name: "Ticket Sharing"
      partner_name: "jira"
      status: "accepted"
      type: "inbound"
      updated_at: "2013-02-20T22:55:29Z"
      url: "https://company.zendesk.com/api/v2/agreements/88335.json"
    properties:
      created_at:
        description: "The time the record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      name:
        description: "Name of this sharing agreement"
        type: "string"
      partner_name:
        description: "Can be one of the following: \"jira\", null"
        type: "string"
        x-nullable: true
      remote_subdomain:
        description: "Subdomain of the remote account or null if not associated with an account"
        type: "string"
      status:
        description: "Can be one of the following: \"accepted\", \"declined\", \"pending\", \"inactive\", \"failed\", \"ssl_error\", \"configuration_error\""
        type: "string"
      type:
        description: "Can be one of the following: \"inbound\", \"outbound\""
        type: "string"
      updated_at:
        description: "The time the record was updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "URL of the sharing agreement record"
        readOnly: true
        type: "string"
    type: "object"
  SharingAgreementResponse:
    properties:
      sharing_agreement:
        $ref: "#/definitions/SharingAgreementObject"
    type: "object"
  SharingAgreementsResponse:
    properties:
      sharing_agreements:
        items:
          $ref: "#/definitions/SharingAgreementObject"
        type: "array"
    type: "object"
  SkillBasedRoutingAttributeDefinitions:
    properties:
      definitions:
        properties:
          conditions_all:
            items:
              properties:
                subject:
                  type: "string"
                title:
                  type: "string"
              type: "object"
            type: "array"
          conditions_any:
            items:
              properties:
                subject:
                  type: "string"
                title:
                  type: "string"
              type: "object"
            type: "array"
        type: "object"
    type: "object"
  SkillBasedRoutingAttributeObject:
    example:
      created_at: "2017-12-01T19:29:31Z"
      id: "15821cba-7326-11e8-b07e-950ba849aa27"
      name: "color"
      updated_at: "2017-12-01T19:29:31Z"
      url: "https://{subdomain}.zendesk.com/api/v2/routing/attributes/15821cba-7326-11e8-b07e-950ba849aa27.json"
    properties:
      created_at:
        description: "When this record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when an attribute is created"
        readOnly: true
        type: "string"
      name:
        description: "The name of the attribute"
        type: "string"
      updated_at:
        description: "When this record was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "URL of the attribute"
        readOnly: true
        type: "string"
    required:
    - "name"
    type: "object"
  SkillBasedRoutingAttributeResponse:
    properties:
      attribute:
        $ref: "#/definitions/SkillBasedRoutingAttributeObject"
    type: "object"
  SkillBasedRoutingAttributeValueObject:
    properties:
      attribute_id:
        description: "Id of the associated attribute"
        type: "string"
      created_at:
        description: "When this record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when an attribute value is created"
        readOnly: true
        type: "string"
      name:
        description: "The name of the attribute value"
        type: "string"
      updated_at:
        description: "When this record was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "URL of the attribute value"
        readOnly: true
        type: "string"
    type: "object"
  SkillBasedRoutingAttributeValueResponse:
    properties:
      attribute_value:
        $ref: "#/definitions/SkillBasedRoutingAttributeValueObject"
    type: "object"
  SkillBasedRoutingAttributeValuesResponse:
    properties:
      attribute_values:
        items:
          $ref: "#/definitions/SkillBasedRoutingAttributeValueObject"
        type: "array"
    type: "object"
  SkillBasedRoutingAttributesResponse:
    properties:
      attributes:
        items:
          $ref: "#/definitions/SkillBasedRoutingAttributeObject"
        type: "array"
      count:
        readOnly: true
        type: "integer"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  SkillBasedRoutingTicketFulfilledResponse:
    properties:
      fulfilled_ticket_ids:
        items:
          type: "integer"
        type: "array"
    type: "object"
  SupportAddressObject:
    example:
      brand_id: 123
      cname_status: "verified"
      created_at: "2015-07-20T22:55:29Z"
      default: true
      domain_verification_status: "verified"
      email: "support@example.zendesk.com"
      forwarding_status: "unknown"
      id: 35436
      name: "all"
      spf_status: "verified"
      updated_at: "2016-09-21T20:15:20Z"
    properties:
      brand_id:
        description: "The ID of the [brand](/api-reference/ticketing/account-configuration/brands/)"
        type: "integer"
      cname_status:
        description: "Whether all of the required CNAME records are set. Possible values: \"unknown\", \"verified\", \"failed\""
        enum:
        - "unknown"
        - "verified"
        - "failed"
        readOnly: true
        type: "string"
      created_at:
        description: "When the address was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "Whether the address is the account's default support address"
        type: "boolean"
      dns_results:
        description: "Verification statuses for the domain and CNAME records. Possible types: \"verified\", \"failed\""
        enum:
        - "verified"
        - "failed"
        readOnly: true
        type: "string"
      domain_verification_code:
        description: "Verification string to be added as a TXT record to the domain. Possible types: string or null."
        readOnly: true
        type: "string"
      domain_verification_status:
        description: "Whether the domain verification record is valid. Possible values: \"unknown\", \"verified\", \"failed\""
        enum:
        - "unknown"
        - "verified"
        - "failed"
        readOnly: true
        type: "string"
      email:
        description: "The email address. You can't change the email address of an existing support address."
        type: "string"
      forwarding_status:
        description: "Status of email forwarding. Possible values: \"unknown\", \"waiting\", \"verified\", or \"failed\""
        enum:
        - "unknown"
        - "waiting"
        - "verified"
        - "failed"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      name:
        description: "The name for the address"
        type: "string"
      spf_status:
        description: "Whether the SPF record is set up correctly. Possible values: \"unknown\", \"verified\", \"failed\""
        enum:
        - "unknown"
        - "verified"
        - "failed"
        readOnly: true
        type: "string"
      updated_at:
        description: "When the address was updated"
        format: "date-time"
        readOnly: true
        type: "string"
    required:
    - "email"
    type: "object"
  SupportAddressResponse:
    properties:
      recipient_address:
        $ref: "#/definitions/SupportAddressObject"
    type: "object"
  SupportAddressesResponse:
    properties:
      recipient_addresses:
        items:
          $ref: "#/definitions/SupportAddressObject"
        type: "array"
    type: "object"
  SuspendedTicketObject:
    example:
      attachments: []
      author:
        email: "styx@example.com"
        id: 1111
        name: "Mr. Roboto"
      brand_id: 123
      cause: "Detected as spam"
      cause_id: 0
      content: "Out Of Office Reply"
      created_at: "2009-07-20T22:55:29Z"
      error_messages: null
      id: 435
      message_id: "Spambot@spam.co.evil"
      recipient: "john@example.com"
      subject: "Help, my printer is on fire!"
      ticket_id: 67321
      updated_at: "2011-05-05T10:38:52Z"
      url: "https://example.zendesk.com/api/v2/tickets/35436.json"
      via:
        channel: "email"
        source:
          from:
            address: "totallylegit@emailaddress.com"
            name: "TotallyLegit"
          rel: null
          to:
            address: "support@example.zendesk.com"
            name: "Example Account"
    properties:
      attachments:
        description: "The attachments, if any associated to this suspended ticket. See [Attachments](/api-reference/ticketing/tickets/ticket-attachments/)"
        items:
          $ref: "#/definitions/AttachmentObject"
        readOnly: true
        type: "array"
        x-nullable: true
      author:
        allOf:
        - $ref: "#/definitions/AuthorObject"
        description: "The author id (if available), name and email"
        readOnly: true
        type: "object"
      brand_id:
        description: "The id of the brand this ticket is associated with. Only applicable for Enterprise accounts"
        readOnly: true
        type: "integer"
      cause:
        description: "Why the ticket was suspended"
        readOnly: true
        type: "string"
      cause_id:
        description: "The ID of the cause"
        readOnly: true
        type: "integer"
      content:
        description: "The content that was flagged"
        readOnly: true
        type: "string"
      created_at:
        description: "The ticket ID this suspended email is associated with, if available"
        format: "date-time"
        readOnly: true
        type: "string"
      error_messages:
        description: "The error messages if any associated to this suspended ticket"
        items:
          type: "object"
        readOnly: true
        type: "array"
        x-nullable: true
      id:
        description: "Automatically assigned"
        readOnly: true
        type: "integer"
      message_id:
        description: "The ID of the email, if available"
        readOnly: true
        type: "string"
      recipient:
        description: "The original recipient e-mail address of the ticket"
        readOnly: true
        type: "string"
      subject:
        description: "The value of the subject field for this ticket"
        readOnly: true
        type: "string"
      ticket_id:
        description: "The ticket ID this suspended email is associated with, if available"
        readOnly: true
        type: "integer"
      updated_at:
        description: "When the ticket was assigned"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this ticket"
        readOnly: true
        type: "string"
      via:
        $ref: "#/definitions/ViaObject"
    type: "object"
  SuspendedTicketResponse:
    properties:
      suspended_ticket:
        items:
          $ref: "#/definitions/SuspendedTicketObject"
        type: "array"
    type: "object"
  SuspendedTicketsAttachmentsResponse:
    properties:
      upload:
        properties:
          attachments:
            items:
              $ref: "#/definitions/AttachmentObject"
            type: "array"
          token:
            description: "Token for subsequent request"
            readOnly: true
            type: "string"
        type: "object"
    type: "object"
  SuspendedTicketsExportResponse:
    properties:
      export:
        properties:
          status:
            readOnly: true
            type: "string"
          view_id:
            readOnly: true
            type: "string"
        type: "object"
    type: "object"
  SuspendedTicketsResponse:
    properties:
      suspended_tickets:
        items:
          $ref: "#/definitions/SuspendedTicketObject"
        type: "array"
    type: "object"
  SystemFieldOptionObject:
    properties:
      name:
        description: "Name of the system field option"
        readOnly: true
        type: "string"
      value:
        description: "Value of the system field option"
        readOnly: true
        type: "string"
    type: "object"
  TagCountObject:
    properties:
      refreshed_at:
        description: "The time that the count value was last refreshed"
        readOnly: true
        type: "string"
      value:
        description: "The count of tags created in the last 24 hours"
        readOnly: true
        type: "integer"
    type: "object"
  TagCountResponse:
    properties:
      count:
        $ref: "#/definitions/TagCountObject"
    type: "object"
  TagListTagObject:
    properties:
      count:
        description: "The number of tags"
        readOnly: true
        type: "integer"
      name:
        description: "A name for the tag"
        type: "string"
    type: "object"
  TagUrlObject:
    properties:
      url:
        description: "The url associated to the api request"
        readOnly: true
        type: "string"
    type: "object"
  TagsByObjectIdResponse:
    properties:
      tags:
        description: "An array of strings"
        items:
          type: "string"
        type: "array"
    required:
    - "tags"
    type: "object"
  TagsResponse:
    properties:
      tags:
        items:
          $ref: "#/definitions/TagListTagObject"
        type: "array"
      count:
        description: "The number of pages"
        readOnly: true
        type: "integer"
      next_page:
        description: "The url of the previous page"
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        description: "The url of the next page"
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  TargetBasecamp:
    properties:
      message_id:
        description: "Can be filled if it is a \"message\" resource"
        type: "string"
      password:
        description: "The 37Signals password for the Basecamp account (only writable)"
        type: "string"
      project_id:
        description: "The ID of the project in Basecamp where updates should be pushed"
        type: "string"
      resource:
        description: "\"todo\" or \"message\""
        type: "string"
      target_url:
        description: "The URL of your Basecamp account, including protocol and path"
        type: "string"
      todo_list_id:
        description: "Can be filled if it is a \"todo\" resource"
        type: "string"
      token:
        description: "Get the API token from My info > Show your tokens > Token for feed readers or the Basecamp API in your Basecamp account"
        type: "string"
      username:
        description: "The 37Signals username of the account you use to log in to Basecamp"
        type: "string"
    required:
    - "target_url"
    - "token"
    - "project_id"
    - "resource"
    type: "object"
  TargetCampfire:
    properties:
      preserve_format:
        type: "boolean"
      room:
        type: "string"
      ssl:
        type: "boolean"
      subdomain:
        type: "string"
      token:
        type: "string"
    required:
    - "subdomain"
    - "room"
    - "token"
    type: "object"
  TargetClickatell:
    properties:
      api_id:
        type: "string"
      attribute:
        description: "Read-only"
        type: "string"
      from:
        type: "string"
      method:
        description: "Read-only"
        type: "string"
      password:
        description: "only writable"
        type: "string"
      target_url:
        description: "Read-only"
        type: "string"
      to:
        type: "string"
      us_small_business_account:
        type: "string"
      username:
        type: "string"
    required:
    - "username"
    - "password"
    - "api_id"
    - "to"
    type: "object"
  TargetCommonFields:
    properties:
      active:
        description: "Whether or not the target is activated"
        type: "boolean"
      created_at:
        description: "The time the target was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      title:
        description: "A name for the target"
        type: "string"
      type:
        description: "A pre-defined target, such as \"basecamp_target\". See the additional attributes for the type that follow"
        type: "string"
    required:
    - "title"
    - "type"
    type: "object"
  TargetEmail:
    properties:
      email:
        type: "string"
      subject:
        type: "string"
    required:
    - "email"
    - "subject"
    type: "object"
  TargetFailureObject:
    example:
      consecutive_failure_count: 1
      created_at: "2017-09-05T10:38:52Z"
      id: 6001326
      raw_request: "GET /api/v2/tickets.json HTTP/1.1\r\nUser-Agent: Zendesk Target\r\n ..."
      raw_response: "HTTP/1.1 401 Unauthorized\r\nServer: nginx\r\n ..."
      status_code: 401
      target_name: "My URL Target"
      url: "https://example.zendesk.com/api/v2/target_failures/6001326.json"
    properties:
      consecutive_failure_count:
        description: "Number of times the target failed consecutively"
        readOnly: true
        type: "integer"
      created_at:
        description: "Time of the failure"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "The ID of the target failure"
        readOnly: true
        type: "integer"
      raw_request:
        description: "The raw message of the target request"
        readOnly: true
        type: "string"
      raw_response:
        description: "The raw response of the failure"
        readOnly: true
        type: "string"
      status_code:
        description: "HTTP status code of the target failure"
        readOnly: true
        type: "integer"
      target_name:
        description: "Name of the target failure"
        readOnly: true
        type: "string"
      url:
        description: "The API url of the failure record"
        readOnly: true
        type: "string"
    type: "object"
  TargetFailureResponse:
    properties:
      target_failure:
        $ref: "#/definitions/TargetFailureObject"
    type: "object"
  TargetFailuresResponse:
    properties:
      target_failures:
        items:
          $ref: "#/definitions/TargetFailureObject"
        type: "array"
    type: "object"
  TargetFlowdock:
    properties:
      api_token:
        type: "string"
    required:
    - "api_token"
    type: "object"
  TargetGetSatisfaction:
    properties:
      account_name:
        type: "string"
      email:
        type: "string"
      password:
        description: "only writable"
        type: "string"
      target_url:
        type: "string"
    required:
    - "email"
    - "password"
    - "account_name"
    type: "object"
  TargetHTTP:
    properties:
      content_type:
        description: "\"application/json\", \"application/xml\", or \"application/x-www-form-urlencoded\""
        type: "string"
      method:
        description: "\"get\", \"patch\", \"put\", \"post\", or \"delete\""
        type: "string"
      password:
        description: "only writable"
        type: "string"
      target_url:
        type: "string"
      username:
        type: "string"
    required:
    - "target_url"
    - "method"
    - "content_type"
    type: "object"
  TargetJira:
    properties:
      password:
        description: "only writable"
        type: "string"
      target_url:
        type: "string"
      username:
        type: "string"
    required:
    - "target_url"
    - "username"
    - "password"
    type: "object"
  TargetObject:
    additionalProperties: true
    allOf:
    - $ref: "#/definitions/TargetCommonFields"
    - {}
    example:
      active: false
      created_at: "2012-02-20T22:55:29Z"
      id: 88335
      title: "basecamp target"
      type: "basecamp_target"
      url: "https://company.zendesk.com/api/v2/targets/88335.json"
    type: "object"
  TargetPivotal:
    properties:
      owner_by:
        type: "string"
      project_id:
        type: "string"
      requested_by:
        type: "string"
      story_labels:
        type: "string"
      story_title:
        type: "string"
      story_type:
        type: "string"
      token:
        type: "string"
    required:
    - "token"
    - "project_id"
    - "story_type"
    - "story_title"
    type: "object"
  TargetResponse:
    properties:
      target:
        $ref: "#/definitions/TargetObject"
    type: "object"
  TargetTwitter:
    properties:
      secret:
        description: "only writable"
        type: "string"
      token:
        type: "string"
    type: "object"
  TargetURL:
    properties:
      attribute:
        type: "string"
      method:
        description: "\"get\""
        type: "string"
      password:
        description: "only writable"
        type: "string"
      target_url:
        type: "string"
      username:
        type: "string"
    required:
    - "target_url"
    - "attribute"
    type: "object"
  TargetYammer:
    properties:
      group_id:
        type: "string"
      token:
        type: "string"
    type: "object"
  TargetsResponse:
    properties:
      targets:
        items:
          $ref: "#/definitions/TargetObject"
        type: "array"
    type: "object"
  TicketAuditObject:
    example:
      author_id: 35436
      created_at: "2009-07-20T22:55:29Z"
      events:
      - attachments: []
        body: "Thanks for your help!"
        id: 1564245
        public: true
        type: "Comment"
      - body: "Ticket #47 has been updated"
        id: 1564246
        subject: "Your ticket has been updated"
        type: "Notification"
      id: 35436
      metadata:
        custom:
          time_spent: "3m22s"
        system:
          ip_address: "184.106.40.75"
      ticket_id: 47
      via:
        channel: "web"
    properties:
      author_id:
        description: "The user who created the audit"
        readOnly: true
        type: "integer"
      created_at:
        description: "The time the audit was created"
        format: "date-time"
        readOnly: true
        type: "string"
      events:
        description: "An array of the events that happened in this audit. See the [Ticket Audit events reference](/documentation/ticketing/reference-guides/ticket-audit-events-reference)"
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      id:
        description: "Automatically assigned when creating audits"
        readOnly: true
        type: "integer"
      metadata:
        additionalProperties: true
        description: "Metadata for the audit, custom and system data"
        readOnly: true
        type: "object"
      ticket_id:
        description: "The ID of the associated ticket"
        readOnly: true
        type: "integer"
      via:
        $ref: "#/definitions/TicketAuditViaObject"
    type: "object"
  TicketAuditResponse:
    properties:
      audit:
        $ref: "#/definitions/TicketAuditObject"
    type: "object"
  TicketAuditViaObject:
    description: "Describes how the object was created. See the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference)"
    properties:
      channel:
        description: "This tells you how the ticket or event was created. Examples: \"web\", \"mobile\", \"rule\", \"system\""
        readOnly: true
        type: "string"
      source:
        additionalProperties: true
        description: "For some channels a source object gives more information about how or why the ticket or event was created"
        readOnly: true
        type: "object"
    type: "object"
  TicketAuditsCountResponse:
    properties:
      count:
        properties:
          refreshed_at:
            format: "date-time"
            type: "string"
          value:
            type: "integer"
        type: "object"
    type: "object"
  TicketAuditsResponse:
    properties:
      after_cursor:
        readOnly: true
        type: "string"
      after_url:
        readOnly: true
        type: "string"
      audits:
        items:
          $ref: "#/definitions/TicketAuditObject"
        type: "array"
      before_cursor:
        readOnly: true
        type: "string"
      before_url:
        readOnly: true
        type: "string"
    type: "object"
  TicketAuditsResponseNoneCursor:
    properties:
      audits:
        items:
          $ref: "#/definitions/TicketAuditObject"
        type: "array"
      count:
        readOnly: true
        type: "integer"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
    type: "object"
  TicketBulkImportRequest:
    properties:
      tickets:
        items:
          $ref: "#/definitions/TicketImportInput"
        type: "array"
    type: "object"
  TicketChatCommentRedactionResponse:
    example:
      chat_event:
        id: 1932802680168
        type: "ChatStartedEvent"
        value:
          chat_id: "2109.10502823.Sjuj2YrBpXwei"
          history:
          - actor_id: 1900448983828
            actor_name: "Visitor 36044085"
            actor_type: "end-user"
            chat_index: 0
            timestamp: 1632470783218
            type: "ChatJoin"
          visitor_id: "10502823-16EkM3T6VNq7KMd"
    properties:
      chat_event:
        description: "Chat event object"
        properties:
          id:
            description: "Id assigned to the chat event object"
            readOnly: true
            type: "integer"
          type:
            description: "Type of chat event"
            readOnly: true
            type: "string"
          value:
            description: "The value of the chat event object"
            properties:
              chat_id:
                description: "Id of the chat session"
                readOnly: true
                type: "string"
              history:
                description: "Chat events within the chat session"
                items:
                  additionalProperties: true
                  type: "object"
                type: "array"
              visitor_id:
                description: "Id assigned to the visitor"
                readOnly: true
                type: "string"
            readOnly: true
            type: "object"
        readOnly: true
        type: "object"
    type: "object"
  TicketCommentObject:
    example:
      attachments:
      - content_type: "text/plain"
        content_url: "https://company.zendesk.com/attachments/crash.log"
        file_name: "crash.log"
        id: 498483
        size: 2532
        thumbnails: []
      author_id: 123123
      body: "Thanks for your help!"
      created_at: "2009-07-20T22:55:29Z"
      id: 1274
      metadata:
        system:
          client: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36"
          ip_address: "1.1.1.1"
          latitude: -37
          location: "Melbourne, 07, Australia"
          longitude: 144
        via:
          channel: "web"
          source:
            from: {}
            rel: "web_widget"
            to: {}
      public: true
      type: "Comment"
    properties:
      attachments:
        description: "Attachments, if any. See [Attachment](/api-reference/ticketing/tickets/ticket-attachments/)"
        items:
          $ref: "#/definitions/AttachmentObject"
        readOnly: true
        type: "array"
      audit_id:
        description: "The id of the ticket audit record. See [Show Audit](/api-reference/ticketing/tickets/ticket_audits/#show-audit)"
        readOnly: true
        type: "integer"
      author_id:
        description: "The id of the comment author. See [Author id](#author-id)"
        type: "integer"
      body:
        description: "The comment string. See [Bodies](#bodies)"
        type: "string"
      created_at:
        description: "The time the comment was created"
        format: "date-time"
        readOnly: true
        type: "string"
      html_body:
        description: "The comment formatted as HTML. See [Bodies](#bodies)"
        type: "string"
      id:
        description: "Automatically assigned when the comment is created"
        readOnly: true
        type: "integer"
      metadata:
        additionalProperties: true
        description: "System information (web client, IP address, etc.) and comment flags, if any. See [Comment flags](#comment-flags)"
        readOnly: true
        type: "object"
      plain_body:
        description: "The comment presented as plain text. See [Bodies](#bodies)"
        readOnly: true
        type: "string"
      public:
        description: "true if a public comment; false if an internal note. The initial value set on ticket creation persists for any additional comment unless you change it"
        type: "boolean"
      type:
        description: "`Comment` or `VoiceComment`. The JSON object for adding voice comments to tickets is different. See [Adding voice comments to tickets](/documentation/ticketing/managing-tickets/adding-voice-comments-to-tickets)"
        readOnly: true
        type: "string"
      uploads:
        description: "List of tokens received from [uploading files](/api-reference/ticketing/tickets/ticket-attachments/#upload-files) for comment attachments. The files are attached by creating or updating tickets with the tokens. See [Attaching files](/api-reference/ticketing/tickets/tickets/#attaching-files) in Tickets"
        items:
          type: "string"
        type: "array"
      via:
        $ref: "#/definitions/TicketAuditViaObject"
    type: "object"
  TicketCommentResponse:
    properties:
      comment:
        $ref: "#/definitions/TicketCommentObject"
    type: "object"
  TicketCommentsCountResponse:
    properties:
      count:
        properties:
          refreshed_at:
            format: "date-time"
            type: "string"
          value:
            type: "integer"
        type: "object"
    type: "object"
  TicketCommentsResponse:
    properties:
      comments:
        items:
          $ref: "#/definitions/TicketCommentObject"
        type: "array"
    type: "object"
  TicketCreateInput:
    properties:
      additional_collaborators:
        description: "An array of numeric IDs, emails, or objects containing name and email properties. See [Setting Collaborators](/api-reference/ticketing/tickets/tickets/#setting-collaborators). An email notification is sent to them when the ticket is updated"
        items:
          $ref: "#/definitions/CollaboratorObject"
        type: "array"
      assignee_email:
        description: "The email address of the agent to assign the ticket to"
        format: "email"
        type: "string"
      assignee_id:
        description: "The agent currently assigned to the ticket"
        type: "integer"
      attribute_value_ids:
        description: "An array of the IDs of attribute values to be associated with the ticket"
        items:
          type: "integer"
        type: "array"
      brand_id:
        description: "Enterprise only. The id of the brand this ticket is associated with"
        type: "integer"
      collaborator_ids:
        description: "The ids of users currently CC'ed on the ticket"
        items:
          type: "integer"
        type: "array"
      comment:
        $ref: "#/definitions/TicketCommentObject"
      custom_fields:
        description: "Custom fields for the ticket. See [Setting custom field values](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-custom-field-values)"
        items:
          $ref: "#/definitions/CustomFieldObject"
        type: "array"
      custom_status_id:
        description: "The custom ticket status id of the ticket. See [custom ticket statuses](#custom-ticket-statuses)"
        type: "integer"
      due_at:
        description: "If this is a ticket of type \"task\" it has a due date.  Due date format uses [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format."
        format: "date-time"
        type: "string"
        x-nullable: true
      email_ccs:
        description: "An array of objects that represent agent or end users email CCs to add or delete from the ticket. See [Setting email CCs](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-email-ccs)"
        items:
          $ref: "#/definitions/EmailCCObject"
        type: "array"
      external_id:
        description: "An id you can use to link Zendesk Support tickets to local records"
        type: "string"
      followers:
        description: "An array of objects that represent agent followers to add or delete from the ticket. See [Setting followers](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-followers)"
        items:
          $ref: "#/definitions/FollowerObject"
        type: "array"
      group_id:
        description: "The group this ticket is assigned to"
        type: "integer"
      organization_id:
        description: "The organization of the requester. You can only specify the ID of an organization associated with the requester. See [Organization Memberships](/api-reference/ticketing/organizations/organization_memberships/)"
        type: "integer"
      priority:
        description: "The urgency with which the ticket should be addressed."
        enum:
        - "urgent"
        - "high"
        - "normal"
        - "low"
        type: "string"
      problem_id:
        description: "For tickets of type \"incident\", the ID of the problem the incident is linked to"
        type: "integer"
      requester_id:
        description: "The user who requested this ticket"
        type: "integer"
      safe_update:
        description: "Optional boolean. Prevents updates with outdated ticket data (`updated_stamp` property required when true)"
        type: "boolean"
      sharing_agreement_ids:
        description: "An array of the numeric IDs of sharing agreements. Note that this replaces any existing agreements"
        items:
          type: "integer"
        type: "array"
      status:
        description: "The state of the ticket.\n\nIf your account has activated custom ticket statuses, this is the ticket's\nstatus category. See [custom ticket statuses](#custom-ticket-statuses).\n"
        enum:
        - "new"
        - "open"
        - "pending"
        - "hold"
        - "solved"
        - "closed"
        type: "string"
      subject:
        description: "The value of the subject field for this ticket"
        type: "string"
      tags:
        description: "The array of tags applied to this ticket"
        items:
          type: "string"
        type: "array"
      type:
        description: "The type of this ticket."
        enum:
        - "problem"
        - "incident"
        - "question"
        - "task"
        type: "string"
      updated_stamp:
        description: "Datetime of last update received from API. See the safe_update property"
        format: "date-time"
        type: "string"
      collaborators:
        description: "POST requests only. Users to add as cc's when creating a ticket. See [Setting Collaborators](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-collaborators)"
        items:
          $ref: "#/definitions/CollaboratorObject"
        type: "array"
      email_cc_ids:
        description: "The ids of agents or end users currently CC'ed on the ticket. See [CCs and followers resources](https://support.zendesk.com/hc/en-us/articles/360020585233) in the Support Help Center"
        items:
          type: "integer"
        type: "array"
      follower_ids:
        description: "The ids of agents currently following the ticket. See [CCs and followers resources](https://support.zendesk.com/hc/en-us/articles/360020585233)"
        items:
          type: "integer"
        type: "array"
      macro_ids:
        description: "POST requests only. List of macro IDs to be recorded in the ticket audit"
        items:
          type: "integer"
        type: "array"
      raw_subject:
        description: "The dynamic content placeholder, if present, or the \"subject\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)\n"
        type: "string"
      recipient:
        description: "The original recipient e-mail address of the ticket"
        type: "string"
      submitter_id:
        description: "The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket"
        type: "integer"
      ticket_form_id:
        description: "Enterprise only. The id of the ticket form to render for the ticket"
        type: "integer"
      via:
        $ref: "#/definitions/ViaObject"
      via_followup_source_id:
        description: "POST requests only. The id of a closed ticket when creating a follow-up ticket. See [Creating a follow-up ticket](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#creating-a-follow-up-ticket)"
        type: "integer"
    type: "object"
    required:
    - comment
    example:
      comment:
        body: "The smoke is very colorful."
      priority: "urgent"
      subject: "My printer is on fire!"
    type: "object"
  TicketCreateRequest:
    properties:
      ticket:
        $ref: "#/definitions/TicketCreateInput"
    type: "object"
  TicketCreateVoicemailTicketInput:
    properties:
      comment:
        $ref: "#/definitions/TicketCommentObject"
      priority:
        description: "The urgency with which the ticket should be addressed."
        enum:
        - "urgent"
        - "high"
        - "normal"
        - "low"
        type: "string"
      via_id:
        description: "Required for Create Ticket operation"
        enum:
        - 44
        - 45
        - 46
        type: "integer"
      voice_comment:
        allOf:
        - $ref: "#/definitions/TicketCreateVoicemailTicketVoiceCommentInput"
        description: "Required if creating voicemail ticket"
        type: "object"
    type: "object"
  TicketCreateVoicemailTicketRequest:
    properties:
      display_to_agent:
        description: "Optional value such as the ID of the agent that will see the newly created ticket."
        type: "integer"
      ticket:
        allOf:
        - $ref: "#/definitions/TicketCreateVoicemailTicketInput"
        description: "Ticket object that lists the values to set when the ticket is created"
        type: "object"
    type: "object"
  TicketCreateVoicemailTicketVoiceCommentInput:
    properties:
      answered_by_id:
        description: "The agent who answered the call"
        type: "integer"
      call_duration:
        description: "Duration in seconds of the call"
        type: "integer"
      from:
        description: "Incoming phone number"
        type: "string"
      location:
        description: "Location of the caller (optional)"
        type: "string"
      recording_url:
        description: "Incoming phone number"
        type: "string"
      started_at:
        description: "[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the call starting time"
        format: "date-time"
        type: "string"
      to:
        description: "Dialed phone number"
        type: "string"
      transcription_text:
        description: "Transcription of the call (optional)"
        type: "string"
    type: "object"
  TicketFieldCountResponse:
    properties:
      count:
        properties:
          refreshed_at:
            format: "date-time"
            type: "string"
          value:
            type: "integer"
        type: "object"
    type: "object"
  TicketFieldCustomStatusObject:
    properties:
      active:
        description: "If true, if the custom status is set to active. If false, the custom status is set to inactive"
        type: "boolean"
      agent_label:
        description: "The label displayed to agents"
        type: "string"
      created_at:
        description: "The date and time at which the custom ticket status was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "If true, the custom status is set to default. If false, the custom status is set to non-default"
        type: "boolean"
      description:
        description: "The description of when the user should select this custom ticket status"
        type: "string"
      end_user_description:
        description: "The description displayed to end users"
        type: "string"
      end_user_label:
        description: "The label displayed to end users"
        type: "string"
      id:
        description: "Automatically assigned when the custom ticket status is created"
        readOnly: true
        type: "integer"
      status_category:
        description: "The status category the custom ticket status belongs to"
        enum:
        - "new"
        - "open"
        - "pending"
        - "hold"
        - "solved"
        type: "string"
      updated_at:
        description: "The date and time at which the custom ticket status was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
    type: "object"
  TicketFieldObject:
    example:
      active: true
      agent_description: "This is the agent only description for the subject field"
      collapsed_for_agents: false
      created_at: "2009-07-20T22:55:29Z"
      description: "This is the subject field of a ticket"
      editable_in_portal: true
      id: 34
      position: 21
      raw_description: "This is the subject field of a ticket"
      raw_title: "{{dc.my_title}}"
      raw_title_in_portal: "{{dc.my_title_in_portal}}"
      regexp_for_validation: null
      removable: false
      required: true
      required_in_portal: true
      tag: null
      title: "Subject"
      title_in_portal: "Subject"
      type: "subject"
      updated_at: "2011-05-05T10:38:52Z"
      url: "https://company.zendesk.com/api/v2/ticket_fields/34.json"
      visible_in_portal: true
    properties:
      active:
        description: "Whether this field is available"
        type: "boolean"
      agent_description:
        description: "A description of the ticket field that only agents can see"
        type: "string"
      collapsed_for_agents:
        description: "If true, the field is shown to agents by default. If false, the field is hidden alongside infrequently used fields. Classic interface only"
        type: "boolean"
      created_at:
        description: "The time the custom ticket field was created"
        format: "date-time"
        readOnly: true
        type: "string"
      creator_app_name:
        description: "Name of the app that created the ticket field, or a null value if no app created the ticket field"
        type: "string"
      creator_user_id:
        description: "The id of the user that created the ticket field, or a value of \"-1\" if an app created the ticket field"
        type: "integer"
      custom_field_options:
        description: "Required and presented for a custom ticket field of type \"multiselect\" or \"tagger\""
        items:
          $ref: "#/definitions/CustomFieldOptionObject"
        type: "array"
      custom_statuses:
        description: "List of customized ticket statuses. Only presented for a system ticket field of type \"custom_status\""
        items:
          $ref: "#/definitions/TicketFieldCustomStatusObject"
        readOnly: true
        type: "array"
      description:
        description: "Describes the purpose of the ticket field to users"
        type: "string"
      editable_in_portal:
        description: "Whether this field is editable by end users in Help Center"
        type: "boolean"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      position:
        description: "The relative position of the ticket field on a ticket. Note that for accounts with ticket forms, positions are controlled by the different forms"
        type: "integer"
      raw_description:
        description: "The dynamic content placeholder if present, or the `description` value if not. See [Dynamic Content](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      raw_title:
        description: "The dynamic content placeholder if present, or the `title` value if not. See [Dynamic Content](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      raw_title_in_portal:
        description: "The dynamic content placeholder if present, or the \"title_in_portal\" value if not. See [Dynamic Content](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      regexp_for_validation:
        description: "For \"regexp\" fields only. The validation pattern for a field value to be deemed valid"
        type: "string"
        x-nullable: true
      relationship_filter:
        description: "A filter definition that allows your autocomplete to filter down results"
        type: "object"
      relationship_target_type:
        description: "A representation of what type of object the field references. Options are \"zen:user\", \"zen:organization\", \"zen:ticket\", or \"zen:custom_object:{key}\" where key is a custom object key. For example \"zen:custom_object:apartment\"."
        type: "string"
      removable:
        description: "If false, this field is a system field that must be present on all tickets"
        readOnly: true
        type: "boolean"
      required:
        description: "If true, agents must enter a value in the field to change the ticket status to solved"
        type: "boolean"
      required_in_portal:
        description: "If true, end users must enter a value in the field to create the request"
        type: "boolean"
      sub_type_id:
        description: "For system ticket fields of type \"priority\" and \"status\". Defaults to 0. A \"priority\" sub type of 1 removes the \"Low\" and \"Urgent\" options. A \"status\" sub type of 1 adds the \"On-Hold\" option"
        type: "integer"
      system_field_options:
        description: "Presented for a system ticket field of type \"tickettype\", \"priority\" or \"status\""
        items:
          $ref: "#/definitions/SystemFieldOptionObject"
        readOnly: true
        type: "array"
      tag:
        description: "For \"checkbox\" fields only. A tag added to tickets when the checkbox field is selected"
        type: "string"
        x-nullable: true
      title:
        description: "The title of the ticket field"
        type: "string"
      title_in_portal:
        description: "The title of the ticket field for end users in Help Center"
        type: "string"
      type:
        description: "System or custom field type. Editable for custom field types and only on creation. See [Create Ticket Field](#create-ticket-field)"
        type: "string"
      updated_at:
        description: "The time the custom ticket field was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The URL for this resource"
        readOnly: true
        type: "string"
      visible_in_portal:
        description: "Whether this field is visible to end users in Help Center"
        type: "boolean"
    required:
    - "type"
    - "title"
    type: "object"
  TicketFieldResponse:
    properties:
      ticket_field:
        $ref: "#/definitions/TicketFieldObject"
    type: "object"
  TicketFieldsResponse:
    properties:
      ticket_fields:
        items:
          $ref: "#/definitions/TicketFieldObject"
        type: "array"
    type: "object"
  TicketFormObject:
    example:
      active: true
      agent_conditions:
      - child_fields:
        - id: 101
          is_required: false
          required_on_statuses:
            statuses:
            - "new"
            - "open"
            - "pending"
            - "hold"
            type: "SOME_STATUSES"
        - id: 200
          is_required: true
          required_on_statuses:
            statuses:
            - "solved"
            type: "SOME_STATUSES"
        parent_field_id: 100
        value: "matching_value"
      - child_fields:
        - id: 102
          is_required: true
          required_on_statuses:
            type: "ALL_STATUSES"
        - id: 200
          is_required: false
          required_on_statuses:
            type: "NO_STATUSES"
        parent_field_id: 101
        value: "matching_value_2"
      created_at: "2012-04-02T22:55:29Z"
      default: true
      display_name: "Snowboard Damage"
      end_user_conditions:
      - child_fields:
        - id: 101
          is_required: true
        parent_field_id: 100
        value: "matching_value"
      - child_fields:
        - id: 202
          is_required: false
        parent_field_id: 200
        value: "matching_value"
      end_user_visible: true
      id: 47
      in_all_brands: false
      name: "Snowboard Problem"
      position: 9999
      raw_display_name: "{{dc.my_display_name}}"
      raw_name: "Snowboard Problem"
      restricted_brand_ids:
      - 47
      - 33
      - 22
      ticket_field_ids:
      - 2
      - 4
      - 5
      - 10
      - 100
      - 101
      - 102
      - 200
      updated_at: "2012-04-02T22:55:29Z"
      url: "https://company.zendesk.com/api/v2/ticket_forms/47.json"
    properties:
      active:
        description: "If the form is set as active"
        type: "boolean"
      agent_conditions:
        description: "Array of condition sets for agent workspaces"
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      created_at:
        description: "The time the ticket form was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "Is the form the default form for this account"
        type: "boolean"
      display_name:
        description: "The name of the form that is displayed to an end user"
        type: "string"
      end_user_conditions:
        description: "Array of condition sets for end user products"
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      end_user_visible:
        description: "Is the form visible to the end user"
        type: "boolean"
      id:
        description: "Automatically assigned when creating ticket form"
        readOnly: true
        type: "integer"
      in_all_brands:
        description: "Is the form available for use in all brands on this account"
        type: "boolean"
      name:
        description: "The name of the form"
        type: "string"
      position:
        description: "The position of this form among other forms in the account, i.e. dropdown"
        type: "integer"
      raw_display_name:
        description: "The dynamic content placeholder, if present, or the \"display_name\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      raw_name:
        description: "The dynamic content placeholder, if present, or the \"name\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)"
        type: "string"
      restricted_brand_ids:
        description: "ids of all brands that this ticket form is restricted to"
        items:
          type: "integer"
        readOnly: true
        type: "array"
      ticket_field_ids:
        description: "ids of all ticket fields which are in this ticket form. The products use the order of the ids to show the field values in the tickets"
        items:
          type: "integer"
        type: "array"
      updated_at:
        description: "The time of the last update of the ticket form"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "URL of the ticket form"
        readOnly: true
        type: "string"
    required:
    - "name"
    type: "object"
  TicketFormResponse:
    properties:
      ticket_form:
        $ref: "#/definitions/TicketFormObject"
    type: "object"
  TicketFormsResponse:
    properties:
      ticket_forms:
        items:
          $ref: "#/definitions/TicketFormObject"
        type: "array"
    type: "object"
  TicketImportInput:
    properties:
      tags:
        description: "The array of tags applied to this ticket"
        items:
          type: "string"
        type: "array"
      assignee_id:
        description: "The agent currently assigned to the ticket"
        type: "integer"
      comments:
        description: "The conversation between requesters, collaborators, and agents"
        items:
          allOf:
          - properties:
              value:
                description: "The comment string value"
                type: "string"
            type: "object"
          - $ref: "#/definitions/TicketCommentObject"
        type: "array"
      description:
        description: "Read-only first comment on the ticket. When [creating a ticket](#create-ticket), use `comment` to set the description. See [Description and first comment](#description-and-first-comment)"
        type: "string"
      requester_id:
        description: "The user who requested this ticket"
        type: "integer"
      subject:
        description: "The value of the subject field for this ticket"
        type: "string"
    type: "object"
  TicketImportRequest:
    properties:
      ticket:
        $ref: "#/definitions/TicketImportInput"
    type: "object"
  TicketMergeInput:
    properties:
      ids:
        description: "Ids of tickets to merge into the target ticket"
        items:
          type: "integer"
        type: "array"
      source_comment:
        description: "Private comment to add to the source ticket"
        type: "string"
      source_comment_is_public:
        description: "Whether comment in source tickets are public or private"
        type: "boolean"
      target_comment:
        description: "Private comment to add to the target ticket"
        type: "string"
      target_comment_is_public:
        description: "Whether comment in target ticket is public or private"
        type: "boolean"
    required:
    - "ids"
    type: "object"
  TicketMetricEventBaseObject:
    example:
      id: 926256957613
      instance_id: 1
      metric: "agent_work_time"
      ticket_id: 155
      time: "2020-10-26T12:53:12Z"
      type: "measure"
    properties:
      id:
        description: "Automatically assigned when the record is created"
        readOnly: true
        type: "integer"
      instance_id:
        description: "The instance of the metric associated with the event. See [instance_id](#instance_id)"
        readOnly: true
        type: "integer"
      metric:
        description: "The metric being tracked"
        enum:
        - "agent_work_time"
        - "pausable_update_time"
        - "periodic_update_time"
        - "reply_time"
        - "requester_wait_time"
        - "resolution_time"
        - "group_ownership_time"
        readOnly: true
        type: "string"
      ticket_id:
        description: "Id of the associated ticket"
        readOnly: true
        type: "integer"
      time:
        description: "The time the event occurred"
        format: "date-time"
        readOnly: true
        type: "string"
      type:
        description: "The type of the metric event. See [Ticket metric event types reference](/documentation/ticketing/reference-guides/ticket-metric-event-types-reference)"
        enum:
        - "activate"
        - "pause"
        - "fulfill"
        - "apply_sla"
        - "apply_group_sla"
        - "breach"
        - "update_status"
        - "measure"
        readOnly: true
        type: "string"
    title: "Ticket Metric Events"
    type: "object"
  TicketMetricEventBreachObject:
    allOf:
    - $ref: "#/definitions/TicketMetricEventBaseObject"
    - properties:
        deleted:
          description: "Available if `type` is `breach`. In general, you can ignore any breach event when `deleted` is true. See [deleted](#deleted)"
          readOnly: true
          type: "boolean"
      type: "object"
    title: "Ticket Metric Event"
    type: "object"
  TicketMetricEventGroupSLAObject:
    allOf:
    - $ref: "#/definitions/TicketMetricEventBaseObject"
    - properties:
        group_sla:
          description: "Available if `type` is \"apply_group_sla\". The Group SLA policy and target being enforced on the ticket and metric in question, if any. See [group_sla](#group_sla)"
          readOnly: true
          type: "object"
      type: "object"
    title: "Ticket Metric Event"
    type: "object"
  TicketMetricEventSLAObject:
    allOf:
    - $ref: "#/definitions/TicketMetricEventBaseObject"
    - properties:
        sla:
          description: "Available if `type` is `apply_sla`. The SLA policy and target being enforced on the ticket and metric in question, if any. See [sla](#sla)"
          readOnly: true
          type: "object"
      type: "object"
    title: "Ticket Metric Event"
    type: "object"
  TicketMetricEventUpdateStatusObject:
    allOf:
    - $ref: "#/definitions/TicketMetricEventBaseObject"
    - properties:
        status:
          description: "Available if `type` is `update_status`. Minutes since the metric has been open. See [status](#status)"
          readOnly: true
          type: "object"
      type: "object"
    title: "Ticket Metric Event"
    type: "object"
  TicketMetricEventsResponse:
    allOf:
    - properties:
        ticket_metric_events:
          items:
            $ref: "#/definitions/TicketMetricEventBaseObject"
          type: "array"
      type: "object"
    - properties:
        count:
          type: "integer"
        end_time:
          type: "integer"
        next_page:
          type: "string"
      type: "object"
    type: "object"
  TicketMetricObject:
    example:
      agent_wait_time_in_minutes:
        business: 737
        calendar: 2391
      assigned_at: "2011-05-05T10:38:52Z"
      assignee_stations: 1
      assignee_updated_at: "2011-05-06T10:38:52Z"
      created_at: "2009-07-20T22:55:29Z"
      custom_status_updated_at: "2011-05-09T10:38:52Z"
      first_resolution_time_in_minutes:
        business: 737
        calendar: 2391
      full_resolution_time_in_minutes:
        business: 737
        calendar: 2391
      group_stations: 7
      id: 33
      initially_assigned_at: "2011-05-03T10:38:52Z"
      latest_comment_added_at: "2011-05-09T10:38:52Z"
      on_hold_time_in_minutes:
        business: 637
        calendar: 2290
      reopens: 55
      replies: 322
      reply_time_in_minutes:
        business: 737
        calendar: 2391
      reply_time_in_seconds:
        calendar: 143460
      requester_updated_at: "2011-05-07T10:38:52Z"
      requester_wait_time_in_minutes:
        business: 737
        calendar: 2391
      solved_at: "2011-05-09T10:38:52Z"
      status_updated_at: "2011-05-04T10:38:52Z"
      ticket_id: 4343
      updated_at: "2011-05-05T10:38:52Z"
    properties:
      agent_wait_time_in_minutes:
        allOf:
        - $ref: "#/definitions/TicketMetricTimeObject"
        description: "Number of minutes the agent spent waiting during calendar and business hours"
        readOnly: true
        type: "object"
      assigned_at:
        description: "When the ticket was assigned"
        format: "date-time"
        readOnly: true
        type: "string"
      assignee_stations:
        description: "Number of assignees the ticket had"
        readOnly: true
        type: "integer"
      assignee_updated_at:
        description: "When the assignee last updated the ticket"
        format: "date-time"
        readOnly: true
        type: "string"
      created_at:
        description: "When the record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      custom_status_updated_at:
        description: "The date and time the ticket's custom status was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      first_resolution_time_in_minutes:
        allOf:
        - $ref: "#/definitions/TicketMetricTimeObject"
        description: "Number of minutes to the first resolution time during calendar and business hours"
        readOnly: true
        type: "object"
      full_resolution_time_in_minutes:
        allOf:
        - $ref: "#/definitions/TicketMetricTimeObject"
        description: "Number of minutes to the full resolution during calendar and business hours"
        readOnly: true
        type: "object"
      group_stations:
        description: "Number of groups the ticket passed through"
        readOnly: true
        type: "integer"
      id:
        description: "Automatically assigned when the client is created"
        readOnly: true
        type: "integer"
      initially_assigned_at:
        description: "When the ticket was initially assigned"
        format: "date-time"
        readOnly: true
        type: "string"
      latest_comment_added_at:
        description: "When the latest comment was added"
        format: "date-time"
        readOnly: true
        type: "string"
      on_hold_time_in_minutes:
        allOf:
        - $ref: "#/definitions/TicketMetricTimeObject"
        description: "Number of minutes on hold"
        readOnly: true
        type: "object"
      reopens:
        description: "Total number of times the ticket was reopened"
        readOnly: true
        type: "integer"
      replies:
        description: "The number of public replies added to a ticket by an agent"
        readOnly: true
        type: "integer"
      reply_time_in_minutes:
        allOf:
        - $ref: "#/definitions/TicketMetricTimeObject"
        description: "Number of minutes to the first reply during calendar and business hours"
        readOnly: true
        type: "object"
      reply_time_in_seconds:
        allOf:
        - $ref: "#/definitions/TicketMetricTimeObject"
        description: "Number of seconds to the first reply during calendar hours, only available for Messaging tickets"
        readOnly: true
        type: "object"
      requester_updated_at:
        description: "When the requester last updated the ticket"
        format: "date-time"
        readOnly: true
        type: "string"
      requester_wait_time_in_minutes:
        allOf:
        - $ref: "#/definitions/TicketMetricTimeObject"
        description: "Number of minutes the requester spent waiting during calendar and business hours"
        readOnly: true
        type: "object"
      solved_at:
        description: "When the ticket was solved"
        format: "date-time"
        readOnly: true
        type: "string"
      status_updated_at:
        description: "When the status of the ticket was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      ticket_id:
        description: "Id of the associated ticket"
        readOnly: true
        type: "integer"
      updated_at:
        description: "When the record was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of the ticket metric"
        readOnly: true
        type: "string"
    type: "object"
  TicketMetricTimeObject:
    properties:
      business:
        description: "Time in business hours"
        readOnly: true
        type: "integer"
      calendar:
        description: "Time in calendar hours"
        readOnly: true
        type: "integer"
    type: "object"
  TicketMetricsByTicketMetricIdResponse:
    properties:
      ticket_metric:
        items:
          $ref: "#/definitions/TicketMetricObject"
        type: "array"
    type: "object"
  TicketMetricsResponse:
    properties:
      ticket_metrics:
        items:
          $ref: "#/definitions/TicketMetricObject"
        type: "array"
    type: "object"
  TicketObject:
    example:
      tags:
      - "enterprise"
      - "other_tag"
      assignee_id: 235323
      collaborator_ids:
      - 35334
      - 234
      created_at: "2009-07-20T22:55:29Z"
      custom_fields:
      - id: 27642
        value: "745"
      - id: 27648
        value: "yes"
      custom_status_id: 123
      description: "The fire is very colorful."
      due_at: null
      external_id: "ahg35h3jh"
      follower_ids:
      - 35334
      - 234
      from_messaging_channel: false
      group_id: 98738
      has_incidents: false
      id: 35436
      organization_id: 509974
      priority: "high"
      problem_id: 9873764
      raw_subject: "{{dc.printer_on_fire}}"
      recipient: "support@company.com"
      requester_id: 20978392
      satisfaction_rating:
        comment: "Great support!"
        id: 1234
        score: "good"
      sharing_agreement_ids:
      - 84432
      status: "open"
      subject: "Help, my printer is on fire!"
      submitter_id: 76872
      type: "incident"
      updated_at: "2011-05-05T10:38:52Z"
      url: "https://company.zendesk.com/api/v2/tickets/35436.json"
      via:
        channel: "web"
    properties:
      tags:
        description: "The array of tags applied to this ticket. Unless otherwise specified, the [set tag](/api-reference/ticketing/ticket-management/tags/#set-tags) behavior is used, which overwrites and replaces existing tags"
        items:
          type: "string"
        type: "array"
      allow_attachments:
        description: "Permission for agents to add add attachments to a comment. Defaults to true"
        readOnly: true
        type: "boolean"
      allow_channelback:
        description: "Is false if channelback is disabled, true otherwise. Only applicable for channels framework ticket"
        readOnly: true
        type: "boolean"
      assignee_email:
        description: "Write only. The email address of the agent to assign the ticket to"
        type: "string"
      assignee_id:
        description: "The agent currently assigned to the ticket"
        type: "integer"
      attribute_value_ids:
        description: "Write only. An array of the IDs of attribute values to be associated with the ticket"
        items:
          type: "integer"
        type: "array"
      brand_id:
        description: "The id of the brand this ticket is associated with. See [Setting up multiple brands](https://support.zendesk.com/hc/en-us/articles/4408829476378)"
        type: "integer"
      collaborator_ids:
        description: "The ids of users currently CC'ed on the ticket"
        items:
          type: "integer"
        type: "array"
      collaborators:
        description: "POST requests only. Users to add as cc's when creating a ticket. See [Setting Collaborators](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-collaborators)"
        items:
          $ref: "#/definitions/CollaboratorObject"
        type: "array"
      comment:
        description: "Write only. An object that adds a comment to the ticket. See [Ticket comments](/api-reference/ticketing/tickets/ticket_comments/). To include an attachment with the comment, see [Attaching files](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#attaching-files)"
        type: "object"
      created_at:
        description: "When this record was created"
        format: "date-time"
        readOnly: true
        type: "string"
      custom_fields:
        description: "Custom fields for the ticket. See [Setting custom field values](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-custom-field-values)"
        items:
          properties:
            id:
              description: "The id of the custom field"
              type: "integer"
            value:
              description: "The value of the custom field"
              type: "string"
          type: "object"
        type: "array"
      custom_status_id:
        description: "The custom ticket status id of the ticket. See [custom ticket statuses](#custom-ticket-statuses)"
        type: "integer"
      description:
        description: "Read-only first comment on the ticket. When [creating a ticket](#create-ticket), use `comment` to set the description. See [Description and first comment](#description-and-first-comment)\n"
        readOnly: true
        type: "string"
      due_at:
        description: "If this is a ticket of type \"task\" it has a due date.  Due date format uses [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format"
        format: "date-time"
        type: "string"
        x-nullable: true
      email_cc_ids:
        description: "The ids of agents or end users currently CC'ed on the ticket. See [CCs and followers resources](https://support.zendesk.com/hc/en-us/articles/360020585233) in the Support Help Center"
        items:
          type: "integer"
        type: "array"
      email_ccs:
        description: "Write only. An array of objects that represent agent or end users email CCs to add or delete from the ticket. See [Setting email CCs](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#setting-email-ccs)"
        type: "object"
      external_id:
        description: "An id you can use to link Zendesk Support tickets to local records"
        type: "string"
      fields:
        description: "Fields for the ticket"
        items:
          properties:
            id:
              description: "The id of the custom field"
              type: "integer"
            value:
              description: "The value of the custom field"
              type: "string"
          type: "object"
        type: "array"
      follower_ids:
        description: "The ids of agents currently following the ticket. See [CCs and followers resources](https://support.zendesk.com/hc/en-us/articles/360020585233)"
        items:
          type: "integer"
        type: "array"
      followers:
        description: "Write only. An array of objects that represent agent followers to add or delete from the ticket. See [Setting followers](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#setting-followers)"
        type: "object"
      followup_ids:
        description: "The ids of the followups created from this ticket. Ids are only visible once the ticket is closed"
        items:
          type: "integer"
        readOnly: true
        type: "array"
      forum_topic_id:
        description: "The topic in the Zendesk Web portal this ticket originated from, if any. The Web portal is deprecated"
        readOnly: true
        type: "integer"
      from_messaging_channel:
        description: "If true, the ticket's [via type](/documentation/ticketing/reference-guides/via-object-reference/) is a messaging channel."
        readOnly: true
        type: "boolean"
      generated_timestamp:
        description: "Generated timestamp"
        readOnly: true
        type: "integer"
      group_id:
        description: "The group this ticket is assigned to"
        type: "integer"
      has_incidents:
        description: "Is true if a ticket is a problem type and has one or more incidents linked to it. Otherwise, the value is false."
        readOnly: true
        type: "boolean"
      id:
        description: "Automatically assigned when the ticket is created"
        readOnly: true
        type: "integer"
      is_public:
        description: "Is true if any comments are public, false otherwise"
        readOnly: true
        type: "boolean"
      macro_id:
        description: "Write only. A macro ID to be recorded in the ticket audit"
        type: "integer"
      macro_ids:
        description: "POST requests only. List of macro IDs to be recorded in the ticket audit"
        items:
          type: "integer"
        type: "array"
      metadata:
        description: "Write only. Metadata for the audit. In the `audit` object, the data is specified in the `custom` property of the `metadata` object. See [Setting Metadata](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#setting-metadata)"
        type: "object"
      organization_id:
        description: "The organization of the requester. You can only specify the ID of an organization associated with the requester. See [Organization Memberships](/api-reference/ticketing/organizations/organization_memberships/)"
        type: "integer"
      priority:
        description: "The urgency with which the ticket should be addressed"
        enum:
        - "urgent"
        - "high"
        - "normal"
        - "low"
        type: "string"
      problem_id:
        description: "For tickets of type \"incident\", the ID of the problem the incident is linked to"
        type: "integer"
      raw_subject:
        description: "The dynamic content placeholder, if present, or the \"subject\" value, if not. See [Dynamic Content Items](/api-reference/ticketing/ticket-management/dynamic_content/)\n"
        type: "string"
      recipient:
        description: "The original recipient e-mail address of the ticket. Notification emails for the ticket are sent from this address"
        type: "string"
      requester:
        description: "Write only. See [Creating a ticket with a new requester](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#creating-a-ticket-with-a-new-requester)"
        type: "object"
      requester_id:
        description: "The user who requested this ticket"
        type: "integer"
      safe_update:
        description: "Write only. Optional boolean. When true and an `update_stamp` date is included, protects against ticket update collisions and returns a message to let you know if one occurs. See [Protecting against ticket update collisions](/documentation/ticketing/managing-tickets/creating-and-updating-tickets/#protecting-against-ticket-update-collisions). A value of false has the same effect as true. Omit the property to force the updates to not be safe"
        type: "boolean"
      satisfaction_rating:
        additionalProperties: true
        description: "The satisfaction rating of the ticket, if it exists, or the state of satisfaction, \"offered\" or \"unoffered\". The value is null for plan types that don't support CSAT"
        readOnly: true
        type: "object"
      sharing_agreement_ids:
        description: "The ids of the sharing agreements used for this ticket"
        items:
          type: "integer"
        type: "array"
      status:
        description: "The state of the ticket.\n\nIf your account has activated custom ticket statuses, this is the ticket's\nstatus category. See [custom ticket statuses](#custom-ticket-statuses)\n"
        enum:
        - "new"
        - "open"
        - "pending"
        - "hold"
        - "solved"
        - "closed"
        type: "string"
      subject:
        description: "The value of the subject field for this ticket. See [Subject](/api-reference/ticketing/tickets/tickets/#subject)\n"
        type: "string"
      submitter_id:
        description: "The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket"
        type: "integer"
      ticket_form_id:
        description: "Enterprise only. The id of the ticket form to render for the ticket"
        type: "integer"
      type:
        description: "The type of this ticket"
        enum:
        - "problem"
        - "incident"
        - "question"
        - "task"
        type: "string"
      updated_at:
        description: "When this record last got updated. It is updated only if the update generates a [ticket event](#incremental-ticket-event-export)"
        format: "date-time"
        readOnly: true
        type: "string"
      updated_stamp:
        description: "Write only. Datetime of last update received from API. See the `safe_update` property"
        type: "string"
      url:
        description: "The API url of this ticket"
        readOnly: true
        type: "string"
      via:
        description: "For more information, see the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference)"
        properties:
          channel:
            description: "This tells you how the ticket or event was created. Examples: \"web\", \"mobile\", \"rule\", \"system\"\n"
            type: "string"
          source:
            additionalProperties: true
            description: "For some channels a source object gives more information about how or why the ticket or event was created\n"
            type: "object"
        type: "object"
      via_followup_source_id:
        description: "POST requests only. The id of a closed ticket when creating a follow-up ticket. See [Creating a follow-up ticket](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#creating-a-follow-up-ticket)"
        type: "integer"
      via_id:
        description: "Write only. For more information, see the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference/)"
        type: "integer"
      voice_comment:
        description: "Write only. See [Creating voicemail ticket](/api-reference/voice/talk-partner-edition-api/reference/#creating-voicemail-tickets)"
        type: "object"
    required:
    - "requester_id"
    type: "object"
  TicketRelatedInformation:
    properties:
      followup_source_ids:
        items:
          description: "Sources to follow up"
          type: "string"
        type: "array"
      from_archive:
        description: "Is true if the current ticket is archived"
        type: "boolean"
      incidents:
        description: "A count of related incident occurrences"
        type: "integer"
      topic_id:
        description: "Related topic in the Web portal (deprecated feature)"
        type: "string"
        x-nullable: true
      twitter:
        additionalProperties: true
        description: "X (formerly Twitter) information associated with the ticket"
        type: "object"
    type: "object"
  TicketResponse:
    properties:
      ticket:
        $ref: "#/definitions/TicketObject"
      audit:
        $ref: "#/definitions/AuditObject"
    type: "object"
  TicketSkipCreation:
    properties:
      skip:
        $ref: "#/definitions/TicketSkipObject"
    type: "object"
  TicketSkipObject:
    example:
      created_at: "2015-09-30T21:44:03Z"
      id: 1
      reason: "I have no idea."
      ticket:
        tags:
        - "enterprise"
        - "other_tag"
        assignee_id: 235323
        collaborator_ids:
        - 35334
        - 234
        created_at: "2009-07-20T22:55:29Z"
        custom_fields:
        - id: 27642
          value: "745"
        - id: 27648
          value: "yes"
        description: "The fire is very colorful."
        due_at: null
        external_id: "ahg35h3jh"
        follower_ids:
        - 35334
        - 234
        from_messaging_channel: false
        group_id: 98738
        has_incidents: false
        id: 123
        organization_id: 509974
        priority: "high"
        problem_id: 9873764
        raw_subject: "{{dc.printer_on_fire}}"
        recipient: "support@company.com"
        requester_id: 20978392
        satisfaction_rating:
          comment: "Great support!"
          id: 1234
          score: "good"
        sharing_agreement_ids:
        - 84432
        status: "open"
        subject: "Help, my printer is on fire!"
        submitter_id: 76872
        type: "incident"
        updated_at: "2011-05-05T10:38:52Z"
        url: "https://company.zendesk.com/api/v2/tickets/35436.json"
        via:
          channel: "web"
      ticket_id: 123
      updated_at: "2015-09-30T21:44:03Z"
      user_id: 456
    properties:
      created_at:
        description: "Time the skip was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      reason:
        description: "Reason for skipping the ticket"
        readOnly: true
        type: "string"
      ticket:
        allOf:
        - $ref: "#/definitions/TicketObject"
        description: "The skipped ticket. See the [Ticket object reference](/api-reference/ticketing/tickets/tickets/#json-format)"
        type: "object"
      ticket_id:
        description: "ID of the skipped ticket"
        readOnly: true
        type: "integer"
      updated_at:
        description: "Time the skip was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
      user_id:
        description: "ID of the skipping agent"
        readOnly: true
        type: "integer"
    type: "object"
  TicketSkipsResponse:
    properties:
      skips:
        items:
          $ref: "#/definitions/TicketSkipObject"
        type: "array"
    type: "object"
  TicketUpdateInput:
    example:
      comment:
        body: "The smoke is very colorful."
      priority: "urgent"
      subject: "My printer is on fire!"
    properties:
      tags:
        description: "The array of tags applied to this ticket"
        items:
          type: "string"
        type: "array"
      additional_collaborators:
        description: "An array of numeric IDs, emails, or objects containing name and email properties. See [Setting Collaborators](/api-reference/ticketing/tickets/tickets/#setting-collaborators). An email notification is sent to them when the ticket is updated"
        items:
          $ref: "#/definitions/CollaboratorObject"
        type: "array"
      assignee_email:
        description: "The email address of the agent to assign the ticket to"
        format: "email"
        type: "string"
      assignee_id:
        description: "The agent currently assigned to the ticket"
        type: "integer"
      attribute_value_ids:
        description: "An array of the IDs of attribute values to be associated with the ticket"
        items:
          type: "integer"
        type: "array"
      collaborator_ids:
        description: "The ids of users currently CC'ed on the ticket"
        items:
          type: "integer"
        type: "array"
      comment:
        $ref: "#/definitions/TicketCommentObject"
      custom_fields:
        description: "Custom fields for the ticket. See [Setting custom field values](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-custom-field-values)"
        items:
          $ref: "#/definitions/CustomFieldObject"
        type: "array"
      custom_status_id:
        description: "The custom ticket status id of the ticket. See [custom ticket statuses](#custom-ticket-statuses)"
        type: "integer"
      due_at:
        description: "If this is a ticket of type \"task\" it has a due date.  Due date format uses [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format."
        format: "date-time"
        type: "string"
        x-nullable: true
      email_ccs:
        description: "An array of objects that represent agent or end users email CCs to add or delete from the ticket. See [Setting email CCs](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-email-ccs)"
        items:
          $ref: "#/definitions/EmailCCObject"
        type: "array"
      external_id:
        description: "An id you can use to link Zendesk Support tickets to local records"
        type: "string"
      followers:
        description: "An array of objects that represent agent followers to add or delete from the ticket. See [Setting followers](/documentation/ticketing/managing-tickets/creating-and-updating-tickets#setting-followers)"
        items:
          $ref: "#/definitions/FollowerObject"
        type: "array"
      group_id:
        description: "The group this ticket is assigned to"
        type: "integer"
      organization_id:
        description: "The organization of the requester. You can only specify the ID of an organization associated with the requester. See [Organization Memberships](/api-reference/ticketing/organizations/organization_memberships/)"
        type: "integer"
      priority:
        description: "The urgency with which the ticket should be addressed."
        enum:
        - "urgent"
        - "high"
        - "normal"
        - "low"
        type: "string"
      problem_id:
        description: "For tickets of type \"incident\", the ID of the problem the incident is linked to"
        type: "integer"
      requester_id:
        description: "The user who requested this ticket"
        type: "integer"
      safe_update:
        description: "Optional boolean. Prevents updates with outdated ticket data (`updated_stamp` property required when true)"
        type: "boolean"
      sharing_agreement_ids:
        description: "An array of the numeric IDs of sharing agreements. Note that this replaces any existing agreements"
        items:
          type: "integer"
        type: "array"
      status:
        description: "The state of the ticket.\n\nIf your account has activated custom ticket statuses, this is the ticket's\nstatus category. See [custom ticket statuses](#custom-ticket-statuses).\n"
        enum:
        - "new"
        - "open"
        - "pending"
        - "hold"
        - "solved"
        - "closed"
        type: "string"
      subject:
        description: "The value of the subject field for this ticket"
        type: "string"
      type:
        description: "The type of this ticket."
        enum:
        - "problem"
        - "incident"
        - "question"
        - "task"
        type: "string"
      updated_stamp:
        description: "Datetime of last update received from API. See the safe_update property"
        format: "date-time"
        type: "string"
    type: "object"
  TicketUpdateRequest:
    properties:
      ticket:
        $ref: "#/definitions/TicketUpdateInput"
    type: "object"
  TicketUpdateResponse:
    properties:
      audit:
        $ref: "#/definitions/AuditObject"
      ticket:
        $ref: "#/definitions/TicketObject"
    type: "object"
  TicketsCreateRequest:
    properties:
      tickets:
        items:
          $ref: "#/definitions/TicketCreateInput"
        type: "array"
    type: "object"
  TicketsResponse:
    properties:
      tickets:
        items:
          $ref: "#/definitions/TicketObject"
        type: "array"
    type: "object"
  TimeBasedExportIncrementalTicketsResponse:
    description: "See [Tickets](/api-reference/ticketing/tickets/tickets/) for a detailed example.\n"
    example:
      count: 2
      end_of_stream: true
      end_time: 1390362485
      next_page: "https://{subdomain}.zendesk.com/api/v2/incremental/tickets.json?per_page=3&start_time=1390362485"
      tickets:
      - tags:
        - "enterprise"
        - "other_tag"
        assignee_id: 235323
        collaborator_ids:
        - 35334
        - 234
        created_at: "2009-07-20T22:55:29Z"
        custom_fields:
        - id: 27642
          value: "745"
        - id: 27648
          value: "yes"
        description: "The fire is very colorful."
        due_at: null
        external_id: "ahg35h3jh"
        follower_ids:
        - 35334
        - 234
        group_id: 98738
        has_incidents: false
        id: 35436
        organization_id: 509974
        priority: "high"
        problem_id: 9873764
        raw_subject: "{{dc.printer_on_fire}}"
        recipient: "support@company.com"
        requester_id: 20978392
        satisfaction_rating:
          comment: "Great support!"
          id: 1234
          score: "good"
        sharing_agreement_ids:
        - 84432
        status: "open"
        subject: "Help, my printer is on fire!"
        submitter_id: 76872
        type: "incident"
        updated_at: "2011-05-05T10:38:52Z"
        url: "https://company.zendesk.com/api/v2/tickets/35436.json"
        via:
          channel: "web"
    properties:
      count:
        type: "integer"
      end_of_stream:
        type: "boolean"
      end_time:
        type: "integer"
      next_page:
        type: "string"
        x-nullable: true
      tickets:
        items:
          $ref: "#/definitions/TicketObject"
        type: "array"
    type: "object"
  TimeBasedExportIncrementalUsersResponse:
    example:
      count: 1
      end_of_stream: true
      end_time: 1601357503
      next_page: "https://example.zendesk.com/api/v2/incremental/ticket_events.json?start_time=1601357503"
      users:
      - tags:
        - "enterprise"
        - "other_tag"
        active: true
        alias: "Mr. Johnny"
        created_at: "2009-07-20T22:55:29Z"
        custom_role_id: 9373643
        details: ""
        email: "johnny@example.com"
        external_id: "sai989sur98w9"
        id: 35436
        last_login_at: "2011-05-05T10:38:52Z"
        locale: "en-US"
        locale_id: 1
        moderator: true
        name: "Johnny Agent"
        notes: "Johnny is a nice guy!"
        only_private_comments: false
        organization_id: 57542
        phone: "+15551234567"
        photo:
          content_type: "image/png"
          content_url: "https://company.zendesk.com/photos/my_funny_profile_pic.png"
          id: 928374
          name: "my_funny_profile_pic.png"
          size: 166144
          thumbnails:
          - content_type: "image/png"
            content_url: "https://company.zendesk.com/photos/my_funny_profile_pic_thumb.png"
            id: 928375
            name: "my_funny_profile_pic_thumb.png"
            size: 58298
        restricted_agent: true
        role: "agent"
        role_type: 0
        shared: false
        shared_agent: false
        signature: "Have a nice day, Johnny"
        suspended: true
        ticket_restriction: "assigned"
        time_zone: "Copenhagen"
        updated_at: "2011-05-05T10:38:52Z"
        url: "https://company.zendesk.com/api/v2/users/35436.json"
        user_fields:
          user_date: "2012-07-23T00:00:00Z"
          user_decimal: 5.1
          user_dropdown: "option_1"
        verified: true
    properties:
      count:
        type: "integer"
      end_of_stream:
        type: "boolean"
      end_time:
        type: "integer"
      next_page:
        type: "string"
        x-nullable: true
      users:
        items:
          $ref: "#/definitions/UserObject"
        type: "array"
    type: "object"
  TrialAccountObject:
    properties:
      name:
        description: "The name of the account"
        type: "string"
      subdomain:
        description: "The subdomain of the account"
        type: "string"
      url:
        description: "The URL of the account"
        type: "string"
    type: "object"
  TrialAccountResponse:
    properties:
      account:
        $ref: "#/definitions/TrialAccountObject"
    type: "object"
  TriggerActionDefinitionObject:
    properties:
      group:
        type: "string"
      nullable:
        type: "boolean"
      repeatable:
        type: "boolean"
      subject:
        type: "string"
      title:
        type: "string"
      type:
        type: "string"
      values:
        items:
          properties:
            enabled:
              type: "boolean"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
    type: "object"
  TriggerActionDiffObject:
    example:
      field:
      - change: "+"
        content: "solved"
      value:
      - change: "-"
        content: "open"
    properties:
      field:
        description: "An array of [change](#change) objects."
        items:
          $ref: "#/definitions/TriggerChangeObject"
        type: "array"
      value:
        description: "An array of [change](#change) objects."
        items:
          $ref: "#/definitions/TriggerChangeObject"
        type: "array"
    type: "object"
  TriggerActionObject:
    example:
      field: "status"
      value: "solved"
    properties:
      field:
        type: "string"
      value: {}
    type: "object"
  TriggerBatchRequest:
    properties:
      active:
        type: "boolean"
      category_id:
        type: "string"
      id:
        type: "string"
      position:
        format: "int64"
        type: "integer"
    required:
    - "id"
    type: "object"
  TriggerBulkUpdateItem:
    example:
      active: true
      category_id: "10026"
      id: 25
      position: 8
    properties:
      active:
        description: "The active status of the ticket trigger (true or false)"
        type: "boolean"
      category_id:
        description: "The ID of the new category the ticket trigger is to be moved to"
        type: "string"
      id:
        description: "The ID of the ticket trigger to update"
        type: "integer"
      position:
        description: "The new position of the ticket trigger"
        type: "integer"
    required:
    - "id"
    type: "object"
  TriggerBulkUpdateRequest:
    properties:
      triggers:
        items:
          $ref: "#/definitions/TriggerBulkUpdateItem"
        type: "array"
    type: "object"
  TriggerCategoriesResponse:
    properties:
      trigger_categories:
        items:
          allOf:
          - $ref: "#/definitions/TriggerCategory"
          type: "object"
        type: "array"
    type: "object"
  TriggerCategory:
    properties:
      created_at:
        readOnly: true
        type: "string"
      id:
        readOnly: true
        type: "string"
      name:
        type: "string"
      position:
        format: "int64"
        type: "integer"
      updated_at:
        readOnly: true
        type: "string"
    type: "object"
  TriggerCategoryBatchRequest:
    properties:
      id:
        type: "string"
      position:
        format: "int64"
        type: "integer"
    required:
    - "id"
    - "position"
    type: "object"
  TriggerCategoryId:
    type: "string"
  TriggerCategoryRequest:
    properties:
      name:
        type: "string"
      position:
        format: "int64"
        type: "integer"
    type: "object"
  TriggerCategoryRequestRequired:
    properties:
      name:
        type: "string"
      position:
        format: "int64"
        type: "integer"
    required:
    - "name"
    type: "object"
  TriggerCategoryResponse:
    properties:
      trigger_category:
        $ref: "#/definitions/TriggerCategory"
    type: "object"
  TriggerCategoryRuleCounts:
    properties:
      active_count:
        format: "int64"
        type: "integer"
      inactive_count:
        format: "int64"
        type: "integer"
    type: "object"
  TriggerChangeObject:
    example:
      change: "+"
      content: "solved"
    properties:
      change:
        description: "One of `-`, `+`, `=` representing the type of change"
        type: "string"
      content:
        description: "The value of the item it represents"
    type: "object"
  TriggerConditionDefinitionObjectAll:
    properties:
      group:
        type: "string"
      nullable:
        type: "boolean"
      operators:
        items:
          properties:
            terminal:
              type: "boolean"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
      repeatable:
        type: "boolean"
      subject:
        type: "string"
      title:
        type: "string"
      type:
        type: "string"
      values:
        items:
          properties:
            enabled:
              type: "boolean"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
    type: "object"
  TriggerConditionDefinitionObjectAny:
    properties:
      group:
        type: "string"
      nullable:
        type: "boolean"
      operators:
        items:
          properties:
            terminal:
              type: "boolean"
            title:
              type: "string"
            value:
              type: "string"
          type: "object"
        type: "array"
      repeatable:
        type: "boolean"
      subject:
        type: "string"
      title:
        type: "string"
      type:
        type: "string"
    type: "object"
  TriggerConditionDiffObject:
    example:
      field:
      - change: "="
        content: "status"
      operator:
      - change: "="
        content: "less_than"
      value:
      - change: "+"
        content: "solved"
    properties:
      field:
        description: "An array of [change](#change) objects"
        items:
          $ref: "#/definitions/TriggerChangeObject"
        type: "array"
      operator:
        description: "An array of [change](#change) objects"
        items:
          $ref: "#/definitions/TriggerChangeObject"
        type: "array"
      value:
        description: "An array of [change](#change) objects"
        items:
          $ref: "#/definitions/TriggerChangeObject"
        type: "array"
    type: "object"
  TriggerConditionObject:
    example:
      field: "status"
      operator: "less_than"
      value: "solved"
    properties:
      field:
        type: "string"
      operator:
        type: "string"
      value: {}
    type: "object"
  TriggerConditionsDiffObject:
    properties:
      all:
        items:
          $ref: "#/definitions/TriggerConditionDiffObject"
        type: "array"
        x-nullable: true
      any:
        items:
          $ref: "#/definitions/TriggerConditionDiffObject"
        type: "array"
        x-nullable: true
    type: "object"
  TriggerConditionsObject:
    description: "An object that describes the circumstances under which the trigger performs its actions. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)"
    example:
      all:
      - field: "status"
        operator: "less_than"
        value: "solved"
      - field: "assignee_id"
        operator: "is"
        value: "296220096"
      - field: "custom_status_id"
        operator: "includes"
        value:
        - "1"
        - "2"
      any:
      - field: "status"
        operator: "less_than"
        value: "solved"
      - field: "custom_status_id"
        operator: "includes"
        value:
        - "1"
        - "2"
    properties:
      all:
        items:
          $ref: "#/definitions/TriggerConditionObject"
        type: "array"
        x-nullable: true
      any:
        items:
          $ref: "#/definitions/TriggerConditionObject"
        type: "array"
        x-nullable: true
    type: "object"
  TriggerDefinitionObject:
    properties:
      actions:
        items:
          $ref: "#/definitions/TriggerActionDefinitionObject"
        type: "array"
      conditions_all:
        items:
          $ref: "#/definitions/TriggerConditionDefinitionObjectAll"
        type: "array"
      conditions_any:
        items:
          $ref: "#/definitions/TriggerConditionDefinitionObjectAny"
        type: "array"
    type: "object"
  TriggerDefinitionResponse:
    properties:
      definitions:
        $ref: "#/definitions/TriggerDefinitionObject"
    type: "object"
  TriggerObject:
    example:
      actions:
      - {}
      active: true
      category_id: "10026"
      conditions: {}
      created_at: "2012-09-25T22:50:26Z"
      default: false
      description: "Close and save a ticket"
      id: 25
      position: 8
      raw_title: "Close and Save"
      title: "Close and Save"
      updated_at: "2012-09-25T22:50:26Z"
      url: "http://{subdomain}.zendesk.com/api/v2/triggers/25.json"
    properties:
      actions:
        description: "An array of actions describing what the ticket trigger will do. See [Actions reference](/documentation/ticketing/reference-guides/actions-reference)"
        items:
          $ref: "#/definitions/TriggerActionObject"
        type: "array"
      active:
        description: "Whether the ticket trigger is active"
        type: "boolean"
      category_id:
        description: "The ID of the category the ticket trigger belongs to"
        type: "string"
      conditions:
        $ref: "#/definitions/TriggerConditionsObject"
      created_at:
        description: "The time the ticket trigger was created"
        readOnly: true
        type: "string"
      default:
        description: "If true, the ticket trigger is a standard trigger"
        readOnly: true
        type: "boolean"
      description:
        description: "The description of the ticket trigger"
        type: "string"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      position:
        description: "Position of the ticket trigger, determines the order they will execute in"
        type: "integer"
      raw_title:
        description: "The raw format of the title of the ticket trigger"
        type: "string"
      title:
        description: "The title of the ticket trigger"
        type: "string"
      updated_at:
        description: "The time of the last update of the ticket trigger"
        readOnly: true
        type: "string"
      url:
        description: "The url of the ticket trigger"
        readOnly: true
        type: "string"
    required:
    - "conditions"
    - "actions"
    - "title"
    type: "object"
  TriggerResponse:
    properties:
      trigger:
        $ref: "#/definitions/TriggerObject"
    type: "object"
  TriggerRevisionResponse:
    properties:
      trigger_revision:
        properties:
          author_id:
            type: "integer"
          created_at:
            type: "string"
          id:
            type: "integer"
          snapshot:
            properties:
              actions:
                items:
                  $ref: "#/definitions/TriggerActionObject"
                type: "array"
              active:
                type: "boolean"
              conditions:
                $ref: "#/definitions/TriggerConditionsObject"
              description:
                type: "string"
                x-nullable: true
              title:
                type: "string"
            type: "object"
          url:
            type: "string"
        type: "object"
    type: "object"
  TriggerRevisionsResponse:
    properties:
      after_cursor:
        type: "string"
      after_url:
        type: "string"
      before_cursor:
        type: "string"
      before_url:
        type: "string"
      count:
        type: "integer"
      trigger_revisions:
        items:
          properties:
            author_id:
              type: "integer"
            created_at:
              type: "string"
            diff:
              properties:
                actions:
                  description: "An array that contain [action diff objects](#Action Diffs)"
                  items:
                    $ref: "#/definitions/TriggerActionDiffObject"
                  type: "array"
                active:
                  description: "An array of [change](#change) objects"
                  items:
                    $ref: "#/definitions/TriggerChangeObject"
                  type: "array"
                conditions:
                  $ref: "#/definitions/TriggerConditionDiffObject"
                description:
                  description: "An array of [change](#change) objects"
                  items:
                    $ref: "#/definitions/TriggerChangeObject"
                  type: "array"
                source_id:
                  description: "ID of the source revision"
                  type: "integer"
                target_id:
                  description: "ID of the target revision"
                  type: "integer"
                title:
                  description: "An array of [change](#change) objects"
                  items:
                    $ref: "#/definitions/TriggerChangeObject"
                  type: "array"
              type: "object"
            id:
              type: "integer"
            snapshot:
              $ref: "#/definitions/TriggerSnapshotObject"
            url:
              type: "string"
          type: "object"
        type: "array"
    type: "object"
  TriggerSnapshotObject:
    example:
      actions: []
      active: true
      conditions: {}
      description: "Notifies requester that a comment was updated"
      title: "Notify requester of comment update"
    properties:
      actions:
        description: "An array of [Actions](#actions) describing what the ticket trigger will do"
        items:
          $ref: "#/definitions/TriggerActionObject"
        type: "array"
      active:
        description: "Whether the ticket trigger is active"
        type: "boolean"
      conditions:
        $ref: "#/definitions/TriggerConditionsObject"
      description:
        description: "The description of the ticket trigger"
        type: "string"
        x-nullable: true
      title:
        description: "The title of the ticket trigger"
        type: "string"
    type: "object"
  TriggerWithCategoryRequest:
    properties:
      trigger:
        allOf:
        - $ref: "#/definitions/TriggerObject"
        - {}
    type: "object"
  TriggersResponse:
    properties:
      count:
        type: "integer"
      next_page:
        type: "string"
        x-nullable: true
      previous_page:
        type: "string"
        x-nullable: true
      triggers:
        items:
          $ref: "#/definitions/TriggerObject"
        type: "array"
    type: "object"
  TwitterChannelObject:
    example:
      created_at: "2009-05-13T00:07:08Z"
      id: 211
      screen_name: "@zendesk"
      twitter_user_id: 67462376832
      updated_at: "2011-07-22T00:11:12Z"
    properties:
      allow_reply:
        description: "If replies are allowed for this handle"
        readOnly: true
        type: "boolean"
      avatar_url:
        description: "The profile image url of the handle"
        readOnly: true
        type: "string"
      brand_id:
        description: "What brand the handle is associated with"
        readOnly: true
        type: "integer"
      can_reply:
        description: "If replies are allowed for this handle"
        readOnly: true
        type: "boolean"
      created_at:
        description: "The time the handle was created"
        format: "date-time"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned upon creation"
        readOnly: true
        type: "integer"
      name:
        description: "The profile name of the handle"
        readOnly: true
        type: "string"
      screen_name:
        description: "The X handle"
        readOnly: true
        type: "string"
      twitter_user_id:
        description: "The country's code"
        readOnly: true
        type: "integer"
      updated_at:
        description: "The time of the last update of the handle"
        format: "date-time"
        readOnly: true
        type: "string"
    required:
    - "id"
    - "screen_name"
    - "twitter_user_id"
    title: "Monitored X handles"
    type: "object"
  TwitterChannelResponse:
    properties:
      monitored_twitter_handle:
        $ref: "#/definitions/TwitterChannelObject"
    type: "object"
  TwitterChannelTwicketStatusResponse:
    properties:
      statuses:
        items:
          properties:
            favorited:
              type: "boolean"
            id:
              type: "integer"
            retweeted:
              type: "boolean"
            user_followed:
              type: "boolean"
          type: "object"
        type: "array"
    type: "object"
  TwitterChannelsResponse:
    properties:
      monitored_twitter_handles:
        items:
          $ref: "#/definitions/TwitterChannelObject"
        type: "array"
    type: "object"
  UpdateResourceResult:
    properties:
      action:
        description: "the action the job attempted (`\"action\": \"update\"`)\n"
        type: "string"
      id:
        description: "the id of the resource the job attempted to update"
        type: "integer"
      status:
        description: "the status (`\"status\": \"Updated\"`)\n"
        type: "string"
      success:
        description: "whether the action was successful or not (`\"success\": true`)\n"
        type: "boolean"
    required:
    - "id"
    - "action"
    - "success"
    - "status"
    type: "object"
  UrlObject:
    properties:
      url:
        readOnly: true
        type: "string"
    type: "object"
  UserCreateInput:
    properties:
      custom_role_id:
        type: "integer"
      email:
        type: "string"
      external_id:
        type: "string"
      identities:
        items:
          properties:
            type:
              type: "string"
            value:
              type: "string"
          required:
          - "type"
          - "value"
          type: "object"
        type: "array"
      name:
        type: "string"
      organization:
        properties:
          name:
            type: "string"
        required:
        - "name"
        type: "object"
      organization_id:
        type: "integer"
      role:
        type: "string"
    required:
    - "name"
    - "email"
    type: "object"
  UserFieldObject:
    allOf:
    - $ref: "#/definitions/CustomFieldObject"
    example:
      active: true
      created_at: "2012-10-16T16:04:06Z"
      description: "Description of Custom Field"
      id: 7
      key: "custom_field_1"
      position: 9999
      raw_description: "{{dc.my_description}}"
      raw_title: "Custom Field 1"
      regexp_for_validation: null
      title: "Custom Field 1"
      type: "text"
      updated_at: "2012-10-16T16:04:06Z"
      url: "https://company.zendesk.com/api/v2/user_fields/7.json"
    type: "object"
  UserFieldResponse:
    properties:
      user_field:
        $ref: "#/definitions/UserFieldObject"
    type: "object"
  UserFieldsResponse:
    properties:
      count:
        description: "Total count of records retrieved"
        readOnly: true
        type: "integer"
      next_page:
        description: "URL of the next page"
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        description: "URL of the previous page"
        readOnly: true
        type: "string"
        x-nullable: true
      user_fields:
        items:
          $ref: "#/definitions/UserFieldObject"
        type: "array"
    type: "object"
  UserForAdmin:
    example:
      tags:
      - "enterprise"
      - "other_tag"
      active: true
      alias: "Mr. Johnny"
      created_at: "2009-07-20T22:55:29Z"
      custom_role_id: 9373643
      details: ""
      email: "johnny@example.com"
      external_id: "sai989sur98w9"
      iana_time_zone: "Pacific/Pago_Pago"
      id: 35436
      last_login_at: "2011-05-05T10:38:52Z"
      locale: "en-US"
      locale_id: 1
      moderator: true
      name: "Johnny Agent"
      notes: "Johnny is a nice guy!"
      only_private_comments: false
      organization_id: 57542
      phone: "+15551234567"
      photo:
        content_type: "image/png"
        content_url: "https://company.zendesk.com/photos/my_funny_profile_pic.png"
        id: 928374
        name: "my_funny_profile_pic.png"
        size: 166144
        thumbnails:
        - content_type: "image/png"
          content_url: "https://company.zendesk.com/photos/my_funny_profile_pic_thumb.png"
          id: 928375
          name: "my_funny_profile_pic_thumb.png"
          size: 58298
      restricted_agent: true
      role: "agent"
      role_type: 0
      shared: false
      shared_agent: false
      signature: "Have a nice day, Johnny"
      suspended: true
      ticket_restriction: "assigned"
      time_zone: "Copenhagen"
      updated_at: "2011-05-05T10:38:52Z"
      url: "https://company.zendesk.com/api/v2/users/35436.json"
      user_fields:
        user_date: "2012-07-23T00:00:00Z"
        user_decimal: 5.1
        user_dropdown: "option_1"
      verified: true
    properties:
      tags:
        description: "The user's tags. Only present if your account has user tagging enabled"
        items:
          type: "string"
        type: "array"
      active:
        description: "false if the user has been deleted"
        readOnly: true
        type: "boolean"
      alias:
        description: "An alias displayed to end users"
        type: "string"
      chat_only:
        description: "Whether or not the user is a chat-only agent"
        readOnly: true
        type: "boolean"
      created_at:
        description: "The time the user was created"
        format: "datetime"
        readOnly: true
        type: "string"
      custom_role_id:
        description: "A custom role if the user is an agent on the Enterprise plan or above"
        type: "integer"
        x-nullable: true
      default_group_id:
        description: "The id of the user's default group"
        type: "integer"
      details:
        description: "Any details you want to store about the user, such as an address"
        type: "string"
      email:
        description: "The user's primary email address. *Writeable on create only. On update, a secondary email is added. See [Email Address](#email-address)"
        type: "string"
      external_id:
        description: "A unique identifier from another system. The API treats the id as case insensitive. Example: \"ian1\" and \"IAN1\" are the same value."
        type: "string"
        x-nullable: true
      iana_time_zone:
        description: "The time zone for the user"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when the user is created"
        readOnly: true
        type: "integer"
      last_login_at:
        description: "Last time the user signed in to Zendesk Support or made an API request\nusing an API token or basic authentication\n"
        format: "datetime"
        readOnly: true
        type: "string"
      locale:
        description: "The user's locale. A BCP-47 compliant tag for the locale. If both \"locale\" and \"locale_id\" are present on create or update, \"locale_id\" is ignored and only \"locale\" is used."
        type: "string"
      locale_id:
        description: "The user's language identifier"
        type: "integer"
      moderator:
        description: "Designates whether the user has forum moderation capabilities"
        type: "boolean"
      name:
        description: "The user's name"
        type: "string"
      notes:
        description: "Any notes you want to store about the user"
        type: "string"
      only_private_comments:
        description: "true if the user can only create private comments"
        type: "boolean"
      organization_id:
        description: "The id of the user's organization. If the user has more than one [organization memberships](/api-reference/ticketing/organizations/organization_memberships/), the id of the user's default organization. If updating, see [Organization ID](#organization-id)"
        type: "integer"
        x-nullable: true
      phone:
        description: "The user's primary phone number. See [Phone Number](#phone-number) below"
        type: "string"
        x-nullable: true
      photo:
        additionalProperties: true
        description: "The user's profile picture represented as an [Attachment](/api-reference/ticketing/tickets/ticket-attachments/) object"
        type: "object"
        x-nullable: true
      remote_photo_url:
        description: "A URL pointing to the user's profile picture."
        type: "string"
      report_csv:
        description: "This parameter is inert and has no effect. It may be deprecated in the\nfuture.\n\nPreviously, this parameter determined whether a user could access a CSV\nreport in a legacy Guide dashboard. This dashboard has been removed. See\n[Announcing Guide legacy reporting upgrade to\nExplore](https://support.zendesk.com/hc/en-us/articles/4762263171610-Announcing-Guide-legacy-reporting-upgrade-to-Explore-)\n"
        readOnly: true
        type: "boolean"
      restricted_agent:
        description: "If the agent has any restrictions; false for admins and unrestricted agents, true for other agents"
        type: "boolean"
      role:
        description: "The user's role. Possible values are \"end-user\", \"agent\", or \"admin\""
        type: "string"
      role_type:
        description: "The user's role id. 0 for a custom agent, 1 for a light agent, 2 for a chat agent, 3 for a chat agent added to the Support account as a contributor ([Chat Phase 4](https://support.zendesk.com/hc/en-us/articles/360022365373#topic_djh_1zk_4fb)), 4 for an admin, and 5 for a billing admin"
        readOnly: true
        type: "integer"
        x-nullable: true
      shared:
        description: "If the user is shared from a different Zendesk Support instance. Ticket sharing accounts only"
        readOnly: true
        type: "boolean"
      shared_agent:
        description: "If the user is a shared agent from a different Zendesk Support instance. Ticket sharing accounts only"
        readOnly: true
        type: "boolean"
      shared_phone_number:
        description: "Whether the `phone` number is shared or not. See [Phone Number](#phone-number) below"
        type: "boolean"
        x-nullable: true
      signature:
        description: "The user's signature. Only agents and admins can have signatures"
        type: "string"
      suspended:
        description: "If the agent is suspended. Tickets from suspended users are also suspended, and these users cannot sign in to the end user portal"
        type: "boolean"
      ticket_restriction:
        description: "Specifies which tickets the user has access to. Possible values are: \"organization\", \"groups\", \"assigned\", \"requested\", null. \"groups\" and \"assigned\" are valid only for agents. If you pass an invalid value to an end user (for example, \"groups\"), they will be assigned to \"requested\", regardless of their previous access"
        type: "string"
        x-nullable: true
      time_zone:
        description: "The user's time zone. See [Time Zone](#time-zone)"
        type: "string"
      two_factor_auth_enabled:
        description: "If two factor authentication is enabled"
        readOnly: true
        type: "boolean"
        x-nullable: true
      updated_at:
        description: "The time the user was last updated"
        format: "datetime"
        readOnly: true
        type: "string"
      url:
        description: "The user's API url"
        readOnly: true
        type: "string"
      user_fields:
        additionalProperties: true
        description: "Values of custom fields in the user's profile. See [User Fields](#user-fields)"
        type: "object"
      verified:
        description: "Any of the user's identities is verified. See [User Identities](/api-reference/ticketing/users/user_identities)"
        type: "boolean"
    required:
    - "name"
    title: "Users"
    type: "object"
  UserForEndUser:
    properties:
      created_at:
        description: "The time the user was created"
        format: "datetime"
        readOnly: true
        type: "string"
      email:
        description: "The primary email address of this user. If the primary email address is not [verified](https://support.zendesk.com/hc/en-us/articles/4408886752410), the secondary email address is used"
        type: "string"
      iana_time_zone:
        description: "The time zone for the user"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned when creating users"
        readOnly: true
        type: "integer"
      locale:
        description: "The locale for this user"
        readOnly: true
        type: "string"
      locale_id:
        description: "The language identifier for this user"
        type: "integer"
      name:
        description: "The name of the user"
        type: "string"
      organization_id:
        description: "The id of the user's organization. If the user has more than one [organization memberships](/api-reference/ticketing/organizations/organization_memberships/), the id of the user's default organization. If updating, see [Organization ID](/api-reference/ticketing/users/users/#organization-id)"
        type: "integer"
      phone:
        description: "The primary phone number of this user. See [Phone Number](/api-reference/ticketing/users/users/#phone-number) in the Users API"
        type: "string"
      photo:
        additionalProperties: true
        description: "The user's profile picture represented as an [Attachment](/api-reference/ticketing/tickets/ticket-attachments/) object"
        type: "object"
      role:
        description: "The role of the user. Possible values: `\"end-user\"`, `\"agent\"`, `\"admin\"`"
        type: "string"
      shared_phone_number:
        description: "Whether the `phone` number is shared or not. See [Phone Number](/api-reference/ticketing/users/users/#phone-number) in the Users API"
        type: "boolean"
      time_zone:
        description: "The time-zone of this user"
        type: "string"
      updated_at:
        description: "The time of the last update of the user"
        format: "datetime"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this user"
        readOnly: true
        type: "string"
      verified:
        description: "Any of the user's identities is verified. See [User Identities](/api-reference/ticketing/users/user_identities)"
        type: "boolean"
    required:
    - "name"
    type: "object"
  UserIdentitiesResponse:
    properties:
      identities:
        items:
          $ref: "#/definitions/UserIdentityObject"
        type: "array"
    type: "object"
  UserIdentityObject:
    example:
      created_at: "2011-07-20T22:55:29Z"
      deliverable_state: "deliverable"
      id: 35436
      primary: true
      type: "email"
      updated_at: "2011-07-20T22:55:29Z"
      url: "https://company.zendesk.com/api/v2/users/135/identities/35436.json"
      user_id: 135
      value: "someone@example.com"
      verified: true
    properties:
      created_at:
        description: "The time the identity was created"
        format: "date-time"
        readOnly: true
        type: "string"
      deliverable_state:
        description: "Email identity type only. Indicates if Zendesk sends notifications to the email address. See [Deliverable state](#deliverable-state)"
        readOnly: true
        type: "string"
      id:
        description: "Automatically assigned on creation"
        readOnly: true
        type: "integer"
      primary:
        description: "If the identity is the primary identity. *Writable only when creating, not when updating. Use the [Make Identity Primary](#make-identity-primary) endpoint instead"
        type: "boolean"
      type:
        description: "The type of this identity"
        enum:
        - "email"
        - "twitter"
        - "facebook"
        - "google"
        - "phone_number"
        - "agent_forwarding"
        - "any_channel"
        - "foreign"
        - "sdk"
        readOnly: true
        type: "string"
      undeliverable_count:
        description: "The number of times a soft-bounce response was received at that address"
        readOnly: true
        type: "integer"
      updated_at:
        description: "The time the identity was updated"
        format: "date-time"
        readOnly: true
        type: "string"
      url:
        description: "The API url of this identity"
        readOnly: true
        type: "string"
      user_id:
        description: "The id of the user"
        readOnly: true
        type: "integer"
      value:
        description: "The identifier for this identity, such as an email address"
        readOnly: true
        type: "string"
      verified:
        description: "If the identity has been verified"
        type: "boolean"
    required:
    - "user_id"
    - "type"
    - "value"
    type: "object"
  UserIdentityResponse:
    properties:
      identity:
        $ref: "#/definitions/UserIdentityObject"
    type: "object"
  UserInput:
    type: "object"
    additionalProperties: true
  UserMergeByIdInput:
    properties:
      id:
        type: "integer"
    type: "object"
  UserMergePropertiesInput:
    properties:
      email:
        type: "string"
      name:
        type: "string"
      organization_id:
        type: "integer"
      password:
        type: "string"
    type: "object"
  UserObject:
    type: "object"
    additionalProperties: true
  UserPasswordRequirementsResponse:
    properties:
      requirements:
        items:
          type: "string"
        type: "array"
    type: "object"
  UserRelatedObject:
    properties:
      assigned_tickets:
        description: "Count of assigned tickets"
        type: "integer"
      ccd_tickets:
        description: "Count of collaborated tickets"
        type: "integer"
      organization_subscriptions:
        description: "Count of organization subscriptions"
        type: "integer"
      requested_tickets:
        description: "Count of requested tickets"
        type: "integer"
    type: "object"
  UserRelatedResponse:
    properties:
      user_related:
        $ref: "#/definitions/UserRelatedObject"
    type: "object"
  UserRequest:
    properties:
      user:
        $ref: "#/definitions/UserInput"
    required:
    - "user"
    type: "object"
  UserResponse:
    properties:
      user:
        $ref: "#/definitions/UserObject"
    type: "object"
  UsersRequest:
    properties:
      users:
        items:
          $ref: "#/definitions/UserInput"
        type: "array"
    required:
    - "users"
    type: "object"
  UsersResponse:
    properties:
      users:
        items:
          $ref: "#/definitions/UserObject"
        type: "array"
    type: "object"
  ViaObject:
    description: "An object explaining how the ticket was created. See the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference)\n"
    example:
      channel: "rule"
      source:
        from:
          id: 22472716
          title: "Assign to first responder"
        rel: "trigger"
        to: {}
    properties:
      channel:
        description: "This tells you how the ticket or event was created. Examples: \"web\", \"mobile\", \"rule\", \"system\"\n"
        type: "string"
      source:
        additionalProperties: true
        description: "For some channels a source object gives more information about how or why the ticket or event was created\n"
        properties:
          from:
            properties:
              address:
                type: "string"
                x-nullable: true
              id:
                type: "integer"
                x-nullable: true
              name:
                type: "string"
                x-nullable: true
              title:
                type: "string"
                x-nullable: true
            type: "object"
          rel:
            type: "string"
            x-nullable: true
          to:
            properties:
              address:
                type: "string"
              name:
                type: "string"
            type: "object"
        type: "object"
    readOnly: true
    type: "object"
  ViewCountObject:
    properties:
      active:
        description: "Only active views if true, inactive views if false, all views if null."
        readOnly: true
        type: "boolean"
      fresh:
        description: "false if the cached data is stale and the system is still loading and caching new data"
        readOnly: true
        type: "boolean"
      pretty:
        description: "A pretty-printed text approximation of the view count"
        readOnly: true
        type: "string"
      url:
        description: "The API url of the count"
        readOnly: true
        type: "string"
      value:
        description: "The cached number of tickets in the view. Can also be null if the system is loading and caching new data. Not to be confused with 0 tickets"
        readOnly: true
        type: "integer"
        x-nullable: true
      view_id:
        description: "The id of the view"
        readOnly: true
        type: "integer"
    type: "object"
  ViewCountResponse:
    properties:
      view_count:
        $ref: "#/definitions/ViewCountObject"
    type: "object"
  ViewCountsResponse:
    properties:
      view_counts:
        items:
          $ref: "#/definitions/ViewCountObject"
        type: "array"
    type: "object"
  ViewExportResponse:
    properties:
      export:
        properties:
          status:
            readOnly: true
            type: "string"
          view_id:
            readOnly: true
            type: "integer"
        type: "object"
    type: "object"
  ViewObject:
    example:
      active: true
      conditions:
        all:
        - field: "status"
          operator: "less_than"
          value: "solved"
        - field: "assignee_id"
          operator: "is"
          value: "296220096"
        any: []
      default: false
      description: "View for recent tickets"
      execution:
        columns:
        - id: "status"
          title: "Status"
        - id: "updated"
          title: "Updated"
        - id: 5
          title: "Account"
          type: "text"
          url: "https://example.zendesk.com/api/v2/ticket_fields/5.json"
        group:
          id: "status"
          order: "desc"
          title: "Status"
        sort:
          id: "updated"
          order: "desc"
          title: "Updated"
      id: 25
      position: 8
      restriction:
        id: 4
        type: "User"
      title: "Tickets updated <12 Hours"
    properties:
      active:
        description: "Whether the view is active"
        type: "boolean"
      conditions:
        additionalProperties: true
        description: "Describes how the view is constructed. See [Conditions reference](/documentation/ticketing/reference-guides/conditions-reference)"
        type: "object"
      created_at:
        description: "The time the view was created"
        format: "date-time"
        readOnly: true
        type: "string"
      default:
        description: "If true, the view is a default view"
        readOnly: true
        type: "boolean"
      description:
        description: "The description of the view"
        type: "string"
      execution:
        additionalProperties: true
        description: "Describes how the view should be executed. See [Execution](#execution)"
        type: "object"
      id:
        description: "Automatically assigned when created"
        readOnly: true
        type: "integer"
      position:
        description: "The position of the view"
        type: "integer"
      restriction:
        additionalProperties: true
        description: "Who may access this account. Is null when everyone in the account can access it"
        type: "object"
      title:
        description: "The title of the view"
        type: "string"
      updated_at:
        description: "The time the view was last updated"
        format: "date-time"
        readOnly: true
        type: "string"
    type: "object"
  ViewResponse:
    properties:
      columns:
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      groups:
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      rows:
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      view:
        $ref: "#/definitions/ViewObject"
    type: "object"
  ViewsCountResponse:
    properties:
      count:
        properties:
          refreshed_at:
            format: "date-time"
            type: "string"
          value:
            type: "integer"
        type: "object"
    type: "object"
  ViewsResponse:
    properties:
      count:
        readOnly: true
        type: "integer"
      next_page:
        readOnly: true
        type: "string"
        x-nullable: true
      previous_page:
        readOnly: true
        type: "string"
        x-nullable: true
      views:
        items:
          $ref: "#/definitions/ViewObject"
        type: "array"
    type: "object"
  WorkspaceInput:
    properties:
      conditions:
        $ref: "#/definitions/ConditionsObject"
      description:
        description: "User-defined description of this workspace's purpose"
        type: "string"
      macros:
        items:
          type: "number"
        type: "array"
      ticket_form_id:
        type: "number"
      title:
        description: "The title of the workspace"
        type: "string"
    type: "object"
  WorkspaceObject:
    properties:
      activated:
        description: "If true, this workspace is available for use"
        type: "boolean"
      apps:
        description: "The apps associated to this workspace"
        items:
          additionalProperties: true
          type: "object"
        type: "array"
      conditions:
        $ref: "#/definitions/ConditionsObject"
      created_at:
        description: "The time the workspace was created"
        format: "date-time"
        type: "string"
      description:
        description: "User-defined description of this workspace's purpose"
        type: "string"
      id:
        description: "Automatically assigned upon creation"
        type: "integer"
      macro_ids:
        description: "The ids of the macros associated to this workspace"
        items:
          type: "integer"
        type: "array"
      macros:
        description: "The ids of the macros associated to this workspace"
        items:
          type: "integer"
        type: "array"
      position:
        description: "Ordering of the workspace relative to other workspaces"
        type: "integer"
      prefer_workspace_app_order:
        description: "If true, the order of apps within the workspace will be preserved"
        type: "boolean"
      selected_macros:
        description: "An array of the macro objects that will be used in this workspace. See [Macros](/api-reference/ticketing/business-rules/macros/)"
        items:
          $ref: "#/definitions/MacroObject"
        type: "array"
      ticket_form_id:
        description: "The id of the ticket web form associated to this workspace"
        type: "integer"
      title:
        description: "The title of the workspace"
        type: "string"
      updated_at:
        description: "The time of the last update of the workspace"
        format: "date-time"
        type: "string"
      url:
        description: "The URL for this resource"
        type: "string"
    type: "object"
  WorkspaceResponse:
    allOf:
    - properties:
        workspaces:
          items:
            $ref: "#/definitions/WorkspaceObject"
          type: "array"
      type: "object"
    - $ref: "#/definitions/OffsetPaginationObject"
    type: "object"
securityDefinitions:
  basicAuth:
    type: "basic"
security:
- basicAuth: []
tags:
- name: "Attachments"
- name: "Sessions"
- name: "Trigger Categories"
- name: "Tags"
- name: "Targets"
- name: "Target Failures"
- name: "Job Statuses"
- name: "Automations"
- name: "Tickets"
- name: "Email Notifications"
- name: "Lookup Relationships"
- name: "Dynamic Content"
- name: "Dynamic Content Item Variants"
- name: "Push Notification Devices"
- name: "Channel Framework"
- name: "X Channel"
- name: "Organizations"
- name: "Triggers"
- name: "Object Triggers"
- name: "Custom Roles"
- name: "Incremental Export"
- name: "Account Settings"
- name: "Ticket Metrics"
- name: "Groups"
- name: "Group Memberships"
- name: "Incremental Skill Based Routing"
- name: "Organization Memberships"
- name: "Sharing Agreements"
- name: "Search"
- name: "Workspaces"
- name: "Skill Based Routing"
- name: "Resource Collections"
- name: "Macros"
- name: "Organization Subscriptions"
- name: "Support Addresses"
- name: "User Passwords"
- name: "User Identities"
- name: "Activity Stream"
- name: "Group SLA Policies"
- name: "SLA Policies"
- name: "Ticket Audits"
- name: "Ticket Metric Events"
- name: "Brands"
- name: "Users"
- name: "Satisfaction Reasons"
- name: "Ticket Forms"
- name: "Suspended Tickets"
- name: "Satisfaction Ratings"
- name: "Ticket Comments"
- name: "Requests"
- name: "Audit Logs"
- name: "Views"
- name: "Ticket Import"
- name: "Organization Fields"
- name: "User Fields"
- name: "Ticket Fields"
- name: "Ticket Skips"
- name: "Bookmarks"
- name: "Reseller"
- name: "Basics"
- name: "AssigneeFieldAssignableGroups"
- name: "AssigneeFieldAssignableAgents"
- name: "Custom Ticket Statuses"
- name: "Locales"
- name: "Custom Objects"
- name: "Custom Object Fields"
- name: "Custom Object Records"
- name: "Essentials Card"
- name: "Omnichannel Routing Queues"
- name: "Deletion Schedules"
x-components:
  parameters:
    ActivityId:
      description: "The activity ID"
      in: "path"
      name: "activity_id"
      required: true
      type: "integer"
      x-example: 29183462
    ActivitySince:
      description: "A UTC time in ISO 8601 format to return ticket activities since said date."
      in: "query"
      name: "since"
      type: "string"
      x-example: "2013-04-03T16:02:46Z"
    AgentId:
      description: "ID of an agent"
      examples:
        default:
          value: 385473779372
      in: "path"
      name: "agent_id"
      required: true
      type: "integer"
    ArchiveImmediately:
      description: "If `true`, any ticket created with a `closed` status bypasses the normal ticket lifecycle and will be created directly in your ticket archive"
      in: "query"
      name: "archive_immediately"
      type: "boolean"
    AssigneeFieldSearchValue:
      description: "Query string used to search assignable groups & agents in the AssigneeField"
      in: "query"
      name: "name"
      required: true
      type: "string"
      x-example: "Johnny Agent"
    AttachmentId:
      description: "The ID of the attachment"
      in: "path"
      name: "attachment_id"
      required: true
      type: "integer"
      x-example: 498483
    AuditLogId:
      description: "The ID of the audit log"
      in: "path"
      name: "audit_log_id"
      required: true
      type: "integer"
      x-example: 498483
    AutomationActive:
      description: "Filter by active automations if true or inactive automations if false"
      in: "query"
      name: "active"
      type: "boolean"
      x-example: true
    AutomationId:
      description: "The ID of the automation"
      in: "path"
      name: "automation_id"
      required: true
      type: "integer"
      x-example: 25
    AutomationInclude:
      description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
      in: "query"
      name: "include"
      type: "string"
      x-example: "usage_24h"
    AutomationSearchQuery:
      description: "Query string used to find all automations with matching title"
      in: "query"
      name: "query"
      required: true
      type: "string"
      x-example: "close"
    AutomationSortBy:
      description: "Possible values are \"alphabetical\", \"created_at\", \"updated_at\", and \"position\". If unspecified, the automations are sorted by relevance"
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "position"
    AutomationSortOrder:
      description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "desc"
    BookmarkId:
      description: "The ID of the bookmark"
      in: "path"
      name: "bookmark_id"
      required: true
      type: "integer"
      x-example: 900000001111
    BrandId:
      description: "The ID of the brand"
      in: "path"
      name: "brand_id"
      required: true
      type: "integer"
      x-example: 360002783572
    CommentId:
      description: "The ID of the comment"
      in: "path"
      name: "comment_id"
      required: true
      type: "integer"
      x-example: 654321
    Creator:
      description: "If true, displays the `creator_user_id` and `creator_app_name` properties. If the ticket field is created\n by an app, `creator_app_name` is the name of the app and `creator_user_id` is `-1`. If the ticket field\n is not created by an app, then `creator_app_name` is null\n"
      in: "query"
      name: "creator"
      type: "boolean"
    CustomObjectFieldKeyOrId:
      description: "The key or id of a custom object field"
      in: "path"
      name: "custom_object_field_key_or_id"
      required: true
      type: "string"
      x-example: "make"
    CustomObjectKey:
      description: "The key of a custom object"
      in: "path"
      name: "custom_object_key"
      required: true
      type: "string"
      x-example: "car"
    CustomObjectRecordExternalId:
      description: "The external id of a custom object record"
      in: "query"
      name: "external_id"
      required: true
      type: "string"
      x-example: "X90001"
    CustomObjectRecordId:
      description: "The id of a custom object record"
      in: "path"
      name: "custom_object_record_id"
      required: true
      type: "string"
      x-example: "01GCSJW391QVSC80GYDH7E93Q6"
    CustomRoleId:
      description: "The ID of the custom agent role"
      in: "path"
      name: "custom_role_id"
      required: true
      type: "integer"
      x-example: 10127
    CustomStatusId:
      description: "The id of the custom status"
      in: "path"
      name: "custom_status_id"
      required: true
      type: "integer"
      x-example: 1234567
    DeletedUserId:
      description: "The ID of the deleted user"
      in: "path"
      name: "deleted_user_id"
      required: true
      type: "integer"
      x-example: 35436
    DeletionScheduleId:
      description: "The id of the deletion schedule"
      in: "path"
      name: "deletion_schedule_id"
      required: true
      type: "integer"
      x-example: 132828
    DynamicContentItemId:
      description: "The ID of the dynamic content item"
      in: "path"
      name: "dynamic_content_item_id"
      required: true
      type: "integer"
      x-example: 47
    DynamicContentVariantId:
      description: "The ID of the variant"
      in: "path"
      name: "dynammic_content_variant_id"
      required: true
      type: "integer"
      x-example: 23
    EmailNotificationsFilter:
      description: "Filters the email notifications by ticket, comment, or notification id.\n"
      enum:
      - "ticket_id"
      - "comment_id"
      - "notification_id"
      in: "query"
      name: "filter"
      type: "integer"
    EssentialsCardKey:
      description: "Essentials card type. Example: `zen:user` refers user type\n"
      in: "path"
      name: "object_type"
      required: true
      type: "string"
      x-example: "zen:user"
    ExcludeDeleted:
      description: "Whether to exclude deleted entities"
      in: "query"
      name: "exclude_deleted"
      type: "boolean"
      x-example: false
    GroupId:
      description: "The ID of the group"
      in: "path"
      name: "group_id"
      required: true
      type: "integer"
      x-example: 122
    GroupMembershipId:
      description: "The ID of the group membership"
      in: "path"
      name: "group_membership_id"
      required: true
      type: "integer"
      x-example: 4
    GroupSLAPolicyId:
      description: "The id of the Group SLA policy"
      in: "path"
      name: "group_sla_policy_id"
      required: true
      type: "integer"
      x-example: 36
    HostMapping:
      description: "The hostmapping to a brand, if any (only admins view this key)"
      in: "query"
      name: "host_mapping"
      required: true
      type: "string"
      x-example: "brand1.com"
    IncludeStandardFields:
      description: "Include standard fields if true. Exclude them if false"
      in: "query"
      name: "include_standard_fields"
      type: "boolean"
      x-example: true
    IncrementalCursor:
      description: "The cursor pointer to work with for all subsequent exports after the initial request"
      in: "query"
      name: "cursor"
      type: "string"
    IncrementalPage:
      description: "The number of records to return per page"
      in: "query"
      name: "per_page"
      type: "integer"
    IncrementalResource:
      description: "The resource requested for incremental sample export"
      in: "path"
      name: "incremental_resource"
      required: true
      type: "string"
      x-example: "tickets"
    IncrementalTimeQueryParameter:
      description: "A query start time for incremental exports"
      example: 1383685952
      in: "query"
      name: "unix_time"
      schema:
        type: "integer"
    IncrementalUnixTime:
      description: "The time to start the incremental export from. Must be at least one minute in the past. Data isn't provided for the most recent minute"
      in: "query"
      name: "start_time"
      required: true
      type: "integer"
      x-example: 1332034771
    JobStatusId:
      description: "the Id of the Job status"
      in: "path"
      name: "job_status_id"
      required: true
      type: "string"
      x-example: "8b726e606741012ffc2d782bcb7848fe"
    LocaleId:
      description: "The ID or the [BCP-47 code](https://en.wikipedia.org/wiki/IETF_language_tag) of the locale. Examples: es-419, en-us, pr-br\n"
      in: "path"
      name: "locale_id"
      required: true
      type: "string"
      x-example: "es-419"
    LookupRelationshipAutocompleteFieldIdFragment:
      description: "The id of a lookup relationship field.  The type of field is determined\nby the `source` param\n"
      in: "query"
      name: "field_id"
      type: "string"
    LookupRelationshipAutocompleteSourceFragment:
      description: "If a `field_id` is provided, this specifies the type of the field.\nFor example, if the field is on a \"zen:user\", it references a field on a user\n"
      examples:
        organization:
          summary: "A reference to an organization"
          value: "zen:organization"
        ticket:
          summary: "A reference to a ticket"
          value: "zen:ticket"
        user:
          summary: "A reference to a user"
          value: "zen:user"
      in: "query"
      name: "source"
      type: "string"
    MacroAccess:
      description: "Filter macros by access. Possible values are \"personal\", \"agents\", \"shared\", or \"account\". The \"agents\" value returns all personal macros for the account's agents and is only available to admins."
      in: "query"
      name: "access"
      type: "string"
      x-example: "personal"
    MacroActive:
      description: "Filter by active macros if true or inactive macros if false"
      in: "query"
      name: "active"
      type: "boolean"
      x-example: true
    MacroCategory:
      description: "Filter macros by category"
      in: "query"
      name: "category"
      type: "integer"
      x-example: 25
    MacroGroupId:
      description: "Filter macros by group"
      in: "query"
      name: "group_id"
      type: "integer"
      x-example: 25
    MacroId:
      description: "The ID of the macro"
      in: "path"
      name: "macro_id"
      required: true
      type: "integer"
      x-example: 25
    MacroIdQuery:
      description: "The ID of the macro to replicate"
      in: "query"
      name: "macro_id"
      required: true
      type: "integer"
      x-example: 25
    MacroInclude:
      description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
      in: "query"
      name: "include"
      type: "string"
      x-example: "usage_7d"
    MacroOnlyViewable:
      description: "If true, returns only macros that can be applied to tickets. If false, returns all macros the current user can manage. Default is false"
      in: "query"
      name: "only_viewable"
      type: "boolean"
      x-example: false
    MacroQuery:
      description: "Query string used to find macros with matching titles"
      in: "query"
      name: "query"
      required: true
      type: "string"
      x-example: "close"
    MacroSortBy:
      description: "Possible values are alphabetical, \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", \"usage_7d\", or \"usage_30d\". Defaults to alphabetical"
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "alphabetical"
    MacroSortOrder:
      description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "asc"
    MonitoredTwitterHandleId:
      description: "The ID of the custom agent role"
      in: "path"
      name: "monitored_twitter_handle_id"
      required: true
      type: "integer"
      x-example: 431
    NotificationId:
      description: "The id of the email notification"
      in: "path"
      name: "notification_id"
      required: true
      type: "integer"
      x-example: 7824075373693
    ObjectKey:
      description: "Custom object type. Example: `zen:custom_object:car` refers to a custom object type with the\n`car` key\n"
      example: "zen:custom_object:car"
      in: "path"
      name: "object_zrn_type"
      required: true
      schema:
        type: "string"
    OcrQueueId:
      description: "The id of the omnichannel routing queue"
      in: "path"
      name: "queue_id"
      required: true
      type: "string"
      x-example: "01HG80ATNNZK1N7XRFVKX48XD6"
    OrganizationExternalId:
      description: "The external id of an organization"
      in: "query"
      name: "external_id"
      type: "integer"
      x-example: 1234
    OrganizationExternalIds:
      description: "A list of external ids"
      in: "query"
      name: "external_ids"
      type: "string"
      x-example: "1764,42156"
    OrganizationFieldId:
      description: "The ID or key of the organization field"
      in: "path"
      name: "organization_field_id"
      required: true
      x-example: "my_text_field"
    OrganizationId:
      description: "The ID of an organization"
      in: "path"
      name: "organization_id"
      required: true
      type: "integer"
      x-example: 16
    OrganizationIds:
      description: "A list of organization ids"
      in: "query"
      name: "ids"
      type: "string"
      x-example: "35436,20057623"
    OrganizationMembershipId:
      description: "The ID of the organization membership"
      in: "path"
      name: "organization_membership_id"
      required: true
      type: "integer"
      x-example: 4
    OrganizationMergeId:
      description: "The ID of the organization merge"
      in: "path"
      name: "organization_merge_id"
      required: true
      type: "string"
      x-example: "01HPZM6206BF4G63783E5349AD"
    OrganizationName:
      description: "The name of an organization"
      in: "query"
      name: "name"
      type: "string"
      x-example: "ACME Incorporated"
    OrganizationQueryFragment:
      description: "A substring of an organization to search for"
      in: "query"
      name: "name"
      required: true
      type: "string"
      x-example: "imp"
    OrganizationSubscriptionId:
      description: "The ID of the organization subscription"
      in: "path"
      name: "organization_subscription_id"
      required: true
      type: "integer"
      x-example: 35436
    RequestId:
      description: "The ID of the request"
      in: "path"
      name: "request_id"
      required: true
      type: "integer"
      x-example: 33
    ResourceCollectionId:
      description: "The id of the resource collection"
      in: "path"
      name: "resource_collection_id"
      required: true
      type: "integer"
      x-example: 10002
    SLAPolicyId:
      description: "The ID of the SLA Policy"
      in: "path"
      name: "sla_policy_id"
      required: true
      type: "integer"
      x-example: 36
    SessionId:
      description: "The ID of the session"
      in: "path"
      name: "session_id"
      required: true
      type: "integer"
      x-example: 14
    SharingAgreementId:
      description: "The ID of the sharing agreement"
      in: "path"
      name: "sharing_agreement_id"
      required: true
      type: "integer"
      x-example: 1
    SkillBasedRoutingAttributeId:
      description: "The ID of the skill-based routing attribute"
      in: "path"
      name: "attribute_id"
      required: true
      type: "string"
      x-example: "6e279587-e930-11e8-a292-09cfcdea1b75"
    SkillBasedRoutingAttributeValueId:
      description: "The ID of the skill-based routing attribute value"
      in: "path"
      name: "attribute_value_id"
      required: true
      type: "string"
      x-example: "b376b35a-e38b-11e8-a292-e3b6377c5575"
    SkipTicketUserId:
      description: "User ID of an agent"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    Sort:
      description: "The field to sort the list.  Possible values are \"created_at\", \"updated_at\" (ascending order) or \"-created_at\", \"-updated_at\" (descending order)"
      in: "query"
      name: "sort"
      type: "string"
      x-example: "updated_at"
    Subdomain:
      description: "Subdomain for a given Zendesk account address"
      in: "query"
      name: "subdomain"
      required: true
      type: "string"
      x-example: "Brand1"
    SupportAddressId:
      description: "The ID of the support address"
      in: "path"
      name: "support_address_id"
      required: true
      type: "integer"
      x-example: 33
    SuspendedTicketId:
      description: "id of the suspended ticket"
      in: "path"
      name: "id"
      required: true
      type: "number"
      x-example: 35436
    SuspendedTicketIds:
      description: "A list of suspended ticket ids"
      example: "3436,3437"
      in: "query"
      name: "ids"
      schema:
        type: "string"
    SuspendedTicketsDeleteIds:
      description: "A comma separated list of ids of suspended tickets to delete."
      in: "query"
      name: "ids"
      required: true
      type: "string"
      x-example: "94,141"
    SuspendedTicketsRecoverIds:
      description: "A comma separated list of ids of suspended tickets to recover."
      in: "query"
      name: "ids"
      required: true
      type: "string"
      x-example: "14,77"
    SuspendedTicketsSortBy:
      description: "The field to sort the suspended tickets by. One of \"author_email\", \"cause\", \"created_at\", or \"subject\""
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "author_email"
    SuspendedTicketsSortOrder:
      description: "The order in which to sort the suspended tickets.  This can take value `asc` or `desc`."
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "asc"
    TagNameFragment:
      description: "A substring of a tag to search for"
      in: "query"
      name: "name"
      type: "string"
      x-example: "att"
    TargetFailureId:
      description: "The ID of the target failure"
      in: "path"
      name: "target_failure_id"
      required: true
      type: "integer"
      x-example: 1
    TargetId:
      description: "The ID of the target"
      in: "path"
      name: "target_id"
      required: true
      type: "integer"
      x-example: 211
    TicketAuditId:
      description: "The ID of the ticket audit"
      in: "path"
      name: "ticket_audit_id"
      required: true
      type: "integer"
      x-example: 2127301143
    TicketCommentId:
      description: "The ID of the ticket comment"
      in: "path"
      name: "ticket_comment_id"
      required: true
      type: "integer"
      x-example: 35436
    TicketFieldId:
      description: "The ID of the ticket field"
      in: "path"
      name: "ticket_field_id"
      required: true
      type: "integer"
      x-example: 34
    TicketFieldOptionId:
      description: "The ID of the ticket field option"
      in: "path"
      name: "ticket_field_option_id"
      required: true
      type: "integer"
      x-example: 10001
    TicketFormId:
      description: "The ID of the ticket form"
      in: "path"
      name: "ticket_form_id"
      required: true
      type: "integer"
      x-example: 47
    TicketId:
      description: "The ID of the ticket"
      in: "path"
      name: "ticket_id"
      required: true
      type: "integer"
      x-example: 123456
    TicketIds:
      description: "Comma-separated list of ticket ids"
      in: "query"
      name: "ids"
      required: true
      type: "string"
      x-example: "35436,35437"
    TicketSortBy:
      description: "Sort by"
      enum:
      - "id"
      - "subject"
      - "deleted_at"
      in: "query"
      name: "sort_by"
      type: "string"
    TicketSortOrder:
      description: "Sort order. Defaults to \"asc\""
      enum:
      - "asc"
      - "desc"
      in: "query"
      name: "sort_order"
      type: "string"
    TriggerActive:
      description: "Filter by active triggers if true or inactive triggers if false"
      in: "query"
      name: "active"
      type: "boolean"
      x-example: true
    TriggerCategoryId:
      description: "Filter triggers by category ID"
      in: "query"
      name: "category_id"
      type: "string"
      x-example: "10026"
    TriggerId:
      description: "The ID of the trigger"
      in: "path"
      name: "trigger_id"
      required: true
      type: "integer"
      x-example: 198
    TriggerIds:
      description: "A comma separated list of trigger IDs"
      in: "query"
      name: "ids"
      required: true
      type: "string"
      x-example: "131,178,938"
    TriggerInclude:
      description: "A sideload to include in the response. See [Sideloads](#sideloads-2)"
      in: "query"
      name: "include"
      type: "string"
      x-example: "usage_24h"
    TriggerRevisionId:
      description: "The ID of the revision for a particular trigger"
      in: "path"
      name: "trigger_revision_id"
      required: true
      type: "integer"
      x-example: 1
    TriggerSearchFilter:
      description: "Trigger attribute filters for the search. See [Filter](#filter)"
      in: "query"
      name: "filter"
      type: "object"
    TriggerSearchQuery:
      description: "Query string used to find all triggers with matching title"
      in: "query"
      name: "query"
      required: true
      type: "string"
      x-example: "important_trigger"
    TriggerSort:
      description: "Cursor-based pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", or \"position\"."
      in: "query"
      name: "sort"
      type: "string"
      x-example: "position"
    TriggerSortBy:
      description: "Offset pagination only. Possible values are \"alphabetical\", \"created_at\", \"updated_at\", \"usage_1h\", \"usage_24h\", or \"usage_7d\". Defaults to \"position\""
      in: "query"
      name: "sort_by"
      type: "string"
      x-example: "position"
    TriggerSortOrder:
      description: "One of \"asc\" or \"desc\". Defaults to \"asc\" for alphabetical and position sort, \"desc\" for all others"
      in: "query"
      name: "sort_order"
      type: "string"
      x-example: "desc"
    UserExternalIdFilter:
      description: "List users by external id. External id has to be unique for each user under the same account."
      in: "query"
      name: "external_id"
      type: "string"
      x-example: "abc"
    UserFieldId:
      description: "The ID or key of the user field"
      in: "path"
      name: "user_field_id"
      required: true
      x-example: "my_text_field"
    UserFieldOptionId:
      description: "The ID of the user field option"
      in: "path"
      name: "user_field_option_id"
      required: true
      type: "integer"
      x-example: 10001
    UserId:
      description: "The id of the user"
      in: "path"
      name: "user_id"
      required: true
      type: "integer"
      x-example: 35436
    UserIdentityId:
      description: "The ID of the user identity"
      in: "path"
      name: "user_identity_id"
      required: true
      type: "integer"
      x-example: 77938
    UserPermissionSetFilter:
      description: "For custom roles which is available on the Enterprise plan and above. You can only filter by one role ID per request"
      in: "query"
      name: "permission_set"
      type: "integer"
      x-example: 123
    UserRoleFilter:
      description: "Filters the results by role. Possible values are \"end-user\", \"agent\", or \"admin\"\n"
      enum:
      - "end-user"
      - "agent"
      - "admin"
      in: "query"
      name: "role"
      type: "string"
      x-example: "agent"
    UserRolesFilter:
      description: "Filters the results by more than one role using the format `role[]={role}&role[]={role}`\n"
      in: "query"
      name: "role[]"
      type: "string"
      x-example: "agent"
    ViewId:
      description: "The ID of the view"
      in: "path"
      name: "view_id"
      required: true
      type: "integer"
      x-example: 25
    WorkspaceId:
      description: "The id of the workspace"
      in: "path"
      name: "workspace_id"
      required: true
      type: "integer"
      x-example: 3133
  examples:
    AccountSettingsResponseExample:
      value:
        settings:
          active_features:
            advanced_analytics: false
            agent_forwarding: false
            allow_ccs: true
            allow_email_template_customization: true
            automatic_answers: false
            bcc_archiving: false
            benchmark_opt_out: false
            business_hours: false
            chat: false
            chat_about_my_ticket: false
            csat_reason_code: false
            custom_dkim_domain: true
            customer_context_as_default: false
            customer_satisfaction: false
            dynamic_contents: false
            explore: true
            explore_on_support_ent_plan: false
            explore_on_support_pro_plan: false
            facebook: false
            facebook_login: false
            fallback_composer: false
            forum_analytics: true
            good_data_and_explore: false
            google_login: false
            insights: false
            is_abusive: false
            light_agents: false
            markdown: false
            on_hold_status: false
            organization_access_enabled: true
            rich_content_in_emails: true
            sandbox: false
            satisfaction_prediction: false
            suspended_ticket_notification: false
            ticket_forms: true
            ticket_tagging: true
            topic_suggestion: false
            twitter: true
            twitter_login: false
            user_org_fields: true
            user_tagging: true
            voice: true
          agents:
            agent_home: false
            agent_workspace: false
            aw_self_serve_migration_enabled: true
            focus_mode: false
            idle_timeout_enabled: false
            unified_agent_statuses: false
          api:
            accepted_api_agreement: true
            api_password_access: "true"
            api_token_access: "true"
          apps:
            create_private: true
            create_public: false
            use: true
          billing:
            backend: "zuora"
          branding:
            favicon_url: null
            header_color: "78A300"
            header_logo_url: null
            page_background_color: "333333"
            tab_background_color: "7FA239"
            text_color: "FFFFFF"
          brands:
            default_brand_id: 1873
            require_brand_on_new_tickets: false
          cdn:
            cdn_provider: "default"
            fallback_cdn_provider: "cloudfront"
            hosts:
            - name: "default"
              url: "https://p18.zdassets.com"
            - name: "cloudfront"
              url: "https://d2y9oszrd3dhjh.cloudfront.net"
          chat:
            available: true
            enabled: false
            integrated: true
            maximum_request_count: 1
            welcome_message: "Hi there. How can I help today?"
          cross_sell:
            show_chat_tooltip: true
            xsell_source: null
          gooddata_advanced_analytics:
            enabled: true
          google_apps:
            has_google_apps: false
            has_google_apps_admin: false
          groups:
            check_group_name_uniqueness: true
          limits:
            attachment_size: 52428800
          localization:
            locale_ids:
            - 1042
          lotus:
            pod_id: 999
            prefer_lotus: true
            reporting: true
          metrics:
            account_size: "100-399"
          onboarding:
            checklist_onboarding_version: 2
            onboarding_segments: null
            product_sign_up: null
          routing:
            autorouting_tag: ""
            enabled: false
            max_email_capacity: 0
            max_messaging_capacity: 0
          rule:
            macro_most_used: true
            macro_order: "alphabetical"
            skill_based_filtered_views: []
            using_skill_based_routing: false
          side_conversations:
            email_channel: false
            msteams_channel: false
            show_in_context_panel: false
            slack_channel: false
            tickets_channel: false
          statistics:
            forum: true
            rule_usage: true
            search: true
          ticket_form:
            raw_ticket_forms_instructions: "Please choose your issue below"
            ticket_forms_instructions: "Please choose your issue below"
          tickets:
            accepted_new_collaboration_tos: false
            agent_collision: true
            agent_invitation_enabled: true
            agent_ticket_deletion: false
            allow_group_reset: true
            assign_default_organization: true
            assign_tickets_upon_solve: true
            auto_translation_enabled: false
            auto_updated_ccs_followers_rules: false
            chat_sla_enablement: false
            collaboration: true
            comments_public_by_default: true
            default_solved_ticket_reassignment_strategy: "legacy"
            email_attachments: false
            emoji_autocompletion: true
            follower_and_email_cc_collaborations: false
            has_color_text: true
            is_first_comment_private_enabled: true
            light_agent_email_ccs_allowed: false
            list_empty_views: true
            list_newest_comments_first: true
            markdown_ticket_comments: false
            maximum_personal_views_to_list: 8
            modern_ticket_reassignment: false
            private_attachments: false
            rich_text_comments: true
            show_modern_ticket_reassignment: false
            status_hold: false
            tagging: true
            using_skill_based_routing: false
          twitter:
            shorten_url: "optional"
          user:
            agent_created_welcome_emails: true
            end_user_phone_number_validation: false
            have_gravatars_enabled: true
            language_selection: true
            multiple_organizations: false
            tagging: true
            time_zone_selection: true
          voice:
            agent_confirmation_when_forwarding: true
            agent_wrap_up_after_calls: true
            enabled: true
            logging: true
            maximum_queue_size: 5
            maximum_queue_wait_time: 1
            only_during_business_hours: false
            outbound_enabled: true
            recordings_public: true
            uk_mobile_forwarding: true
    ActivitiesCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 102
    ActivitiesResponseExample:
      value:
        activities:
        - actor:
            tags: []
            active: true
            alias: ""
            created_at: "2020-11-17T00:32:12Z"
            custom_role_id: null
            default_group_id: 1873
            details: ""
            email: "cgoddard+ted@zendesk.com"
            external_id: null
            iana_time_zone: "America/Juneau"
            id: 158488612
            last_login_at: "2020-11-17T00:33:44Z"
            locale: "en-gb"
            locale_id: 5
            moderator: true
            name: "Tedd"
            notes: ""
            only_private_comments: false
            organization_id: null
            phone: null
            photo: null
            report_csv: true
            restricted_agent: false
            role: "admin"
            role_type: null
            shared: false
            shared_agent: false
            shared_phone_number: null
            signature: ""
            suspended: false
            ticket_restriction: null
            time_zone: "Alaska"
            two_factor_auth_enabled: null
            updated_at: "2020-11-17T00:34:38Z"
            url: "https://example.zendesk.com/api/v2/users/158488612.json"
            user_fields:
              its_remember_september: null
              skittles: null
              user_field_1: null
            verified: true
          actor_id: 158488612
          created_at: "2020-11-17T00:34:40Z"
          id: 29183462
          object:
            ticket:
              id: 1521
              subject: "test"
          target:
            ticket:
              id: 1521
              subject: "test"
          title: "Tedd assigned ticket #1521 to you."
          updated_at: "2020-11-17T00:34:40Z"
          url: "https://example.zendesk.com/api/v2/activities/29183462.json"
          user:
            tags:
            - "101"
            active: true
            alias: "test"
            created_at: "2017-08-14T20:13:53Z"
            custom_role_id: null
            default_group_id: 1873
            details: ""
            email: "user@zendesk.com"
            external_id: "oev7jj"
            iana_time_zone: "Pacific/Pago_Pago"
            id: 3343
            last_login_at: "2020-11-16T22:57:45Z"
            locale: "en-gb"
            locale_id: 5
            moderator: true
            name: "Samwise Gamgee"
            notes: "test"
            only_private_comments: false
            organization_id: 1873
            phone: null
            photo:
              content_type: "image/gif"
              content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
              deleted: false
              file_name: "1f84950b8d7949b3.gif"
              height: 80
              id: 8730791
              inline: false
              mapped_content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
              size: 4566
              thumbnails:
              - content_type: "image/gif"
                content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
                deleted: false
                file_name: "1f84950b8d7949b3_thumb.gif"
                height: 32
                id: 8730801
                inline: false
                mapped_content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
                size: 1517
                url: "https://example.zendesk.com/api/v2/attachments/8730801.json"
                width: 32
              url: "https://example.zendesk.com/api/v2/attachments/8730791.json"
              width: 80
            report_csv: true
            restricted_agent: false
            role: "admin"
            role_type: null
            shared: false
            shared_agent: false
            shared_phone_number: null
            signature: "test"
            suspended: false
            ticket_restriction: null
            time_zone: "American Samoa"
            two_factor_auth_enabled: null
            updated_at: "2020-11-17T00:33:55Z"
            url: "https://example.zendesk.com/api/v2/users/3343.json"
            user_fields:
              its_remember_september: null
              skittles: "2018-09-14T00:00:00+00:00"
              user_field_1: "101"
            verified: true
          user_id: 3343
          verb: "tickets.assignment"
        actors:
        - tags: []
          active: true
          alias: ""
          created_at: "2020-11-17T00:32:12Z"
          custom_role_id: null
          default_group_id: 1873
          details: ""
          email: "cgoddard+ted@zendesk.com"
          external_id: null
          iana_time_zone: "America/Juneau"
          id: 158488612
          last_login_at: "2020-11-17T00:33:44Z"
          locale: "en-gb"
          locale_id: 5
          moderator: true
          name: "Tedd"
          notes: ""
          only_private_comments: false
          organization_id: null
          phone: null
          photo: null
          report_csv: true
          restricted_agent: false
          role: "admin"
          role_type: null
          shared: false
          shared_agent: false
          shared_phone_number: null
          signature: ""
          suspended: false
          ticket_restriction: null
          time_zone: "Alaska"
          two_factor_auth_enabled: null
          updated_at: "2020-11-17T00:34:38Z"
          url: "https://example.zendesk.com/api/v2/users/158488612.json"
          user_fields:
            its_remember_september: null
            skittles: null
            user_field_1: null
          verified: true
        count: 1
        next_page: null
        previous_page: null
        users:
        - tags:
          - "101"
          active: true
          alias: "test"
          created_at: "2017-08-14T20:13:53Z"
          custom_role_id: null
          default_group_id: 1873
          details: ""
          email: "user@zendesk.com"
          external_id: "oev7jj"
          iana_time_zone: "Pacific/Pago_Pago"
          id: 3343
          last_login_at: "2020-11-16T22:57:45Z"
          locale: "en-gb"
          locale_id: 5
          moderator: true
          name: "Samwise Gamgee"
          notes: "test"
          only_private_comments: false
          organization_id: 1873
          phone: null
          photo:
            content_type: "image/gif"
            content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
            deleted: false
            file_name: "1f84950b8d7949b3.gif"
            height: 80
            id: 8730791
            inline: false
            mapped_content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
            size: 4566
            thumbnails:
            - content_type: "image/gif"
              content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
              deleted: false
              file_name: "1f84950b8d7949b3_thumb.gif"
              height: 32
              id: 8730801
              inline: false
              mapped_content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
              size: 1517
              url: "https://example.zendesk.com/api/v2/attachments/8730801.json"
              width: 32
            url: "https://example.zendesk.com/api/v2/attachments/8730791.json"
            width: 80
          report_csv: true
          restricted_agent: false
          role: "admin"
          role_type: null
          shared: false
          shared_agent: false
          shared_phone_number: null
          signature: "test"
          suspended: false
          ticket_restriction: null
          time_zone: "American Samoa"
          two_factor_auth_enabled: null
          updated_at: "2020-11-17T00:33:55Z"
          url: "https://example.zendesk.com/api/v2/users/3343.json"
          user_fields:
            its_remember_september: null
            skittles: "2018-09-14T00:00:00+00:00"
            user_field_1: "101"
          verified: true
    ActivityResponseExample:
      value:
        activity:
          actor:
            tags: []
            active: true
            alias: ""
            created_at: "2020-11-17T00:32:12Z"
            custom_role_id: null
            default_group_id: 1873
            details: ""
            email: "cgoddard+ted@zendesk.com"
            external_id: null
            iana_time_zone: "America/Juneau"
            id: 158488612
            last_login_at: "2020-11-17T00:33:44Z"
            locale: "en-gb"
            locale_id: 5
            moderator: true
            name: "Tedd"
            notes: ""
            only_private_comments: false
            organization_id: null
            phone: null
            photo: null
            report_csv: true
            restricted_agent: false
            role: "admin"
            role_type: null
            shared: false
            shared_agent: false
            shared_phone_number: null
            signature: ""
            suspended: false
            ticket_restriction: null
            time_zone: "Alaska"
            two_factor_auth_enabled: null
            updated_at: "2020-11-17T00:34:38Z"
            url: "https://example.zendesk.com/api/v2/users/158488612.json"
            user_fields:
              its_remember_september: null
              skittles: null
              user_field_1: null
            verified: true
          actor_id: 158488612
          created_at: "2020-11-17T00:34:40Z"
          id: 29183462
          object:
            ticket:
              id: 1521
              subject: "test"
          target:
            ticket:
              id: 1521
              subject: "test"
          title: "Tedd assigned ticket #1521 to you."
          updated_at: "2020-11-17T00:34:40Z"
          url: "https://example.zendesk.com/api/v2/activities/29183462.json"
          user:
            tags:
            - "101"
            active: true
            alias: "test"
            created_at: "2017-08-14T20:13:53Z"
            custom_role_id: null
            default_group_id: 1873
            details: ""
            email: "user@zendesk.com"
            external_id: "oev7jj"
            iana_time_zone: "Pacific/Pago_Pago"
            id: 3343
            last_login_at: "2020-11-16T22:57:45Z"
            locale: "en-gb"
            locale_id: 5
            moderator: true
            name: "Samwise Gamgee"
            notes: "test"
            only_private_comments: false
            organization_id: 1873
            phone: null
            photo:
              content_type: "image/gif"
              content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
              deleted: false
              file_name: "1f84950b8d7949b3.gif"
              height: 80
              id: 8730791
              inline: false
              mapped_content_url: "https://example.zendesk.com/system/photos/8730791/1f84950b8d7949b3.gif"
              size: 4566
              thumbnails:
              - content_type: "image/gif"
                content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
                deleted: false
                file_name: "1f84950b8d7949b3_thumb.gif"
                height: 32
                id: 8730801
                inline: false
                mapped_content_url: "https://example.zendesk.com/system/photos/8730801/1f84950b8d7949b3_thumb.gif"
                size: 1517
                url: "https://example.zendesk.com/api/v2/attachments/8730801.json"
                width: 32
              url: "https://example.zendesk.com/api/v2/attachments/8730791.json"
              width: 80
            report_csv: true
            restricted_agent: false
            role: "admin"
            role_type: null
            shared: false
            shared_agent: false
            shared_phone_number: null
            signature: "test"
            suspended: false
            ticket_restriction: null
            time_zone: "American Samoa"
            two_factor_auth_enabled: null
            updated_at: "2020-11-17T00:33:55Z"
            url: "https://example.zendesk.com/api/v2/users/3343.json"
            user_fields:
              its_remember_september: null
              skittles: "2018-09-14T00:00:00+00:00"
              user_field_1: "101"
            verified: true
          user_id: 3343
          verb: "tickets.assignment"
    AddTagsByObjectIdResponseExample:
      value:
        tags:
        - "urgent"
        - "printer"
        - "fire"
        - "paper"
    AssigneeFieldAssignableGroupAgentsResponseExample:
      value:
        agents:
        - avatar_url: "https://z3n-example.zendesk.com/system/photos/900005192023/my_profile.png"
          id: 6473829100
          name: "Joe Smith"
        - avatar_url: "https://z3n-example.zendesk.com/system/photos/412005192023/my_profile.png"
          id: 9182736400
          name: "Jane Doe"
        - avatar_url: "https://z3n-example.zendesk.com/system/photos/887005192023/my_profile.png"
          id: 1928373460
          name: "Cookie Monster"
        count: 3
        next_page: null
        previous_page: null
    AssigneeFieldAssignableGroupsAndAgentsSearchResponseExample:
      value:
        agents:
        - group: "Tech"
          group_id: 6574839201
          id: 8392017465
          name: "Sam Technologist"
          photo_url: "https://z3n-example.zendesk.com/system/photos/410305192023/my_profile.png"
        count: 2
        groups:
        - id: 6574839201
          name: "Tech"
    AssigneeFieldAssignableGroupsResponseExample:
      value:
        count: 3
        groups:
        - description: "Engineering"
          id: 9182736455
          name: "Group for Bugs for Engineering"
        - description: "Product"
          id: 1928374655
          name: "Group for feature requests"
        - description: "Customer Support"
          id: 5519283746
          name: "Group for customer inquiries"
        next_page: null
        previous_page: null
    AttachmentResponseExample:
      value:
        attachment:
          content_type: "application/binary"
          content_url: "https://company.zendesk.com/attachments/myfile.dat"
          file_name: "myfile.dat"
          id: 498483
          size: 2532
          thumbnails: []
          url: "https://company.zendesk.com/api/v2/attachments/498483.json"
    AttachmentUpdateRequestExample:
      value:
        attachment:
          malware_access_override: true
    AttachmentUploadResponseExample:
      value:
        upload:
          attachment:
            content_type: "image/png"
            content_url: "https://company.zendesk.com/attachments/token/tyBq1ms40dFaHefSIigxZpwGg/?name=crash.png"
            deleted: false
            file_name: "crash.png"
            height: "62"
            id: 1503729607981
            inline: false
            mapped_content_url: "https://company.zendesk.com/attachments/token/tyBq1ms40dFaHefSIigxZpwGg/?name=crash.png"
            size: 5172
            thumbnails: []
            url: "https://company.zendesk.com/api/v2/attachments/1503729607981.json"
            width: "80"
          attachments:
          - content_type: "image/png"
            content_url: "https://company.zendesk.com/attachments/token/tyBq1ms40dFaHefSIigxZpwGg/?name=crash.png"
            deleted: false
            file_name: "crash.png"
            height: "62"
            id: 1503729607981
            inline: false
            mapped_content_url: "https://company.zendesk.com/attachments/token/tyBq1ms40dFaHefSIigxZpwGg/?name=crash.png"
            size: 5172
            thumbnails: []
            url: "https://company.zendesk.com/api/v2/attachments/1503729607981.json"
            width: "80"
          token: "LXJdriewLBP8JrtzzkN7Ne4k6"
    AuditLogResponseExample:
      value:
        audit_log:
          action: "update"
          actor_id: 1234
          actor_name: "Sameer Patel"
          change_description: "Role changed from Administrator to End User"
          created_at: "2012-03-05T11:32:44Z"
          id: 498483
          ip_address: "209.119.38.228"
          source_id: 3456
          source_label: "John Doe"
          source_type: "user"
          url: "https://company.zendesk.com/api/v2/audit_logs/498483.json"
    AuditLogsResponseExample:
      value:
        audit_logs:
        - action: "update"
          actor_id: 1234
          actor_name: "Sameer Patel"
          change_description: "Role changed from Administrator to End User"
          created_at: "2012-03-05T11:32:44Z"
          id: 498483
          ip_address: "209.119.38.228"
          source_id: 3456
          source_label: "John Doe"
          source_type: "user"
          url: "https://company.zendesk.com/api/v2/audit_logs/498483.json"
    AutocompleteOrganizationsResponseExample:
      value:
        count: 2
        next_page: null
        organizations:
        - tags:
          - "smiley"
          - "teapot_kettle"
          created_at: "2018-11-14T00:14:52Z"
          details: "caterpillar =)"
          domain_names:
          - "remain.com"
          external_id: null
          group_id: 1835962
          id: 35436
          name: "Important Customers"
          notes: "donkey"
          organization_fields:
            datepudding: "2018-11-04T00:00:00+00:00"
            org_field_1: "happy happy"
            org_field_2: "teapot_kettle"
          shared_comments: false
          shared_tickets: false
          updated_at: "2018-11-14T00:54:22Z"
          url: "https://example.zendesk.com/api/v2/organizations/4112492.json"
        - tags:
          - "teapot_kettle"
          created_at: "2017-08-14T20:13:52Z"
          details: "test"
          domain_names:
          - "test.com"
          external_id: null
          group_id: null
          id: 20057623
          name: "Imperial College"
          notes: ""
          organization_fields:
            datepudding: "2018-11-02T00:00:00+00:00"
            org_field_1: "malarky"
            org_field_2: "teapot_kettle"
          shared_comments: false
          shared_tickets: false
          updated_at: "2019-05-16T01:27:46Z"
          url: "https://example.zendesk.com.com/api/v2/organizations/1873.json"
        previous_page: null
    AutomationCreateResponseExample:
      value:
        automation:
          actions:
          - field: "priority"
            value: "high"
          active: true
          conditions:
            all:
            - field: "status"
              operator: "is"
              value: "open"
            - field: "priority"
              operator: "less_than"
              value: "high"
            any: []
          id: 9873843
          position: 8
          raw_title: "Roger Wilco"
          title: "Roger Wilco"
    AutomationResponseExample:
      value:
        automation:
          actions:
          - field: "status"
            value: "open"
          - field: "assignee_id"
            value: "296220096"
          active: true
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "current_tags"
              operator: "includes"
              value: "hello"
          id: 25
          position: 8
          raw_title: "Close and Save"
          title: "Close and Save"
    AutomationsResponseExample:
      value:
        automations:
        - actions:
          - field: "status"
            value: "open"
          - field: "assignee_id"
            value: "296220096"
          active: true
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "current_tags"
              operator: "includes"
              value: "hello"
          id: 25
          position: 8
          raw_title: "Close and Save"
          title: "Close and Save"
        - actions:
          - field: "status"
            value: "open"
          - field: "assignee_id"
            value: "296220096"
          active: false
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "current_tags"
              operator: "includes"
              value: "hello"
          id: 26
          position: 9
          raw_title: "{{dc.assign_priority_tag}}"
          title: "Assign priority tag"
        count: 2
        next_page: null
        previous_page: null
    AutomationsSearchResponseExample:
      value:
        automations:
        - actions:
          - field: "status"
            value: "open"
          - field: "assignee_id"
            value: "296220096"
          active: true
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "current_tags"
              operator: "includes"
              value: "hello"
          id: 25
          position: 9
          raw_title: "Close and Save"
          title: "Close and Save"
        - actions:
          - field: "status"
            value: "open"
          - field: "assignee_id"
            value: "296220096"
          active: true
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "current_tags"
              operator: "includes"
              value: "hello"
          id: 28
          position: 9
          raw_title: "{{dc.close_and_redirect}}"
          title: "Close and redirect to topics"
        count: 2
        next_page: null
        previous_page: null
    AutomationsUpdateManyResponseExample:
      value:
        automations:
        - actions:
          - field: "status"
            value: "open"
          - field: "assignee_id"
            value: "296220096"
          active: true
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "current_tags"
              operator: "includes"
              value: "hello"
          id: 25
          position: 15
          raw_title: "Close and Save"
          title: "Close and Save"
        - actions:
          - field: "status"
            value: "open"
          - field: "assignee_id"
            value: "296220096"
          active: false
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "current_tags"
              operator: "includes"
              value: "hello"
          id: 26
          position: 8
          raw_title: "{{dc.assign_priority_tag}}"
          title: "Assign priority tag"
        count: 2
        next_page: null
        previous_page: null
    BookmarkCreateRequest:
      value:
        bookmark:
          ticket_id: 113
    BookmarkResponse:
      value:
        bookmark:
          created_at: "2020-10-01T08:33:45Z"
          id: 900000009567
          ticket:
            id: 123
            priority: "high"
            raw_subject: "Chat with Visitor 19785128"
            requester_id: 156
            subject: "Chat with Visitor 19785128"
            url: "https://{subdomain}.zendesk.com/api/v2/tickets/123.json"
          url: "https://{subdomain}.zendesk.com/api/v2/bookmarks/900000001111.json"
    BookmarksResponse:
      value:
        bookmarks:
        - created_at: "2020-10-01T08:33:45Z"
          id: 900000009567
          ticket:
            id: 123
            priority: "high"
            raw_subject: "Chat with Visitor 19785128"
            requester_id: 165
            subject: "Chat with Visitor 19785128"
            url: "https://{subdomain}.zendesk.com/api/v2/tickets/123.json"
          url: "https://{subdomain}.zendesk.com/api/v2/bookmarks/900000001111.json"
        - created_at: "2020-09-11T10:22:45Z"
          id: 900000009568
          ticket:
            id: 123
            priority: "high"
            raw_subject: "Chat with Visitor 19785128"
            requester_id: 156
            subject: "Chat with Visitor 19785128"
            url: "https://{subdomain}.zendesk.com/api/v2/tickets/123.json"
          url: "https://{subdomain}.zendesk.com/api/v2/bookmarks/900000001112.json"
        count: 1
        next_page: null
        previous_page: null
    BrandCreateRequestExample:
      value:
        brand:
          name: "Brand 1"
          subdomain: "Brand1"
    BrandResponseExample:
      value:
        brand:
          active: true
          brand_url: "https://brand1.zendesk.com"
          created_at: "2019-08-06T02:43:39Z"
          default: true
          has_help_center: true
          help_center_state: "enabled"
          host_mapping: "brand1.com"
          id: 360002783572
          is_deleted: false
          logo:
            content_type: "image/png"
            content_url: "https://company.zendesk.com/logos/brand1_logo.png"
            file_name: "brand1_logo.png"
            id: 928374
            mapped_content_url: "https://company.com/logos/brand1_logo.png"
            size: 166144
            thumbnails:
            - content_type: "image/png"
              content_url: "https://company.zendesk.com/photos/brand1_logo_thumb.png"
              file_name: "brand1_logo_thumb.png"
              id: 928375
              mapped_content_url: "https://company.com/photos/brand1_logo_thumb.png"
              size: 58298
              url: "https://company.zendesk.com/api/v2/attachments/928375.json"
            - content_type: "image/png"
              content_url: "https://company.zendesk.com/photos/brand1_logo_small.png"
              file_name: "brand1_logo_small.png"
              id: 928376
              mapped_content_url: "https://company.com/photos/brand1_logo_small.png"
              size: 58298
              url: "https://company.zendesk.com/api/v2/attachments/928376.json"
            url: "https://company.zendesk.com/api/v2/attachments/928374.json"
          name: "Brand 1"
          signature_template: "{{agent.signature}}"
          subdomain: "hello-world"
          ticket_form_ids:
          - 360000660811
          updated_at: "2019-08-06T02:43:40Z"
          url: "https://company.zendesk.com/api/v2/brands/360002783572.json"
    BrandUpdateRequestExample:
      value:
        brand:
          active: true
          host_mapping: "brand1.com"
          name: "Brand 1"
          subdomain: "Brand1"
    BrandsResponseExample:
      value:
        brands:
        - active: true
          brand_url: "https://brand1.zendesk.com"
          created_at: "2019-08-06T02:43:39Z"
          default: true
          has_help_center: true
          help_center_state: "enabled"
          host_mapping: "brand1.com"
          id: 360002783572
          is_deleted: false
          logo:
            content_type: "image/png"
            content_url: "https://company.zendesk.com/logos/brand1_logo.png"
            file_name: "brand1_logo.png"
            id: 928374
            mapped_content_url: "https://company.com/logos/brand1_logo.png"
            size: 166144
            thumbnails:
            - content_type: "image/png"
              content_url: "https://company.zendesk.com/photos/brand1_logo_thumb.png"
              file_name: "brand1_logo_thumb.png"
              id: 928375
              mapped_content_url: "https://company.com/photos/brand1_logo_thumb.png"
              size: 58298
              url: "https://company.zendesk.com/api/v2/attachments/928375.json"
            - content_type: "image/png"
              content_url: "https://company.zendesk.com/photos/brand1_logo_small.png"
              file_name: "brand1_logo_small.png"
              id: 928376
              mapped_content_url: "https://company.com/photos/brand1_logo_small.png"
              size: 58298
              url: "https://company.zendesk.com/api/v2/attachments/928376.json"
            url: "https://company.zendesk.com/api/v2/attachments/928374.json"
          name: "Brand 1"
          signature_template: "{{agent.signature}}"
          subdomain: "hello-world"
          ticket_form_ids:
          - 360000660811
          updated_at: "2019-08-06T02:43:40Z"
          url: "https://company.zendesk.com/api/v2/brands/360002783572.json"
        count: 1
        next_page: null
        previous_page: null
    BulkUpdateDefaultCustomStatusRequestExample:
      value:
        ids: "1234567,1234577"
    BulkUpdateDefaultCustomStatusResponseExample:
      value: {}
    ChannelFrameworkPushResultsResponseExample:
      value:
        results:
        - external_resource_id: "234"
          status:
            code: "could_not_locate_parent_external_resource"
            description: "123"
    ComplianceDeletionStatusesResponseExample:
      value:
        compliance_deletion_statuses:
        - account_subdomain: "accountABC"
          action: "request_deletion"
          application: "all"
          created_at: "2009-07-20T22:55:23Z"
          executer_id: 2000
          user_id: 1
        - account_subdomain: "accountABC"
          action: "started"
          application: "support"
          created_at: "2009-07-20T22:55:29Z"
          executer_id: null
          user_id: 1
        - account_subdomain: "accountABC"
          action: "complete"
          application: "support"
          created_at: "2009-07-20T22:57:02Z"
          executer_id: null
          user_id: 1
        - account_subdomain: "accountABC"
          action: "started"
          application: "chat"
          created_at: "2009-07-21T02:51:18Z"
          executer_id: null
          user_id: 1
    CountOrganizationsResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 102
    CreateDeletionScheduleRequestExample:
      value:
        deletion_schedule:
          active: true
          conditions:
            all:
            - field: "duration_since_last_update"
              operator: "greater_than"
              value: "P1Y"
            any: []
          description: "Delete tickets older than 1 year"
          title: "some schedule"
    CreateDeletionScheduleResponseExample:
      value:
        deletion_schedule:
          active: true
          conditions:
            all:
            - field: "duration_since_last_update"
              operator: "greater_than"
              value: "P1Y"
            any: []
          created_at: "2021-07-20T22:55:29Z"
          default: false
          description: "Delete tickets older than 1 year"
          id: 7772196094461
          title: "some schedule"
          updated_at: "2021-07-20T22:55:29Z"
          url: "https://{some domain}.zendesk.com/api/v2/deletion_schedules/7772196094461.json"
    CreateMacroResponseExample:
      value:
        macro:
          actions:
          - field: "status"
            value: "solved"
          id: 25
          restriction: {}
          title: "Roger Wilco"
    CreateOrganizationRequestExample:
      value:
        organization:
          name: "My Organization"
    CreatedOrganizationResponseExample:
      value:
        organization:
          tags: []
          created_at: "2020-09-30T01:50:12Z"
          details: null
          domain_names: []
          external_id: null
          group_id: null
          id: 23409462
          name: "My Organization"
          notes: null
          organization_fields: null
          shared_comments: false
          shared_tickets: false
          updated_at: "2020-09-30T01:50:12Z"
          url: "https://example.zendesk.com/api/v2/organizations/23409462.json"
    CurrentUserResponseExample:
      value:
        user:
          tags:
          - "enterprise"
          - "other_tag"
          active: true
          alias: "Mr. Johnny"
          authenticity_token: "<CORS TOKEN>"
          created_at: "2009-07-20T22:55:29Z"
          custom_role_id: 9373643
          details: ""
          email: "johnny@example.com"
          external_id: "sai989sur98w9"
          id: 35436
          last_login_at: "2011-05-05T10:38:52Z"
          locale: "en-US"
          locale_id: 1
          moderator: true
          name: "Johnny Agent"
          notes: "Johnny is a nice guy!"
          only_private_comments: false
          organization_id: 57542
          phone: "+15551234567"
          photo:
            content_type: "image/png"
            content_url: "https://company.zendesk.com/photos/my_funny_profile_pic.png"
            id: 928374
            name: "my_funny_profile_pic.png"
            size: 166144
            thumbnails:
            - content_type: "image/png"
              content_url: "https://company.zendesk.com/photos/my_funny_profile_pic_thumb.png"
              id: 928375
              name: "my_funny_profile_pic_thumb.png"
              size: 58298
          restricted_agent: true
          role: "agent"
          role_type: 0
          shared: false
          shared_agent: false
          signature: "Have a nice day, Johnny"
          suspended: true
          ticket_restriction: "assigned"
          time_zone: "Copenhagen"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/users/35436.json"
          user_fields:
            user_date: "2012-07-23T00:00:00Z"
            user_decimal: 5.1
            user_dropdown: "option_1"
          verified: true
    CursorBasedExportIncrementalTicketsResponseExample:
      value:
        after_cursor: "MTU3NjYxMzUzOS4wfHw0Njd8"
        after_url: "https://{subdomain}.zendesk.com/api/v2/incremental/tickets/cursor.json?cursor=MTU3NjYxMzUzOS4wfHw0Njd8"
        before_cursor: null
        before_url: null
        end_of_stream: true
        tickets:
        - tags:
          - "enterprise"
          - "other_tag"
          assignee_id: 235323
          collaborator_ids:
          - 35334
          - 234
          created_at: "2009-07-20T22:55:29Z"
          custom_fields:
          - id: 27642
            value: "745"
          - id: 27648
            value: "yes"
          description: "The fire is very colorful."
          due_at: null
          external_id: "ahg35h3jh"
          follower_ids:
          - 35334
          - 234
          from_messaging_channel: false
          group_id: 98738
          has_incidents: false
          id: 35436
          organization_id: 509974
          priority: "high"
          problem_id: 9873764
          raw_subject: "{{dc.printer_on_fire}}"
          recipient: "support@company.com"
          requester_id: 20978392
          satisfaction_rating:
            comment: "Great support!"
            id: 1234
            score: "good"
          sharing_agreement_ids:
          - 84432
          status: "open"
          subject: "Help, my printer is on fire!"
          submitter_id: 76872
          type: "incident"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "web"
    CursorBasedExportIncrementalUsersResponseExample:
      value:
        after_cursor: "MTU3NjYxMzUzOS4wfHw0Njd8"
        after_url: "https://{subdomain}.zendesk.com/api/v2/incremental/users/cursor.json?cursor=MTU3NjYxMzUzOS4wfHw0Njd8"
        before_cursor: null
        before_url: null
        end_of_stream: true
        users:
        - tags:
          - "enterprise"
          - "other_tag"
          active: true
          alias: "Mr. Johnny"
          created_at: "2009-07-20T22:55:29Z"
          custom_role_id: 9373643
          details: ""
          email: "johnny@example.com"
          external_id: "sai989sur98w9"
          id: 35436
          last_login_at: "2011-05-05T10:38:52Z"
          locale: "en-US"
          locale_id: 1
          moderator: true
          name: "Johnny Agent"
          notes: "Johnny is a nice guy!"
          only_private_comments: false
          organization_id: 57542
          phone: "+15551234567"
          photo:
            content_type: "image/png"
            content_url: "https://company.zendesk.com/photos/my_funny_profile_pic.png"
            id: 928374
            name: "my_funny_profile_pic.png"
            size: 166144
            thumbnails:
            - content_type: "image/png"
              content_url: "https://company.zendesk.com/photos/my_funny_profile_pic_thumb.png"
              id: 928375
              name: "my_funny_profile_pic_thumb.png"
              size: 58298
          restricted_agent: true
          role: "agent"
          role_type: 0
          shared: false
          shared_agent: false
          signature: "Have a nice day, Johnny"
          suspended: true
          ticket_restriction: "assigned"
          time_zone: "Copenhagen"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/users/35436.json"
          user_fields:
            user_date: "2012-07-23T00:00:00Z"
            user_decimal: 5.1
            user_dropdown: "option_1"
          verified: true
    CustomObjectFieldCreateResponseExample:
      value:
        custom_object_field:
          active: true
          created_at: "2022-09-07T23:21:59.000Z"
          description: "Make"
          id: 4398096842879
          key: "make"
          position: 0
          raw_description: "Make"
          raw_title: "Make"
          regexp_for_validation: null
          system: false
          title: "Make"
          type: "text"
          updated_at: "2022-09-07T23:22:00.000Z"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/fields.json?id=4398096842879"
    CustomObjectFieldsCreateRequestExample:
      value:
        custom_object_field:
          key: "color"
          title: "Color"
          type: "text"
    CustomObjectFieldsLimitResponseExample:
      value:
        count: 44
        limit: 400
    CustomObjectFieldsResponseExample:
      value:
        custom_object_fields:
        - active: true
          created_at: "2022-09-07T23:21:59.000Z"
          description: "Name"
          id: 4398096842877
          key: "standard::name"
          position: 0
          raw_description: "Name"
          raw_title: "Name"
          regexp_for_validation: null
          system: false
          title: "Name"
          type: "text"
          updated_at: "2022-09-07T23:22:00.000Z"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/fields.json?id=4398096842877"
        - active: true
          created_at: "2022-09-07T23:21:59.000Z"
          description: "External ID"
          id: 4398096842878
          key: "standard::external_id"
          position: 1
          raw_description: "External ID"
          raw_title: "External ID"
          regexp_for_validation: null
          system: false
          title: "External ID"
          type: "text"
          updated_at: "2022-09-07T23:22:00.000Z"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/fields.json?id=4398096842878"
        - active: true
          created_at: "2022-09-07T23:22:14.000Z"
          description: "Model"
          id: 4398096843007
          key: "model"
          position: 2
          raw_description: "Model"
          raw_title: "Model"
          regexp_for_validation: null
          system: false
          title: "Model"
          type: "text"
          updated_at: "2022-09-07T23:22:14.000Z"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/fields.json?id=4398096843007"
    CustomObjectRecordsAutocompleteResponseExample:
      value:
        count: 100
        custom_object_records:
        - created_at: "2022-09-12T19:29:59Z"
          created_by_user_id: "10001"
          custom_object_fields:
            make: "Tesla"
            model: "S"
          custom_object_key: "car"
          external_id: "Internal System Record 54848"
          id: "01GCSJW391QVSC80GYDH7E93Q6"
          name: "My Tesla CO record"
          updated_at: "2022-09-15T21:07:03Z"
          updated_by_user_id: "10001"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/01GCSJW391QVSC80GYDH7E93Q6.json"
        - created_at: "2022-09-26T22:24:15Z"
          created_by_user_id: "123123"
          custom_object_fields:
            make: "Honda"
            model: "Civic"
          custom_object_key: "car"
          external_id: null
          id: "01GDXYD7ZTWYP542BA8MDDTE36"
          name: "My Tesla CO record2"
          updated_at: "2022-09-26T22:24:15Z"
          updated_by_user_id: "245159"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/01GDXYD7ZTWYP542BA8MDDTE36.json"
        links:
          next: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/autocomplete.json?page%5Bafter%5D=eyJmcm9tIjoxLCJzaXplIjoxLCJzZWFyY2hBZnRlciI6bnVsbCwic29ydCI6bnVsbH0%3D&page%5Bsize%5D=1&query="
          prev: null
        meta:
          after_cursor: "eyJmcm9tIjoxLCJzaXplIjoxLCJzZWFyY2hBZnRlciI6bnVsbCwic29ydCI6bnVsbH0="
          before_cursor: null
          has_more: true
    CustomObjectRecordsBulkCreateRequestExample:
      value:
        job:
          action: "create"
          items:
          - custom_object_fields:
              color: "Red"
              year: 2020
            name: "2020 Tesla"
          - custom_object_fields:
              color: "Blue"
              external_id: "ddd444"
              year: 2012
            name: "2012 Toyota"
          - custom_object_fields:
              color: "Silver"
              external_id: "ddd445"
              year: 2017
            name: "2017 Ford"
    CustomObjectRecordsCreateRequestExample:
      value:
        custom_object_record:
          custom_object_fields:
            make: "Tesla"
            model: "Y"
          name: "My car 1"
    CustomObjectRecordsCreateResponseExample:
      value:
        custom_object_record:
          created_at: "2022-09-26T22:25:10Z"
          created_by_user_id: "10001"
          custom_object_fields:
            color: "white"
            make: "Tesla"
            model: "Y"
          custom_object_key: "car"
          external_id: null
          id: "01GDXYEY1FQYN066VHF49YHJ21"
          name: "My Tesla"
          updated_at: "2022-09-26T22:25:10.000Z"
          updated_by_user_id: "10001"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/01GDXYEY1FQYN066VHF49YHJ21.json"
    CustomObjectRecordsFilteredSearchRequestExample:
      value:
        filter:
          $and:
            custom_object_fields.key_one:
              $eq: "foo"
            custom_object_fields.key_two:
              $eq: "bar"
          $or:
            custom_object_fields.key_four:
              $eq: "bar"
            custom_object_fields.key_three:
              $eq: "foo"
    CustomObjectRecordsIndexResponseExample:
      value:
        custom_object_records:
        - created_at: "2022-09-12T19:29:59Z"
          created_by_user_id: "10001"
          custom_object_fields:
            make: "Tesla"
            model: "S"
          custom_object_key: "car"
          external_id: "Internal System Record 54848"
          id: "01GCSJW391QVSC80GYDH7E93Q6"
          name: "My Tesla CO record"
          updated_at: "2022-09-15T21:07:03Z"
          updated_by_user_id: "10001"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/01GCSJW391QVSC80GYDH7E93Q6.json"
        - created_at: "2022-09-26T22:24:15Z"
          created_by_user_id: "123123"
          custom_object_fields:
            make: "Honda"
            model: "Civic"
          custom_object_key: "car"
          external_id: null
          id: "01GDXYD7ZTWYP542BA8MDDTE36"
          name: "My Tesla CO record2"
          updated_at: "2022-09-26T22:24:15Z"
          updated_by_user_id: "245159"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/01GDXYD7ZTWYP542BA8MDDTE36.json"
        links:
          next: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records.json?page%5Bafter%5D=eyJmcm9tIjoxLCJzaXplIjoxLCJzZWFyY2hBZnRlciI6bnVsbCwic29ydCI6bnVsbH0%3D&page%5Bsize%5D=1&query="
          prev: null
        meta:
          after_cursor: "eyJmcm9tIjoxLCJzaXplIjoxLCJzZWFyY2hBZnRlciI6bnVsbCwic29ydCI6bnVsbH0="
          before_cursor: null
          has_more: true
    CustomObjectRecordsJobsResponseExample:
      value:
        job_status:
          id: "V3-291e720c98aef4d953563ab090486213"
          message: null
          progress: null
          results: null
          status: "queued"
          total: 2
          url: "https://{subdomain}.zendesk.com/api/v2/job_statuses/V3-291e720c98aef4d953563ab090486213.json"
    CustomObjectRecordsLimitResponseExample:
      value:
        count: 10294
        limit: 1000000
    CustomObjectRecordsSearchResponseExample:
      value:
        count: 100
        custom_object_records:
        - created_at: "2022-09-12T19:29:59Z"
          created_by_user_id: "10001"
          custom_object_fields:
            make: "Tesla"
            model: "S"
          custom_object_key: "car"
          external_id: "Internal System Record 54848"
          id: "01GCSJW391QVSC80GYDH7E93Q6"
          name: "My Tesla CO record"
          updated_at: "2022-09-15T21:07:03Z"
          updated_by_user_id: "10001"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/01GCSJW391QVSC80GYDH7E93Q6.json"
        - created_at: "2022-09-26T22:24:15Z"
          created_by_user_id: "123123"
          custom_object_fields:
            make: "Honda"
            model: "Civic"
          custom_object_key: "car"
          external_id: null
          id: "01GDXYD7ZTWYP542BA8MDDTE36"
          name: "My Tesla CO record2"
          updated_at: "2022-09-26T22:24:15Z"
          updated_by_user_id: "245159"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/01GDXYD7ZTWYP542BA8MDDTE36.json"
        links:
          next: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/search.json?page%5Bafter%5D=eyJmcm9tIjoxLCJzaXplIjoxLCJzZWFyY2hBZnRlciI6bnVsbCwic29ydCI6bnVsbH0%3D&page%5Bsize%5D=1&query="
          prev: null
        meta:
          after_cursor: "eyJmcm9tIjoxLCJzaXplIjoxLCJzZWFyY2hBZnRlciI6bnVsbCwic29ydCI6bnVsbH0="
          before_cursor: null
          has_more: true
    CustomObjectRecordsUpsertRequestExample:
      value:
        custom_object_record:
          custom_object_fields:
            make: "Oldsmobile"
            model: "Cutlass Supreme"
          name: "1997 Cutlass Supreme"
    CustomObjectRecordsUpsertResponseExample:
      value:
        custom_object_record:
          created_at: "2023-09-26T22:25:10Z"
          created_by_user_id: "10001"
          custom_object_fields:
            make: "Oldsmobile"
            model: "Cutlass Supreme"
          custom_object_key: "car"
          external_id: "X90001"
          id: "01GDXYEY1FQYN066VHF49YHJ21"
          name: "1997 Cutlass Supreme"
          updated_at: "2023-09-26T22:25:10.000Z"
          updated_by_user_id: "10001"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/car/records/01GDXYEY1FQYN066VHF49YHJ21.json"
    CustomObjectsCreateRequestExample:
      value:
        custom_object:
          key: "apartment"
          title: "Apartment"
          title_pluralized: "Apartments"
    CustomObjectsCreateResponseExample:
      value:
        custom_object:
          created_at: "2022-09-02T22:44:35Z"
          created_by_user_id: "16485"
          description: "The list of cars in our fleet"
          include_in_list_view: true
          key: "car"
          raw_description: "{{dc.car_description}}"
          raw_title: "{{dc.car_title}}"
          raw_title_pluralized: "{{dc.car_title_plural}}"
          title: "Car"
          title_pluralized: "Cars"
          updated_at: "2022-09-02T22:44:35.000Z"
          updated_by_user_id: "10234"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/01GC0617DV48CAXK6WA4DW51HD.json"
    CustomObjectsLimitResponseExample:
      value:
        count: 19
        limit: 50
    CustomObjectsResponseExample:
      value:
        custom_objects:
        - created_at: "2022-09-02T22:44:35Z"
          created_by_user_id: "16485"
          description: "The list of cars in our fleet"
          include_in_list_view: true
          key: "car"
          raw_description: "{{dc.car_description}}"
          raw_title: "{{dc.car_title}}"
          raw_title_pluralized: "{{dc.car_title_plural}}"
          title: "Car"
          title_pluralized: "Cars"
          updated_at: "2022-09-02T22:44:35.000Z"
          updated_by_user_id: "10234"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/01GC0617DV48CAXK6WA4DW51HD.json"
        - created_at: "2022-08-01T22:44:35.000Z"
          created_by_user_id: "123123"
          description: "The list of vessels in our fleet"
          include_in_list_view: true
          key: "vessel"
          raw_description: "{{dc.vessel_description}}"
          raw_title: "{{dc.vessel_title}}"
          raw_title_pluralized: "{{dc.vessel_title_plural}}"
          title: "Vessel"
          title_pluralized: "Vessel"
          updated_at: "2022-09-02T22:44:35.000Z"
          updated_by_user_id: "251251"
          url: "https://{subdomain}.zendesk.com/api/v2/custom_objects/01GC9TXVMNT6VHB5GBGAR09WPF.json"
    CustomRoleResponseExample:
      value:
        custom_role:
          configuration:
            assign_tickets_to_any_group: false
            chat_access: true
            end_user_list_access: "full"
            end_user_profile_access: "readonly"
            explore_access: "edit"
            forum_access: "readonly"
            forum_access_restricted_content: false
            group_access: true
            light_agent: false
            macro_access: "full"
            manage_business_rules: true
            manage_contextual_workspaces: false
            manage_dynamic_content: false
            manage_extensions_and_channels: true
            manage_facebook: false
            manage_organization_fields: false
            manage_ticket_fields: false
            manage_ticket_forms: false
            manage_user_fields: false
            moderate_forums: false
            organization_editing: false
            organization_notes_editing: false
            report_access: "none"
            side_conversation_create: true
            ticket_access: "within-groups"
            ticket_comment_access: "none"
            ticket_deletion: false
            ticket_editing: true
            ticket_merge: false
            ticket_tag_editing: true
            twitter_search_access: true
            user_view_access: "readonly"
            view_access: "full"
            view_deleted_tickets: false
            voice_access: true
            voice_dashboard_access: false
          created_at: "2012-03-12T16:32:22Z"
          description: "sample description"
          id: 10127
          name: "sample role"
          role_type: 0
          team_member_count: 10
          updated_at: "2012-03-12T16:32:22Z"
    CustomRolesResponseExample:
      value:
        custom_roles:
        - configuration:
            assign_tickets_to_any_group: false
            chat_access: true
            end_user_list_access: "full"
            end_user_profile_access: "readonly"
            explore_access: "edit"
            forum_access: "readonly"
            forum_access_restricted_content: false
            group_access: true
            light_agent: false
            macro_access: "full"
            manage_business_rules: true
            manage_contextual_workspaces: false
            manage_dynamic_content: false
            manage_extensions_and_channels: true
            manage_facebook: false
            manage_organization_fields: false
            manage_ticket_fields: false
            manage_ticket_forms: false
            manage_user_fields: false
            moderate_forums: false
            organization_editing: false
            organization_notes_editing: false
            report_access: "none"
            side_conversation_create: true
            ticket_access: "within-groups"
            ticket_comment_access: "none"
            ticket_deletion: false
            ticket_editing: true
            ticket_merge: false
            ticket_tag_editing: true
            twitter_search_access: true
            user_view_access: "readonly"
            view_access: "full"
            view_deleted_tickets: false
            voice_access: true
            voice_dashboard_access: false
          created_at: "2012-03-12T16:32:22Z"
          description: "Advisors manage the workflow and configure the help desk. They create or manage automations, macros, triggers, views, and SLA targets. They also set up channels and extensions. Advisors don't solve tickets, they can only make private comments."
          id: 16
          name: "Advisor"
          role_type: 0
          team_member_count: 10
          updated_at: "2012-03-12T16:32:22Z"
        - configuration:
            assign_tickets_to_any_group: false
            chat_access: true
            end_user_list_access: "full"
            end_user_profile_access: "readonly"
            explore_access: "edit"
            forum_access: "readonly"
            forum_access_restricted_content: false
            group_access: true
            light_agent: false
            macro_access: "full"
            manage_business_rules: true
            manage_contextual_workspaces: false
            manage_dynamic_content: false
            manage_extensions_and_channels: true
            manage_facebook: false
            manage_organization_fields: false
            manage_ticket_fields: false
            manage_ticket_forms: false
            manage_user_fields: false
            moderate_forums: false
            organization_editing: false
            organization_notes_editing: false
            report_access: "none"
            side_conversation_create: true
            ticket_access: "within-groups"
            ticket_comment_access: "none"
            ticket_deletion: false
            ticket_editing: true
            ticket_merge: false
            ticket_tag_editing: true
            twitter_search_access: true
            user_view_access: "readonly"
            view_access: "full"
            view_deleted_tickets: false
            voice_access: true
            voice_dashboard_access: false
          created_at: "2011-07-20T04:31:29Z"
          description: "A Staff agent's primary role is to solve tickets. They can edit tickets within their groups, view reports, and add or edit personal views and macros."
          id: 6
          name: "Staff"
          role_type: 0
          team_member_count: 10
          updated_at: "2012-02-02T10:32:59Z"
    CustomStatusCreateRequestExample:
      value:
        custom_status:
          active: true
          agent_label: "Responding quickly"
          description: "Customer needs a response quickly"
          end_user_description: "Your ticket is being responded to"
          end_user_label: "Urgent processing"
          status_category: "open"
    CustomStatusResponseExample:
      value:
        custom_status:
          active: true
          agent_label: "Responding quickly"
          created_at: "2021-07-20T22:55:29.000Z"
          default: false
          description: "Customer needs a response quickly"
          end_user_description: "Your ticket is being responded to"
          end_user_label: "Urgent processing"
          id: 35436
          raw_agent_label: "Responding quickly"
          raw_description: "Customer needs a response quickly"
          raw_end_user_description: "Your ticket is being responded to"
          raw_end_user_label: "Urgent processing"
          status_category: "open"
          updated_at: "2021-07-20T22:55:29.000Z"
    CustomStatusUpdateRequestExample:
      value:
        custom_status:
          active: true
          agent_label: "Responding quickly"
          description: "Customer needs a response quickly"
          end_user_description: "Your ticket is being responded to"
          end_user_label: "Urgent processing"
    CustomStatusesResponseExample:
      value:
        custom_statuses:
        - active: true
          agent_label: "Responding quickly"
          created_at: "2021-07-20T22:55:29.000Z"
          default: false
          description: "Customer needs a response quickly"
          end_user_description: "Your ticket is being responded to"
          end_user_label: "Urgent processing"
          id: 35436
          raw_agent_label: "Responding quickly"
          raw_description: "Customer needs a response quickly"
          raw_end_user_description: "Your ticket is being responded to"
          raw_end_user_label: "Urgent processing"
          status_category: "open"
          updated_at: "2021-07-20T22:55:29.000Z"
    CustomTicketFieldOptionCreateResponseExample:
      value:
        custom_field_option:
          id: 10002
          name: "Grapes"
          position: 2
          raw_name: "Grapes"
          url: "http://{subdomain}.zendesk.com/api/v2/ticket_fields/1/options/10002.json"
          value: "grape"
    CustomTicketFieldOptionResponseExample:
      value:
        custom_field_option:
          id: 10001
          name: "Bananas"
          position: 1
          raw_name: "Bananas"
          url: "http://{subdomain}.zendesk.com/api/v2/ticket_fields/1/options/10001.json"
          value: "banana"
    CustomTicketFieldOptionUpdateResponseExample:
      value:
        custom_field_option:
          id: 10002
          name: "Pineapples"
          position: 2
          raw_name: "Pineapples"
          url: "http://{subdomain}.zendesk.com/api/v2/ticket_fields/1/options/10002.json"
          value: "pineapple"
    CustomTicketFieldOptionsResponseExample:
      value:
        count: 2
        custom_field_options:
        - id: 10000
          name: "Apples"
          position: 0
          raw_name: "Apples"
          url: "http://{subdomain}.zendesk.com/api/v2/ticket_fields/1/options/10000.json"
          value: "apple"
        - id: 10001
          name: "Bananas"
          position: 1
          raw_name: "Bananas"
          url: "http://{subdomain}.zendesk.com/api/v2/ticket_fields/1/options/10001.json"
          value: "banana"
        next_page: null
        previous_page: null
    CustomUserFieldOptionCreateResponseExample:
      value:
        custom_field_option:
          id: 10002
          name: "Grapes"
          position: 2
          raw_name: "Grapes"
          url: "http://{subdomain}.zendesk.com/api/v2/user_fields/1/options/10002.json"
          value: "grape"
    CustomUserFieldOptionResponseExample:
      value:
        custom_field_option:
          id: 10001
          name: "Bananas"
          position: 1
          raw_name: "Bananas"
          url: "http://{subdomain}.zendesk.com/api/v2/user_fields/1/options/10001.json"
          value: "banana"
    CustomUserFieldOptionUpdateResponseExample:
      value:
        custom_field_option:
          id: 10002
          name: "Pineapples"
          position: 2
          raw_name: "Pineapples"
          url: "http://{subdomain}.zendesk.com/api/v2/user_fields/1/options/10002.json"
          value: "pineapple"
    CustomUserFieldOptionsResponseExample:
      value:
        count: 2
        custom_field_options:
        - id: 10000
          name: "Apples"
          position: 0
          raw_name: "Apples"
          url: "http://{subdomain}.zendesk.com/api/v2/user_fields/1/options/10000.json"
          value: "apple"
        - id: 10001
          name: "Bananas"
          position: 1
          raw_name: "Bananas"
          url: "http://{subdomain}.zendesk.com/api/v2/user_fields/1/options/10001.json"
          value: "banana"
        next_page: null
        previous_page: null
    DefinitionsResponseExample:
      value:
        definitions:
          conditions_all:
          - group: "ticket"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            repeatable: false
            subject: "status"
            title: "Status"
            type: "list"
            values:
            - enabled: false
              title: "Closed"
              value: "closed"
          conditions_any:
          - group: "ticket"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            repeatable: false
            subject: "status"
            title: "Status"
            type: "list"
            values:
            - enabled: false
              title: "Closed"
              value: "closed"
    DeleteUserResponseExample:
      value:
        user:
          active: false
          id: 9873843
          name: "Roger Wilco II"
    DeletedUserResponseExample:
      value:
        deleted_user:
          active: false
          created_at: "2019-08-26T02:10:24Z"
          email: "david@email.com"
          id: 189304711533
          locale: "en-US"
          locale_id: 1
          name: "David"
          organization_id: 360000000008
          phone: null
          photo: null
          role: "end-user"
          shared_phone_number: null
          time_zone: "Eastern Time (US & Canada)"
          updated_at: "2019-08-26T02:10:27Z"
          url: "https://{subdomain}.zendesk.com/api/v2/deleted_users/189304711533"
    DeletedUsersCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 13
    DeletedUsersResponseExample:
      value:
        deleted_users:
        - active: false
          created_at: "2019-08-26T02:10:24Z"
          email: "david@gmail.com"
          id: 189304711533
          locale: "en-US"
          locale_id: 1
          name: "David"
          organization_id: 12312312
          phone: null
          photo: null
          role: "end-user"
          shared_phone_number: null
          time_zone: "Eastern Time (US & Canada)"
          updated_at: "2019-08-26T02:10:27Z"
          url: "https://{subdomain}.zendesk.com/api/v2/deleted_users/189304711533"
        - active: false
          created_at: "2019-08-26T02:10:28Z"
          email: "linda@gmail.com"
          id: 12204720593
          locale: "en-US"
          locale_id: 1
          name: "Linda"
          organization_id: 123123123
          phone: null
          photo: null
          role: "end-user"
          shared_phone_number: null
          time_zone: "Eastern Time (US & Canada)"
          updated_at: "2019-08-26T02:10:29Z"
          url: "https://{subdomain}.zendesk.com/api/v2/deleted_users/12204720593"
    DynamicContentResponseExample:
      value:
        item:
          created_at: "2015-05-13T22:33:12Z"
          default_locale_id: 1
          id: 47
          name: "Snowboard Problem"
          outdated: false
          placeholder: "{{dc.snowboard_problem}}"
          updated_at: "2015-05-13T22:33:12Z"
          url: "https://company.zendesk.com/api/v2/dynamic_content/items/47.json"
          variants:
          - active: true
            content: "Voici mon contenu dynamique en français"
            created_at: "2015-05-13T22:33:12Z"
            default: true
            id: 47
            locale_id: 16
            outdated: false
            updated_at: "2015-05-13T22:33:12Z"
            url: "https://company.zendesk.com/api/v2/dynamic_content/items/47/variants/47.json"
          - active: true
            content: "Este es mi contenido dinámico en español"
            created_at: "2015-05-13T22:33:12Z"
            default: false
            id: 48
            locale_id: 2
            outdated: false
            updated_at: "2015-05-13T22:33:12Z"
            url: "https://company.zendesk.com/api/v2/dynamic_content/items/47/variants/48.json"
    DynamicContentUpdateResponseExample:
      value:
        item:
          created_at: "2015-05-13T22:33:12Z"
          default_locale_id: 1
          id: 47
          name: "New name"
          outdated: false
          placeholder: "{{dc.snowboard_problem}}"
          updated_at: "2015-05-13T22:33:12Z"
          url: "https://company.zendesk.com/api/v2/dynamic_content/items/47.json"
          variants:
          - active: true
            content: "Voici mon contenu dynamique en français"
            created_at: "2015-05-13T22:33:12Z"
            default: true
            id: 47
            locale_id: 16
            outdated: false
            updated_at: "2015-05-13T22:33:12Z"
            url: "https://company.zendesk.com/api/v2/dynamic_content/items/47/variants/47.json"
          - active: true
            content: "Este es mi contenido dinámico en español"
            created_at: "2015-05-13T22:33:12Z"
            default: false
            id: 48
            locale_id: 2
            outdated: false
            updated_at: "2015-05-13T22:33:12Z"
            url: "https://company.zendesk.com/api/v2/dynamic_content/items/47/variants/48.json"
    DynamicContentVariantResponseExample:
      value:
        variant:
          active: true
          content: "C'est mon contenu dynamique en français"
          created_at: "2014-04-09T19:53:23Z"
          default: false
          id: 23
          locale_id: 127
          outdated: false
          updated_at: "2014-04-09T19:53:23Z"
          url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/23.json"
    DynamicContentVariantUpdateResponseExample:
      value:
        variant:
          active: false
          content: "C'est mon contenu dynamique en français"
          created_at: "2014-04-09T19:53:23Z"
          default: false
          id: 23
          locale_id: 125
          outdated: false
          updated_at: "2014-04-09T19:53:23Z"
          url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/23.json"
    DynamicContentVariantsCreateManyResponseExample:
      value:
        variants:
        - active: true
          content: "C'est mon contenu dynamique en français"
          created_at: "2014-04-09T19:53:23Z"
          default: false
          id: 23
          locale_id: 127
          outdated: false
          updated_at: "2014-04-09T19:53:23Z"
          url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/23.json"
        - active: true
          content: "Este es mi contenido dinámico en español"
          created_at: "2014-04-09T19:53:23Z"
          default: false
          id: 24
          locale_id: 126
          outdated: false
          updated_at: "2014-04-09T19:53:23Z"
          url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/24.json"
    DynamicContentVariantsResponseExample:
      value:
        variants:
        - active: true
          content: "This is my dynamic content in English"
          created_at: "2014-04-09T19:53:23Z"
          default: true
          id: 23
          locale_id: 125
          outdated: false
          updated_at: "2014-04-09T19:53:23Z"
          url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/23.json"
        - active: false
          content: "Este es mi contenido dinámico en español"
          created_at: "2014-04-09T19:53:23Z"
          default: false
          id: 24
          locale_id: 126
          outdated: true
          updated_at: "2014-04-09T19:53:23Z"
          url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/24.json"
    DynamicContentVariantsUpdateManyResponseExample:
      value:
        variants:
        - active: true
          content: "C'est mon contenu dynamique en français"
          created_at: "2014-04-09T19:53:23Z"
          default: false
          id: 23
          locale_id: 16
          outdated: false
          updated_at: "2014-04-09T19:53:23Z"
          url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/23.json"
        - active: true
          content: "Este es mi contenido dinámico en español"
          created_at: "2014-04-09T19:53:23Z"
          default: false
          id: 24
          locale_id: 2
          outdated: false
          updated_at: "2014-04-09T19:53:23Z"
          url: "https://subdomain.zendesk.com/api/v2/dynamic_content/items/3/variants/24.json"
    DynamicContentsResponseExample:
      value:
        items:
        - created_at: "2015-05-13T22:33:12Z"
          default_locale_id: 1
          id: 47
          name: "Snowboard Problem"
          outdated: true
          placeholder: "{{dc.snowboard_problem}}"
          updated_at: "2015-05-13T22:33:12Z"
          url: "https://company.zendesk.com/api/v2/dynamic_content/items/47.json"
          variants:
          - active: true
            content: "C'est mon contenu dynamique en français"
            created_at: "2015-05-13T22:33:12Z"
            default: true
            id: 47
            locale_id: 1
            outdated: false
            updated_at: "2015-05-13T22:33:12Z"
            url: "https://company.zendesk.com/api/v2/dynamic_content/items/47/variants/47.json"
    EmailNotificationResponseExample:
      value:
        email_notification:
          comment_id: 7824075373565
          created_at: "2024-02-21T23:13:07Z"
          email_id: "01HQ6Z3DE28F34XBFCYH0SRM95"
          message_id: "<56Z97D7G67G_65d68382aa493_4639581606f3@example.com>"
          notification_id: 7824075373693
          recipients:
          - delivery_status:
              code: "530 5.7.0"
              id: 24
              message: "Email failed to deliver. 530 5.7.0"
              name: "authentication_required"
            email_address: "recipient1@example.com"
            user_id: 7612709251581
          ticket_id: 623
          updated_at: "2024-02-21T23:13:07Z"
          url: "https://example.zendesk.com/api/v2/email_notifications/7824075373693.json"
    EmailNotificationsResponseExample:
      value:
        email_notifications:
        - comment_id: 7824075373565
          created_at: "2024-02-21T23:13:07Z"
          email_id: "01HQ6Z3DE28F34XBFCYH0SRM95"
          message_id: "<56Z97D7G67G_65d68382aa493_4639581606f3@example.com>"
          notification_id: 7824075373693
          recipients:
          - delivery_status:
              code: "530 5.7.0"
              id: 24
              message: "Email failed to deliver. 530 5.7.0"
              name: "authentication_required"
            email_address: "recipient1@example.com"
            user_id: 7612709251581
          ticket_id: 623
          updated_at: "2024-02-21T23:13:07Z"
          url: "https://example.zendesk.com/api/v2/email_notifications/7824075373693.json"
        - comment_id: 7975134672637
          created_at: "2024-05-16T20:15:20Z"
          email_id: "01HY1GPZVDQAQK3CKWD3MFPX7Z"
          message_id: "<DW8VPD4ZDQ1_6646695859d95_4c39f81091ee@example.com>"
          notification_id: 7975134674301
          recipients:
          - delivery_status:
              code: "538 5.7.11"
              id: 27
              message: "Email failed to deliver. 538 5.7.11"
              name: "encryption_required"
            email_address: "recipient1@example.com"
            user_id: 1100021780374
          - delivery_status:
              code: "200"
              id: 5
              message: "Email was delivered"
              name: "delivered"
            email_address: "recipient2@example.com"
            user_id: 6020924697213
          ticket_id: 626
          updated_at: "2024-05-16T20:15:20Z"
          url: "https://example.zendesk.com/api/v2/email_notifications/7975134674301.json"
        - comment_id: 7975121425149
          created_at: "2024-05-16T20:15:58Z"
          email_id: "01HY1GR2T8VKSPZ73TMCWAFWS3"
          message_id: "<DW8VPD4ZDQ1_6646697dcf0d8_4b39f81553be@example.com>"
          notification_id: 7975121425661
          recipients:
          - delivery_status:
              code: "0"
              id: 0
              message: "Email missing delivery response codes"
              name: "none"
            email_address: "recipient1@example.com"
            user_id: 1100021780374
          - delivery_status:
              code: "501"
              id: 8
              message: "Recipient server rejected email. 501"
              name: "syntax_error_in_arguments"
            email_address: "recipient2@example.com"
            user_id: 6020924697213
          ticket_id: 626
          updated_at: "2024-05-16T20:15:58Z"
          url: "https://example.zendesk.com/api/v2/email_notifications/7975121425661.json"
    EssentialsCardExample:
      value:
        object_layout:
          created_at: "2022-04-02T22:55:29Z"
          default: true
          fields:
          - id: null
            zrn: "zen:user:identity:email"
          - id: null
            zrn: "zen:user:field:standard:external_id"
          - id: null
            zrn: "zen:user:field:standard:iana_time_zone"
          - id: null
            zrn: "zen:user:field:standard:locale"
          - id: null
            zrn: "zen:user:field:standard:organization_id"
          id: null
          key: "zen:user"
          layout: "essentials_card"
          max_count: 20
          updated_at: "2022-04-02T22:55:29Z"
    EssentialsCardsExample:
      value:
        object_layouts:
        - created_at: "2022-04-02T22:55:29Z"
          default: true
          fields: []
          id: null
          key: "zen:user"
          layout: "essentials_card"
          max_count: 20
          updated_at: "2022-04-02T22:55:29Z"
        - created_at: "2022-05-02T22:55:29Z"
          default: true
          fields: []
          id: null
          key: "zen:custome_object:car"
          layout: "essentials_card"
          max_count: 20
          updated_at: "2022-05-02T22:55:29Z"
    ExportIncrementalOrganizationsResponseExample:
      value:
        count: 1
        end_of_stream: true
        end_time: 1601357503
        next_page: "https://example.zendesk.com/api/v2/incremental/ticket_events.json?start_time=1601357503"
        organizations:
        - tags:
          - "smiley"
          - "teapot_kettle"
          created_at: "2018-11-14T00:14:52Z"
          details: "caterpillar =)"
          domain_names:
          - "remain.com"
          external_id: "ABC198"
          group_id: 1835962
          id: 4112492
          name: "Groablet Enterprises"
          notes: "donkey"
          organization_fields:
            datepudding: "2018-11-04T00:00:00+00:00"
            org_field_1: "happy happy"
            org_field_2: "teapot_kettle"
          shared_comments: false
          shared_tickets: false
          updated_at: "2018-11-14T00:54:22Z"
          url: "https://example.zendesk.com/api/v2/organizations/4112492.json"
    ExportIncrementalTicketEventsResponseExample:
      value:
        count: 1
        end_of_stream: true
        end_time: 1601357503
        next_page: "https://example.zendesk.com/api/v2/incremental/ticket_events.json?start_time=1601357503"
        ticket_events:
        - id: 926256957613
          instance_id: 1
          metric: "agent_work_time"
          ticket_id: 155
          time: "2020-10-26T12:53:12Z"
          type: "measure"
    GetDeletionScheduleResponseExample:
      value:
        deletion_schedule:
          active: true
          conditions:
            all:
            - field: "duration_since_last_update"
              operator: "greater_than"
              value: "P1Y"
            any: []
          created_at: "2021-07-20T22:55:29Z"
          default: false
          description: "Delete tickets older than 1 year"
          id: 7772196094461
          title: "some schedule"
          updated_at: "2021-07-20T22:55:29Z"
          url: "https://{some domain}.zendesk.com/api/v2/deletion_schedules/7772196094461.json"
    GetDeletionSchedulesResponseExample:
      value:
        deletion_schedules:
        - active: true
          conditions:
            all:
            - field: "duration_since_last_update"
              operator: "greater_than"
              value: "P1Y"
            any: []
          created_at: "2021-07-20T22:55:29Z"
          default: false
          description: "Delete tickets older than 1 year"
          id: 7772196094461
          title: "some schedule"
          updated_at: "2021-07-20T22:55:29Z"
          url: "https://{some domain}.zendesk.com/api/v2/deletion_schedules/7772196094461.json"
    GroupCreateResponseExample:
      value:
        group:
          created_at: "2009-08-26T00:07:08Z"
          id: 122
          is_public: true
          name: "My Group"
          updated_at: "2010-05-13T00:07:08Z"
    GroupMembershipResponseExample:
      value:
        group_membership:
          created_at: "2012-04-03T12:34:01Z"
          default: true
          group_id: 88
          id: 461
          updated_at: "2012-04-03T12:34:01Z"
          user_id: 72
    GroupMembershipsResponseExample:
      value:
        group_memberships:
        - created_at: "2009-05-13T00:07:08Z"
          default: true
          group_id: 12
          id: 4
          updated_at: "2011-07-22T00:11:12Z"
          user_id: 29
        - created_at: "2012-03-13T22:01:32Z"
          default: false
          group_id: 3
          id: 49
          updated_at: "2012-03-13T22:01:32Z"
          user_id: 155
    GroupResponseExample:
      value:
        group:
          created_at: "2009-08-26T00:07:08Z"
          id: 122
          is_public: true
          name: "MCs"
          updated_at: "2010-05-13T00:07:08Z"
    GroupSLAPoliciesResponseExample:
      value:
        count: 1
        group_sla_policies:
        - description: "For low priority tickets, the Tier 1 group will solve or reassign the ticket in one hour."
          filter:
            all:
            - field: "group_ownership_time"
              operator: "includes"
              value:
              - 6
          id: "01H078CBDY28BZG7P6BONY09DN"
          policy_metrics:
          - business_hours: false
            metric: "group_ownership_time"
            priority: "low"
            target: 3600
          position: 3
          title: "Incidents"
          url: "https://{subdomain}.zendesk.com/api/v2/group_sla/policies/01H078CBDY28BZG7P6BONY09DN.json"
        next_page: null
        previous_page: null
    GroupSLAPolicyCreateResponse:
      value:
        group_sla_policy:
          description: "The group with id 6 will have to solve or reassign normal priority tickets in 30 minutes and urgent tickets in 10."
          filter:
            all:
            - field: "group_ownership_time"
              operator: "includes"
              value:
              - 6
          id: "01H078CBDY28BZG7P6BONY09DN"
          policy_metrics:
          - business_hours: false
            metric: "group_ownership_time"
            priority: "normal"
            target: 1800
          - business_hours: false
            metric: "group_ownership_time"
            priority: "urgent"
            target: 600
          position: 3
          title: "Incidents"
          url: "https://{subdomain}.zendesk.com/api/v2/group_slas/policies/01H078CBDY28BZG7P6BONY09DN.json"
    GroupSLAPolicyFilterDefinitionResponseExample:
      value:
        definitions:
          all:
          - group: "ticket"
            operators:
            - title: "Contains at least one of the following"
              value: "includes"
            - title: "Contains at least none of the following"
              value: "not_includes"
            title: "Group ID"
            value: "group_id"
            values:
              list:
              - title: "Tier 1"
                value: 6
              type: "list"
    GroupSLAPolicyResponseExample:
      value:
        group_sla_policy:
          description: "Low priority tickets assigned to the group with id 6 will be completed or reassigned in one hour."
          filter:
            all:
            - field: "group_id"
              operator: "includes"
              value:
              - 6
          id: "01H078CBDY28BZG7P6BONY09DN"
          policy_metrics:
          - business_hours: false
            metric: "group_ownership_time"
            priority: "low"
            target: 3600
          position: 3
          title: "Incidents"
          url: "https://{subdomain}.zendesk.com/api/v2/group_sla/policies/01H078CBDY28BZG7P6BONY09DN.json"
    GroupSLAPolicyUpdateResponse:
      value:
        group_sla_policy:
          description: "Normal priority tickets assigned to the groups 6 or 7 will be completed or reassigned in 30 minutes."
          filter:
            all:
            - field: "group_id"
              operator: "includes"
              value:
              - 6
              - 7
          id: "01H078CBDY28BZG7P6BONY09DN"
          policy_metrics:
          - business_hours: false
            metric: "group_ownership_time"
            priority: "normal"
            target: 1800
          position: 3
          title: "Urgent Incidents"
          url: "https://{subdomain}.zendesk.com/api/v2/group_slas/policies/01H078CBDY28BZG7P6BONY09DN.json"
    GroupUpdateResponseExample:
      value:
        group:
          created_at: "2009-08-26T00:07:08Z"
          id: 123
          is_public: false
          name: "Interesting Group"
          updated_at: "2010-05-13T00:07:08Z"
    GroupsCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 102
    GroupsResponseExample:
      value:
        groups:
        - created_at: "2009-05-13T00:07:08Z"
          id: 211
          is_public: true
          name: "DJs"
          updated_at: "2011-07-22T00:11:12Z"
        - created_at: "2009-08-26T00:07:08Z"
          id: 122
          is_public: true
          name: "MCs"
          updated_at: "2010-05-13T00:07:08Z"
    HostMappingResponseInvalidCNAMEExample:
      value:
        expected_cnames:
        - "bar.zendesk.com"
        is_valid: false
        reason: "not_a_cname"
    HostMappingResponseValidExample:
      value:
        cname: "bar.zendesk.com"
        is_valid: true
    HostMappingResponseWrongCNAMEExample:
      value:
        cname: "bar.zendesk.com"
        expected_cnames:
        - "bar.zendesk.com"
        is_valid: false
        reason: "google.com"
    IncrementalSkillBasedRoutingAttributeValuesExample:
      value:
        attribute_values:
        - attribute_id: "15821cba-7326-11e8-b07e-950ba849aa27"
          id: "19ed17fb-7326-11e8-b07e-9de44e7e7f20"
          name: "English"
          time: "2018-06-19T01:33:26Z"
          type: "create"
        count: 1200
        end_time: 1533266020
        next_page: "https://{subdomain}.zendesk.com/api/v2/incremental/routing/attribute_values.json?cursor=7d724c71-3911-11e8-9621-836b8c683dc6"
    IncrementalSkillBasedRoutingAttributesExample:
      value:
        attributes:
        - id: "15821cba-7326-11e8-b07e-950ba849aa27"
          name: "Languages"
          time: "2018-06-19T01:33:19Z"
          type: "create"
        count: 1200
        end_time: 1533266020
        next_page: "https://{subdomain}.zendesk.com/api/v2/incremental/routing/attributes.json?cursor=7d724c71-3911-11e8-9621-836b8c683dc6"
    IncrementalSkillBasedRoutingInstanceValuesExample:
      value:
        count: 1200
        end_time: 1533266020
        instance_values:
        - attribute_value_id: "19ed17fb-7326-11e8-b07e-9ab44e7e7f28"
          id: "62055cad-7326-11e8-b07e-73653560136b"
          instance_id: "10001"
          time: "2019-06-19T01:35:27Z"
          type: "associate_agent"
        - attribute_value_id: "19ed17fb-7326-11e8-b07e-9ab44e7e7f28"
          id: "62055cad-7326-11e8-b07e-cf1082b7e6d4"
          instance_id: "11375"
          time: "2019-06-19T01:35:27Z"
          type: "associate_agent"
        - attribute_value_id: "19ed17fb-7326-11e8-b07e-9ab44e7e7f28"
          id: "62055cad-7326-11e8-b07e-5b8483a47e24"
          instance_id: "14187"
          time: "2020-11-14T16:32:22Z"
          type: "unassociate_agent"
        next_page: "https://{subdomain}.zendesk.com/api/v2/incremental/routing/instance_values.json?cursor=62055cad-7326-11e8-b07e-73653560136b"
    JobStatusBulkDeleteResponseExample:
      value:
        job_status:
          id: "82de0b044094f0c67893ac9fe64f1a99"
          message: "Completed at 2018-03-08 10:07:04 +0000"
          progress: 2
          results:
          - action: "delete"
            id: 244
            status: "Deleted"
            success: true
          - action: "delete"
            id: 245
            status: "Deleted"
            success: true
          status: "completed"
          total: 2
          url: "https://example.zendesk.com/api/v2/job_statuses/82de0b0467893ac9fe64f1a99.json"
    JobStatusResponseExample:
      value:
        job_status:
          id: "82de0b044094f0c67893ac9fe64f1a99"
          message: "Completed at 2018-03-08 10:07:04 +0000"
          progress: 2
          results:
          - action: "update"
            id: 244
            status: "Updated"
            success: true
          - action: "update"
            id: 245
            status: "Updated"
            success: true
          status: "completed"
          total: 2
          url: "https://example.zendesk.com/api/v2/job_statuses/82de0b0467893ac9fe64f1a99.json"
    JobStatusesResponseExample:
      value:
        job_statuses:
        - id: "8b726e606741012ffc2d782bcb7848fe"
          status: "completed"
        - id: "e7665094164c498781ebe4c8db6d2af5"
          status: "completed"
    ListDeletedTicketsResponseExample:
      value:
        count: 1
        deleted_tickets:
        - actor:
            id: 3946
            name: "Taz Wombat"
          deleted_at: "20140704T15:37:04Z"
          id: 581
          previous_state: "open"
          subject: "Wombat Party"
        next_page: null
        previous_page: null
    ListTicketCollaboratorsResponseExample:
      value:
        users:
        - id: 223443
          name: "Johnny Agent"
        - id: 8678530
          name: "Peter Admin"
    ListTicketEmailCCsResponseExample:
      value:
        users:
        - id: "223443"
          name: "Johnny Agent"
        - id: "8678530"
          name: "Peter Admin"
        - id: "6748530"
          name: "Jane End User"
    ListTicketFollowersResponseExample:
      value:
        users:
        - id: 223443
          name: "Johnny Agent"
        - id: 8678530
          name: "Peter Admin"
    ListTicketIncidentsResponseExample:
      value:
        tickets:
        - description: "The fire is very colorful."
          id: 33
          status: "open"
          subject: "My printer is on fire"
        - description: "The fire is very colorful as well!"
          id: 34
          status: "pending"
          subject: "The printer is on fire over here too"
    ListTicketProblemsResponseExample:
      value:
        tickets:
        - custom_status_id: 123
          description: "The fire is very colorful."
          id: 33
          status: "open"
          subject: "My printer is on fire"
        - custom_status_id: 231
          description: "The fire is very colorful as well!"
          id: 34
          status: "pending"
          subject: "The printer is on fire over here too"
    LocaleDetectBestLanguageResponseExample:
      value:
        locale:
          created_at: "2010-12-23T12:45:22Z"
          id: 1
          locale: "en"
          name: "English"
          updated_at: "2012-04-01T10:44:12Z"
          url: "https://company.zendesk.com/api/v2/locales/en-US.json"
    LocaleResponseExample:
      value:
        locale:
          created_at: "2010-12-23T12:45:22Z"
          id: 8
          locale: "de"
          name: "Deutsch"
          updated_at: "2012-04-01T10:44:12Z"
          url: "https://company.zendesk.com/api/v2/locales/de.json"
    LocalesResponseExample:
      value:
        locales:
        - created_at: "2009-07-20T22:55:29Z"
          id: 1
          locale: "en-US"
          name: "English"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/locales/en-US.json"
        - created_at: "2010-12-23T12:45:22Z"
          id: 8
          locale: "de"
          name: "Deutsch"
          updated_at: "2012-04-01T10:44:12Z"
          url: "https://company.zendesk.com/api/v2/locales/de.json"
    MacroActionsResponseExample:
      value:
        actions:
        - group: "ticket"
          operators:
          - title: "Is"
            value: "is"
          output_key: null
          target: null
          title: "Set subject"
          title_for_field: "Set subject"
          value: "subject"
          values:
            list: []
            type: "text"
        - group: "ticket"
          operators:
          - title: "Is"
            value: "is"
          output_key: null
          target: null
          title: "Status"
          title_for_field: "Set subject"
          value: "subject"
          values:
            list:
            - enabled: true
              title: "Open"
              value: "open"
            - enabled: true
              title: "Pending"
              value: "pending"
            - enabled: true
              title: "Solved"
              value: "solved"
            type: "list"
        - field: "priority"
          group: "ticket"
          operators:
          - title: "Is"
            value: "is"
          output_key: null
          title: "Priority"
          title_for_field: "Priority"
          value: "priority"
          values:
            list:
            - enabled: false
              title: "Low"
              value: "low"
            - enabled: true
              title: "Normal"
              value: "normal"
            - enabled: true
              title: "High"
              value: "high"
            - enabled: false
              title: "Urgent"
              value: "urgent"
            type: "list"
    MacroAttachmentResponseExample:
      value:
        macro_attachment:
          content_type: "image/jpeg"
          content_url: "https://company.zendesk.com/api/v2/macros/attachments/100/content"
          created_at: "2016-08-15T16:04:06Z"
          filename: "foobar.jpg"
          id: 100
          size: 2532
    MacroAttachmentsResponseExample:
      value:
        macro_attachments:
        - content_type: "image/jpeg"
          content_url: "https://company.zendesk.com/api/v2/macros/attachments/100/content"
          created_at: "2016-08-15T16:04:06Z"
          filename: "foobar.jpg"
          id: 100
          size: 2532
        - content_type: "image/jpeg"
          content_url: "https://company.zendesk.com/api/v2/macros/attachments/342/content"
          created_at: "2016-08-16T12:42:25Z"
          filename: "bazbat.jpg"
          id: 342
          size: 5028
    MacroCategoriesResponseExample:
      value:
        categories:
        - "FAQ"
        - "Triage"
    MacroChangesToTicketsResponseExample:
      value:
        result:
          ticket:
            assignee_id: 235323
            comment:
              body: "Assigned to Agent Uno."
              public: false
              scoped_body:
              - - "channel:all"
                - "Assigned to Agent Uno."
            fields:
              id: 27642
              value: "745"
            group_id: 98738
    MacroResponseExample:
      value:
        macro:
          actions: []
          active: true
          description: "Sets the ticket status to `solved`"
          id: 25
          position: 42
          restriction: {}
          title: "Close and Save"
    MacrosResponseExample:
      value:
        count: 2
        macros:
        - actions: []
          active: true
          description: "Sets the ticket status to `solved`"
          id: 25
          position: 42
          restriction: {}
          title: "Close and Save"
        - actions: []
          active: false
          description: "Adds a `priority` tag to the ticket"
          id: 26
          restriction: {}
          title: "Assign priority tag"
        next_page: null
        previous_page: null
    MergeEndUsersRequestExample:
      value:
        user:
          id: 1234
    MergeUserWithCurrentUserRequestExample:
      value:
        user:
          email: "roge@example.org"
          password: "foo1234"
    MergeUserWithCurrentUserResponseExample:
      value:
        user:
          id: 9873843
          name: "Roger Wilco"
    ObjectTriggerBulkUpdateRequestExample:
      value:
        triggers:
        - id: 25
          position: 1
        - active: false
          id: 26
    ObjectTriggerDefinitionResponseExample:
      value:
        definitions:
          actions:
          - group: "custom_object"
            nullable: true
            repeatable: false
            subject: "custom_object.order.custom_fields.due"
            title: "due"
            type: "date"
            values:
            - enabled: true
              format: "date"
              title: "Set to a specific date"
              value: "specific_date"
            - enabled: true
              format: "text"
              title: "Set to a number of days from now"
              value: "days_from_now"
          - group: "custom_object"
            nullable: true
            repeatable: false
            subject: "custom_object.order.custom_fields.fulfilled"
            title: "Fulfilled"
            type: "list"
            values:
            - enabled: true
              title: "Checked"
              value: "true"
            - enabled: true
              title: "Unchecked"
              value: "false"
          - group: "custom_object"
            nullable: true
            repeatable: false
            subject: "custom_object.order.custom_fields.heat"
            title: "heat"
            type: "text"
          - group: "custom_object"
            nullable: true
            repeatable: false
            subject: "custom_object.order.custom_fields.miles"
            title: "miles"
            type: "text"
          conditions_all:
          - group: "custom_object"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            repeatable: false
            subject: "update_type"
            title: "Order"
            type: "list"
            values:
            - enabled: true
              title: "Created"
              value: "Create"
            - enabled: true
              title: "Updated"
              value: "Change"
          - group: "custom_object"
            nullable: false
            operators:
            - format: "date"
              terminal: false
              title: "Is"
              value: "is"
            - format: "date"
              terminal: false
              title: "Is not"
              value: "is_not"
            - format: "date"
              terminal: true
              title: "Present"
              value: "present"
            - format: "date"
              terminal: true
              title: "Not present"
              value: "not_present"
            - format: "date"
              terminal: false
              title: "Before"
              value: "less_than"
            - format: "date"
              terminal: false
              title: "Before or on"
              value: "less_than_equal"
            - format: "date"
              terminal: false
              title: "After"
              value: "greater_than"
            - format: "date"
              terminal: false
              title: "After or on"
              value: "greater_than_equal"
            - format: "integer"
              terminal: false
              title: "Is within the previous"
              value: "within_previous_n_days"
            - format: "integer"
              terminal: false
              title: "Is within the next"
              value: "within_next_n_days"
            repeatable: false
            subject: "custom_object.order.custom_fields.due"
            title: "due"
            type: "date"
          - group: "custom_object"
            nullable: true
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            repeatable: false
            subject: "custom_object.order.custom_fields.fulfilled"
            title: "Fulfilled"
            type: "list"
            values:
            - enabled: true
              title: "Checked"
              value: "true"
            - enabled: true
              title: "Unchecked"
              value: "false"
          - group: "custom_object"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            - terminal: false
              title: "Is not"
              value: "is_not"
            - terminal: true
              title: "Present"
              value: "present"
            - terminal: true
              title: "Not present"
              value: "not_present"
            - terminal: false
              title: "Contains at least one of the following words"
              value: "includes_words"
            - terminal: false
              title: "Contains none of the following words"
              value: "not_includes_words"
            - terminal: false
              title: "Contains the following string"
              value: "includes_string"
            - terminal: false
              title: "Does not contain the following string"
              value: "not_includes_string"
            repeatable: false
            subject: "custom_object.order.custom_fields.heat"
            title: "heat"
            type: "text"
          - group: "custom_object"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            - terminal: false
              title: "Less than"
              value: "less_than"
            - terminal: false
              title: "Less than or equal to"
              value: "less_than_equal"
            - terminal: false
              title: "Greater than"
              value: "greater_than"
            - terminal: false
              title: "Greater than or equal to"
              value: "greater_than_equal"
            - terminal: false
              title: "Is not"
              value: "is_not"
            - terminal: true
              title: "Present"
              value: "present"
            - terminal: true
              title: "Not present"
              value: "not_present"
            repeatable: false
            subject: "custom_object.order.custom_fields.miles"
            title: "miles"
            type: "text"
          conditions_any:
          - group: "custom_object"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            repeatable: false
            subject: "update_type"
            title: "Order"
            type: "list"
            values:
            - enabled: true
              title: "Created"
              value: "Create"
            - enabled: true
              title: "Updated"
              value: "Change"
          - group: "custom_object"
            nullable: false
            operators:
            - format: "date"
              terminal: false
              title: "Is"
              value: "is"
            - format: "date"
              terminal: false
              title: "Is not"
              value: "is_not"
            - format: "date"
              terminal: true
              title: "Present"
              value: "present"
            - format: "date"
              terminal: true
              title: "Not present"
              value: "not_present"
            - format: "date"
              terminal: false
              title: "Before"
              value: "less_than"
            - format: "date"
              terminal: false
              title: "Before or on"
              value: "less_than_equal"
            - format: "date"
              terminal: false
              title: "After"
              value: "greater_than"
            - format: "date"
              terminal: false
              title: "After or on"
              value: "greater_than_equal"
            - format: "integer"
              terminal: false
              title: "Is within the previous"
              value: "within_previous_n_days"
            - format: "integer"
              terminal: false
              title: "Is within the next"
              value: "within_next_n_days"
            repeatable: false
            subject: "custom_object.order.custom_fields.due"
            title: "due"
            type: "date"
          - group: "custom_object"
            nullable: true
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            repeatable: false
            subject: "custom_object.order.custom_fields.fulfilled"
            title: "Fulfilled"
            type: "list"
            values:
            - enabled: true
              title: "Checked"
              value: "true"
            - enabled: true
              title: "Unchecked"
              value: "false"
          - group: "custom_object"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            - terminal: false
              title: "Is not"
              value: "is_not"
            - terminal: true
              title: "Present"
              value: "present"
            - terminal: true
              title: "Not present"
              value: "not_present"
            - terminal: false
              title: "Contains at least one of the following words"
              value: "includes_words"
            - terminal: false
              title: "Contains none of the following words"
              value: "not_includes_words"
            - terminal: false
              title: "Contains the following string"
              value: "includes_string"
            - terminal: false
              title: "Does not contain the following string"
              value: "not_includes_string"
            repeatable: false
            subject: "custom_object.order.custom_fields.heat"
            title: "heat"
            type: "text"
          - group: "custom_object"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            - terminal: false
              title: "Less than"
              value: "less_than"
            - terminal: false
              title: "Less than or equal to"
              value: "less_than_equal"
            - terminal: false
              title: "Greater than"
              value: "greater_than"
            - terminal: false
              title: "Greater than or equal to"
              value: "greater_than_equal"
            - terminal: false
              title: "Is not"
              value: "is_not"
            - terminal: true
              title: "Present"
              value: "present"
            - terminal: true
              title: "Not present"
              value: "not_present"
            repeatable: false
            subject: "custom_object.order.custom_fields.miles"
            title: "miles"
            type: "text"
    ObjectTriggerRequestExample:
      value:
        trigger:
          actions:
          - field: "custom_object.order.custom_fields.miles"
            value: "100"
          conditions:
            all: []
            any:
            - field: "custom_object.order.custom_fields.heat"
              operator: "not_present"
          title: "active test order trigger with any conditions"
    ObjectTriggerResponseExample:
      value:
        trigger:
          actions:
          - field: "custom_object.order.custom_fields.miles"
            value: "100"
          active: true
          conditions:
            all: []
            any:
            - field: "custom_object.order.custom_fields.heat"
              operator: "not_present"
          created_at: "2024-07-08T22:34:49Z"
          description: ""
          id: 27
          position: 3
          raw_title: "active test order trigger with any conditions"
          title: "active test order trigger with any conditions"
          updated_at: "2024-07-08T22:34:49Z"
          url: "http://{subdomain}.zendesk.com/api/v2/custom_objects/order/triggers/27.json"
    ObjectTriggersActiveResponseExample:
      value:
        count: 1
        next_page: null
        previous_page: null
        triggers:
        - actions: []
          active: true
          conditions: {}
          created_at: "2024-06-27T16:51:54Z"
          description: "A trigger for custom object of type = order"
          id: 25
          position: 1
          raw_title: "Order object trigger"
          title: "Order object trigger"
          updated_at: "2024-06-27T16:51:54Z"
          url: "http://{subdomain}.zendesk.com/api/v2/custom_objects/order/triggers/25.json"
    ObjectTriggersResponseExample:
      value:
        count: 2
        next_page: null
        previous_page: null
        triggers:
        - actions: []
          active: true
          conditions: {}
          created_at: "2024-06-27T16:51:54Z"
          description: "A trigger for custom object of type = order"
          id: 25
          position: 1
          raw_title: "Order object trigger"
          title: "Order object trigger"
          updated_at: "2024-06-27T16:51:54Z"
          url: "http://{subdomain}.zendesk.com/api/v2/custom_objects/order/triggers/25.json"
        - actions: []
          active: false
          conditions:
            all:
            - field: "custom_object.order.custom_fields.heat"
              operator: "not_present"
            any: []
          created_at: "2024-07-08T20:44:32Z"
          description: "Check order's heat and set field as needed"
          id: 26
          position: 2
          raw_title: "Set order miles when heat not present"
          title: "Set order miles when heat not present"
          updated_at: "2024-07-08T20:44:32Z"
          url: "http://{subdomain}.zendesk.com/api/v2/custom_objects/order/triggers/26.json"
    ObjectTriggersSearchResponseExample:
      value:
        count: 1
        next_page: null
        previous_page: null
        triggers:
        - actions:
          - field: "custom_object.order.custom_fields.miles"
            value: "100"
          active: true
          conditions:
            all:
            - field: "custom_object.order.custom_fields.heat"
              operator: "is"
              value: "1"
            any: []
          created_at: "2024-07-09T21:29:59Z"
          description: ""
          id: 28
          position: 1
          raw_title: "Testing CO trigger with tagger field condition"
          title: "Testing CO trigger with tagger field condition"
          updated_at: "2024-07-09T21:29:59Z"
          url: "http://{subdomain}.zendesk.com/api/v2/custom_objects/order/triggers/28.json"
    OrganizationFieldCreateResponseExample:
      value:
        organization_field:
          active: true
          created_at: "2013-02-27T20:35:55Z"
          description: "This field describes the support plan this organization has"
          id: 75
          key: "support_description"
          position: 0
          raw_description: "This field describes the support plan this organization has"
          raw_title: "Support description"
          regexp_for_validation: null
          title: "Support description"
          type: "text"
          updated_at: "2013-02-27T20:35:55Z"
          url: "https://company.zendesk.com/api/v2/organization_fields/75.json"
    OrganizationFieldResponseExample:
      value:
        organization_field:
          active: true
          created_at: "2012-10-16T16:04:06Z"
          description: "Description of Custom Field"
          id: 7
          key: "custom_field_1"
          position: 9999
          raw_description: "{{dc.my_description}}"
          raw_title: "Custom Field 1"
          regexp_for_validation: null
          title: "Custom Field 1"
          type: "text"
          updated_at: "2012-10-16T16:04:06Z"
          url: "https://company.zendesk.com/api/v2/organization_fields/7.json"
    OrganizationFieldUpdateResponseExample:
      value:
        organization_field:
          active: true
          created_at: "2013-02-27T20:35:55Z"
          description: "This field describes the support plan this organization has"
          id: 75
          key: "support_description"
          position: 0
          raw_description: "This field describes the support plan this organization has"
          raw_title: "Support description"
          regexp_for_validation: null
          title: "Support description"
          type: "text"
          updated_at: "2013-02-27T20:35:55Z"
          url: "https://company.zendesk.com/api/v2/organization_fields/75.json"
    OrganizationFieldsResponseExample:
      value:
        count: 1
        next_page: null
        organization_fields:
        - active: true
          created_at: "2012-10-16T16:04:06Z"
          description: "Description of Custom Field"
          id: 7
          key: "custom_field_1"
          position: 9999
          raw_description: "{{dc.my_description}}"
          raw_title: "Custom Field 1"
          regexp_for_validation: null
          title: "Custom Field 1"
          type: "text"
          updated_at: "2012-10-16T16:04:06Z"
          url: "https://company.zendesk.com/api/v2/organization_fields/7.json"
        previous_page: null
    OrganizationMembershipCreateManyResponseExample:
      value:
        job_status:
          id: "8b726e606741012ffc2d782bcb7848fe"
          message: "Completed at Fri Apr 13 02:51:53 +0000 2012"
          progress: 2
          results:
          - action: "create"
            id: 380
            status: "Created"
            success: true
          status: "completed"
          total: 2
          url: "https://company.zendesk.com/api/v2/job_statuses/8b726e606741012ffc2d782bcb7848fe.json"
    OrganizationMembershipCreateResponseExample:
      value:
        organization_membership:
          created_at: "2012-04-03T12:34:01Z"
          default: true
          id: 461
          organization_id: 88
          updated_at: "2012-04-03T12:34:01Z"
          user_id: 72
    OrganizationMembershipResponseExample:
      value:
        organization_membership:
          created_at: "2009-05-13T00:07:08Z"
          default: true
          id: 4
          organization_id: 12
          updated_at: "2011-07-22T00:11:12Z"
          user_id: 29
    OrganizationMembershipsResponseExample:
      value:
        organization_memberships:
        - created_at: "2009-05-13T00:07:08Z"
          default: true
          id: 4
          organization_id: 12
          organization_name: "first organization"
          updated_at: "2011-07-22T00:11:12Z"
          user_id: 29
          view_tickets: true
        - created_at: "2012-03-13T22:01:32Z"
          default: null
          id: 49
          organization_id: 3
          organization_name: "second organization"
          updated_at: "2012-03-13T22:01:32Z"
          user_id: 155
          view_tickets: true
    OrganizationMergeListResponseExample:
      value:
        organization_merges:
        - id: "01HPZM6206BF4G63783E5349AD"
          loser_id: 123
          status: "complete"
          url: "https://company.zendesk.com/api/v2/organization_merges/01HPZM6206BF4G63783E5349AD.json"
          winner_id: 456
    OrganizationMergeRequestExample:
      value:
        organization_merge:
          winner_id: 54321
    OrganizationMergeResponseExample:
      value:
        organization_merge:
          id: "01HPZM6206BF4G63783E5349AD"
          loser_id: 123
          status: "new"
          url: "https://company.zendesk.com/api/v2/organization_merges/01HPZM6206BF4G63783E5349AD.json"
          winner_id: 456
    OrganizationResponseExample:
      value:
        organization:
          tags:
          - "smiley"
          - "teapot_kettle"
          created_at: "2018-11-14T00:14:52Z"
          details: "caterpillar =)"
          domain_names:
          - "remain.com"
          external_id: null
          group_id: 1835962
          id: 4112492
          name: "Groablet Enterprises"
          notes: "donkey"
          organization_fields:
            datepudding: "2018-11-04T00:00:00+00:00"
            org_field_1: "happy happy"
            org_field_2: "teapot_kettle"
          shared_comments: false
          shared_tickets: false
          updated_at: "2018-11-14T00:54:22Z"
          url: "https://example.zendesk.com/api/v2/organizations/4112492.json"
    OrganizationSubscriptionCreateRequestExample:
      value:
        organization_subscription:
          organization_id: 32
          user_id: 482
    OrganizationSubscriptionResponseExample:
      value:
        organization_subscription:
          created_at: "2009-07-20T22:55:29Z"
          id: 1234
          organization_id: 32
          user_id: 482
    OrganizationSubscriptionsResponseExample:
      value:
        organization_subscriptions:
        - created_at: "2009-07-20T22:55:29Z"
          id: 1234
          organization_id: 32
          user_id: 482
        - created_at: "2011-08-22T21:12:09Z"
          id: 43681
          organization_id: 334
          user_id: 49471
    OrganizationsRelatedResponse:
      value:
        organization_related:
          tickets_count: 12
          users_count: 4
    OrganizationsResponseExample:
      value:
        count: 2
        next_page: null
        organizations:
        - tags:
          - "smiley"
          - "teapot_kettle"
          created_at: "2018-11-14T00:14:52Z"
          details: "caterpillar =)"
          domain_names:
          - "remain.com"
          external_id: "ABC198"
          group_id: 1835962
          id: 4112492
          name: "Groablet Enterprises"
          notes: "donkey"
          organization_fields:
            datepudding: "2018-11-04T00:00:00+00:00"
            org_field_1: "happy happy"
            org_field_2: "teapot_kettle"
          shared_comments: false
          shared_tickets: false
          updated_at: "2018-11-14T00:54:22Z"
          url: "https://example.zendesk.com/api/v2/organizations/4112492.json"
        - tags:
          - "teapot_kettle"
          created_at: "2017-08-14T20:13:52Z"
          details: "test"
          domain_names:
          - "test.com"
          external_id: "TTV273"
          group_id: null
          id: 1873
          name: "Willy Wonkas Chocolate Factory"
          notes: ""
          organization_fields:
            datepudding: "2018-11-02T00:00:00+00:00"
            org_field_1: "malarky"
            org_field_2: "teapot_kettle"
          shared_comments: false
          shared_tickets: false
          updated_at: "2019-05-16T01:27:46Z"
          url: "https://example.zendesk.com.com/api/v2/organizations/1873.json"
        previous_page: null
    PermanentlyDeleteTicketJobStatusResponseExample:
      value:
        job_status:
          id: "82de0b044094f0c67893ac9fe64f1a99"
          message: null
          progress: null
          results: null
          status: "queued"
          total: null
          url: "https://example.zendesk.com/api/v2/job_statuses/82de0b0467893ac9fe64f1a99.json"
    PushNotificationDevicesRequestExample:
      value:
        push_notification_devices:
        - "token1"
        - "token2"
    QueueCreateResponseExample:
      value:
        queue:
          created_at: "2023-11-27T09:03:59Z"
          definition:
            all:
            - field: "priority"
              operator: "is"
              value: "urgent"
            any: []
          description: "Queue description"
          id: "01HG80ATNNZK1N7XRFVKX48XD6"
          name: "New queue with valid definition"
          order: 1
          primary_groups:
            count: 2
            groups:
            - id: 6784729637757
              name: "EW"
            - id: 5399674286077
              name: "test"
          priority: 1
          secondary_groups:
            count: 0
            groups: []
          updated_at: "2023-11-27T09:03:59Z"
          url: "https://company.zendesk.com/api/v2/queues/01HG80ATNNZK1N7XRFVKX48XD6.json"
    QueueResponseExample:
      value:
        queue:
          created_at: "2023-11-27T09:03:59Z"
          definition:
            all:
            - field: "priority"
              operator: "is"
              value: "urgent"
            any: []
          description: "Queue description"
          id: "01HG80ATNNZK1N7XRFVKX48XD6"
          name: "New queue with valid definition"
          order: 1
          primary_groups:
            count: 2
            groups:
            - id: 6784729637757
              name: "EW"
            - id: 5399674286077
              name: "test"
          priority: 1
          secondary_groups:
            count: 0
            groups: []
          updated_at: "2023-11-27T09:03:59Z"
          url: "https://company.zendesk.com/api/v2/queues/01HG80ATNNZK1N7XRFVKX48XD6.json"
    QueuesResponseExample:
      value:
        queues:
        - created_at: "2023-11-27T09:03:59Z"
          definition:
            all:
            - field: "priority"
              operator: "is"
              value: "urgent"
            any: []
          description: "Queue description"
          id: "01HG80ATNNZK1N7XRFVKX48XD6"
          name: "New queue with valid definition"
          order: 1
          primary_groups:
            count: 2
            groups:
            - id: 6784729637757
              name: "EW"
            - id: 5399674286077
              name: "test"
          priority: 1
          secondary_groups:
            count: 0
            groups: []
          updated_at: "2023-11-27T09:03:59Z"
          url: "https://company.zendesk.com/api/v2/queues/01HG80ATNNZK1N7XRFVKX48XD6.json"
    QueuesUpdateResponseExample:
      value:
        queue:
          created_at: "2023-11-27T09:03:59Z"
          definition:
            all:
            - field: "priority"
              operator: "is"
              value: "urgent"
            any: []
          description: "Queue description"
          id: "01HG80ATNNZK1N7XRFVKX48XD6"
          name: "New queue with valid definition"
          order: 1
          primary_groups:
            count: 2
            groups:
            - id: 6784729637757
              name: "EW"
            - id: 5399674286077
              name: "test"
          priority: 1
          secondary_groups:
            count: 0
            groups: []
          updated_at: "2023-11-27T09:03:59Z"
          url: "https://company.zendesk.com/api/v2/queues/01HG80ATNNZK1N7XRFVKX48XD6.json"
    RecoverSuspendedTicketResponseExample:
      value:
        ticket:
        - author:
            email: "spammer@example.com"
            id: 66
            name: "Spammer"
          brand_id: 123
          cause: "Detected as spam"
          cause_id: 0
          content: "Visit http://casino.spam.com"
          created_at: "2009-07-20T22:55:29Z"
          id: 3436
          recipient: "support@example.support.com"
          subject: "Free Casino Money!"
          ticket_id: 67321
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://example.zendesk.com/api/v2/tickets/67321.json"
          via:
            channel: "web"
    RecoverSuspendedTicketUnprocessableContentResponseExample:
      value:
        ticket:
        - author:
            email: "help@example.com"
            id: 1
            name: "Help"
          brand_id: 123
          cause: "Received from support address"
          cause_id: 22
          content: "Your request has been received and is being reviewed by our support staff."
          created_at: "2023-04-06T20:51:31Z"
          error_messages: null
          id: 14668816692628
          message_id: "<message-id@mail.gmail.com>"
          recipient: "support@example.support.com"
          subject: "Received from support address"
          ticket_id: 14668816692628
          updated_at: "2023-04-06T20:51:31Z"
          url: "https://example.zendesk.com/api/v2/tickets/14668816692628.json"
          via:
            channel: "email"
            source:
              from:
                address: "help@example.com,"
                name: "Help"
              rel: null
              to:
                address: "support@example.zendesk.com"
                name: "Support,"
    RecoverSuspendedTicketsResponseExample:
      value:
        tickets:
        - author:
            email: "styx@example.com"
            id: 1
            name: "Mr. Roboto"
          brand_id: 123
          cause: "Detected as spam"
          content: "Out Of Office Reply"
          created_at: "2009-07-20T22:55:29Z"
          id: 3436
          recipient: "john@example.com"
          subject: "Help I need somebody!"
          ticket_id: 67321
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://example.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "web"
        - author:
            email: "styx@example.com"
            id: 1
            name: "Mr. Roboto"
          brand_id: 123
          cause: "Detected as spam"
          content: "Out Of Office Reply"
          created_at: "2009-07-20T22:55:29Z"
          id: 3437
          recipient: "john@example.com"
          subject: "Not just anybody!"
          ticket_id: 67321
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://example.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "web"
    RelationshipFilterDefinitionExample:
      value:
        definitions:
          conditions_all:
          - group: "ticket"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            - terminal: false
              title: "Is not"
              value: "is_not"
            - terminal: false
              title: "Less than"
              value: "less_than"
            - terminal: false
              title: "Greater than"
              value: "greater_than"
            - terminal: true
              title: "Changed"
              value: "changed"
            - terminal: false
              title: "Changed to"
              value: "value"
            - terminal: false
              title: "Changed from"
              value: "value_previous"
            - terminal: true
              title: "Not changed"
              value: "not_changed"
            - terminal: false
              title: "Not changed to"
              value: "not_value"
            - terminal: false
              title: "Not changed from"
              value: "not_value_previous"
            repeatable: false
            subject: "status"
            title: "Status"
            type: "list"
            values:
            - enabled: true
              title: "New"
              value: "new"
            - enabled: true
              title: "Open"
              value: "open"
            - enabled: true
              title: "Pending"
              value: "pending"
            - enabled: true
              title: "Solved"
              value: "solved"
            - enabled: true
              title: "Closed"
              value: "closed"
          conditions_any:
          - group: "ticket"
            nullable: true
            operators:
            - terminal: true
              title: "Present"
              value: "present"
            - terminal: true
              title: "Not present"
              value: "not_present"
            repeatable: false
            subject: "custom_fields_20513432"
            title: "Happy Gilmore"
            type: "list"
          - group: "ticket"
            nullable: true
            operators:
            - terminal: true
              title: "Present"
              value: "present"
            - terminal: true
              title: "Not present"
              value: "not_present"
            repeatable: false
            subject: "custom_fields_86492341"
            title: "total_time_field"
            type: "list"
    RenewSessionResponseExample:
      value:
        authenticity_token: "huU19Z76zNC9Yvt+i9p7MviIOlOIg/JWqEdf6nGmnu9JInV04fksCIdtNDvoYAoV"
    RequestCreateResponseExample:
      value:
        request:
          custom_status_id: 1
          description: "My printer is on fire!"
          id: 33
          status: "new"
          subject: "Help!"
    RequestGetCommentResponseExample:
      value:
        comment:
          body: "Thanks!"
          id: 43
    RequestListCommentsResponseExample:
      value:
        comments:
        - body: "Thanks for your help"
          id: 43
    RequestResponseExample:
      value:
        request:
          custom_status_id: 123
          description: "My printer is on fire!"
          id: 33
          status: "open"
          subject: "Help!"
    RequestUserCreateRequestExample:
      value:
        user:
          email: "roge@example.org"
          name: "Roger Wilco"
    RequestsResponseExample:
      value:
        requests:
        - custom_status_id: 123
          description: "My printer is on fire!"
          id: 33
          status: "open"
          subject: "Help!"
        - custom_status_id: 234
          description: "I can't find my keys"
          id: 34
          status: "closed"
          subject: "Help!"
    ResourceCollectionCreateResponseExample:
      value:
        job_status:
          id: "0a3e49b038c40133d7380242ac110031"
          message: null
          progress: null
          results: null
          status: "queued"
          total: null
          url: "https://company.zendesk.com/api/v2/job_statuses/0a3e49b038c40133d7380242ac110031.json"
    ResourceCollectionDeleteResponseExample:
      value:
        job_status:
          id: "2ee570d0398e0133e26e0242ac110017"
          message: null
          progress: null
          results: null
          status: "queued"
          total: null
          url: "https://company.zendesk.com/api/v2/job_statuses/2ee570d0398e0133e26e0242ac110017.json"
    ResourceCollectionResponseExample:
      value:
        resource_collection:
          created_at: "2015-09-09T01:57:24Z"
          id: 10002
          resources:
          - deleted: false
            identifier: "email_on_ticket_solved"
            resource_id: 10824486485524
            type: "triggers"
          - deleted: false
            identifier: "support_description"
            resource_id: 10824486482580
            type: "ticket_fields"
          updated_at: "2015-09-09T01:57:24Z"
    ResourceCollectionUpdateResponseExample:
      value:
        job_status:
          id: "4555831038d20133d7390242ac110031"
          message: null
          progress: null
          results: null
          status: "queued"
          total: null
          url: "https://company.zendesk.com/api/v2/job_statuses/4555831038d20133d7390242ac110031.json"
    ResourceCollectionsResponseExample:
      value:
        count: 0
        next_page: null
        previous_page: null
        resource_collections:
        - created_at: "2015-09-09T01:57:24Z"
          id: 10002
          resources:
          - deleted: false
            identifier: "email_on_ticket_solved"
            resource_id: 10824486485524
            type: "triggers"
          - deleted: false
            identifier: "support_description"
            resource_id: 10824486482580
            type: "ticket_fields"
          updated_at: "2015-09-09T01:57:24Z"
        - created_at: "2015-09-10T02:01:03Z"
          id: 10002
          resources:
          - deleted: false
            identifier: "an_email_target"
            resource_id: 10827267902996
            type: "targets"
          updated_at: "2015-09-10T02:02:15Z"
    ReverseLookupUsersResponseExample:
      value:
        users:
        - id: 223443
          name: "Johnny Agent"
        - id: 8678530
          name: "James A. Rosen"
    SLAPoliciesResponseExample:
      value:
        count: 1
        next_page: null
        previous_page: null
        sla_policies:
        - description: "For urgent incidents, we will respond to tickets in 10 minutes"
          filter:
            all:
            - field: "type"
              operator: "is"
              value: "incident"
            - field: "via_id"
              operator: "is"
              value: "4"
            any: []
          id: 36
          policy_metrics:
          - business_hours: false
            metric: "first_reply_time"
            priority: "low"
            target: 60
          position: 3
          title: "Incidents"
          url: "https://{subdomain}.zendesk.com/api/v2/slas/policies/36.json"
    SLAPolicyCreateResponse:
      value:
        sla_policy:
          description: "For urgent incidents, we will respond to tickets in 10 minutes"
          filter:
            all:
            - field: "type"
              operator: "is"
              value: "incident"
            any: []
          id: 36
          policy_metrics:
          - business_hours: false
            metric: "first_reply_time"
            priority: "normal"
            target: 30
          - business_hours: false
            metric: "first_reply_time"
            priority: "urgent"
            target: 10
          - business_hours: false
            metric: "requester_wait_time"
            priority: "low"
            target: 180
          - business_hours: false
            metric: "requester_wait_time"
            priority: "normal"
            target: 160
          - business_hours: false
            metric: "requester_wait_time"
            priority: "high"
            target: 140
          - business_hours: false
            metric: "requester_wait_time"
            priority: "urgent"
            target: 120
          position: 3
          title: "Incidents"
          url: "https://{subdomain}.zendesk.com/api/v2/slas/policies/36.json"
    SLAPolicyFilterDefinitionResponseExample:
      value:
        definitions:
          all:
          - group: "ticket"
            operators:
            - title: "Is"
              value: "is"
            - title: "Is not"
              value: "is_not"
            target: null
            title: "Brand"
            value: "brand_id"
            values:
              list:
              - title: "Support"
                value: "10001"
              type: "list"
          any:
          - group: "ticket"
            operators:
            - title: "Is"
              value: "is"
            - title: "Is not"
              value: "is_not"
            target: null
            title: "Brand"
            value: "brand_id"
            values:
              list:
              - title: "Support"
                value: "10001"
              type: "list"
    SLAPolicyResponseExample:
      value:
        sla_policy:
          description: "For urgent incidents, we will respond to tickets in 10 minutes"
          filter:
            all:
            - field: "type"
              operator: "is"
              value: "incident"
            - field: "via_id"
              operator: "is"
              value: "4"
            any: []
          id: 36
          policy_metrics:
          - business_hours: false
            metric: "first_reply_time"
            priority: "low"
            target: 60
          position: 3
          title: "Incidents"
          url: "https://{subdomain}.zendesk.com/api/v2/slas/policies/36.json"
    SLAPolicyUpdateResponse:
      value:
        sla_policy:
          description: "For urgent incidents, we will resolve the ticket within 2 hours"
          filter:
            all:
            - field: "type"
              operator: "is"
              value: "incident"
            any: []
          id: 36
          policy_metrics:
          - business_hours: false
            metric: "first_reply_time"
            priority: "normal"
            target: 30
          - business_hours: false
            metric: "first_reply_time"
            priority: "urgent"
            target: 10
          - business_hours: false
            metric: "requester_wait_time"
            priority: "low"
            target: 180
          - business_hours: false
            metric: "requester_wait_time"
            priority: "normal"
            target: 160
          - business_hours: false
            metric: "requester_wait_time"
            priority: "high"
            target: 140
          - business_hours: false
            metric: "requester_wait_time"
            priority: "urgent"
            target: 120
          position: 3
          title: "Urgent Incidents"
          url: "https://{subdomain}.zendesk.com/api/v2/slas/policies/36.json"
    SatisfactionRatingResponseExample:
      value:
        satisfaction_rating:
        - assignee_id: 135
          comment: "Awesome support!"
          created_at: "2011-07-20T22:55:29Z"
          group_id: 44
          id: 35436
          requester_id: 7881
          score: "good"
          ticket_id: 208
          updated_at: "2011-07-20T22:55:29Z"
          url: "https://example.zendesk.com/api/v2/satisfaction_ratings/35436.json"
    SatisfactionRatingsCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 102
    SatisfactionRatingsResponseExample:
      value:
        satisfaction_ratings:
        - assignee_id: 135
          comment: "Awesome support!"
          created_at: "2011-07-20T22:55:29Z"
          group_id: 44
          id: 35436
          requester_id: 7881
          score: "good"
          ticket_id: 208
          updated_at: "2011-07-20T22:55:29Z"
          url: "https://example.zendesk.com/api/v2/satisfaction_ratings/35436.json"
        - assignee_id: 136
          comment: "Awesome support!"
          created_at: "2012-02-01T04:31:29Z"
          group_id: 44
          id: 120447
          requester_id: 7881
          score: "good"
          ticket_id: 209
          updated_at: "2012-02-02T10:32:59Z"
          url: "https://example.zendesk.com/api/v2/satisfaction_ratings/120447.json"
    SatisfactionReasonResponseExample:
      value:
        reason:
        - created_at: "2011-07-20T22:55:29Z"
          id: 35121
          raw_value: "{{dc.reason_code_1000}}"
          reason_code: 1000
          updated_at: "2011-07-20T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/satisfaction_reason/35121.json"
          value: "Agent did not respond quickly."
    SatisfactionReasonsResponseExample:
      value:
        reasons:
        - created_at: "2011-07-20T22:55:29Z"
          id: 35436
          raw_value: "{{dc.reason_code_1000}}"
          reason_code: 1000
          updated_at: "2011-07-20T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/satisfaction_reasons/35436.json"
          value: "Agent did not respond quickly."
        - created_at: "2011-07-20T22:55:29Z"
          id: 120447
          raw_value: "{{dc.reason_code_1000}}"
          reason_code: 1001
          updated_at: "2011-07-20T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/satisfaction_reasons/120447.json"
          value: "Issue is not resolved."
    SearchCountResponseExample:
      value:
        count: 6
    SearchExportResponseExample:
      value:
        facets: null
        links:
          next: "https://example.zendesk.com/api/v2/search/export.json?filter%5Btype%5D=ticket&page%5Bafter%5D=eyJmaWVsZCI6ImNyZWF0ZWRfYXQiLCJkZXNjIjp0cnVlLCJ0aWVCcmVha0ZpZWxkIjoiaWQiLCJ0aWVCcmVha0Rlc2MiOmZhbHNlLCJzb3J0VmFsdWVzIjpudWxsLCJleHBvcnRlZFRodXNGYXIiOjAsInNlc3Npb25TdGFydCI6MTYwNzAzOTI1Mzk4NSwiY3JlYXRlZEF0IjoxNjA3MDM5MjUzOTg1LCJzYWx0ZWRSZXF1ZXN0SGFzaCI6LTQ5ODM0ODc3LCJzYWx0ZWRDdXJzb3JIYXNoIjotMjQwMzQ4MjgwfQ%3D%3D&page%5Bsize%5D=100&query=hello%26page%5Bsize%5D%3D100%26filter%5Btype%5D%3Dticket"
          prev: null
        meta:
          after_cursor: "eyJmaWVsZCI6ImNyZWF0ZWRfYXQiLCJkZXNjIjp0cnVlLCJ0aWVCcmVha0ZpZWxkIjoiaWQiLCJ0aWVCcmVha0Rlc2MiOmZhbHNlLCJzb3J0VmFsdWVzIjpudWxsLCJleHBvcnRlZFRodXNGYXIiOjAsInNlc3Npb25TdGFydCI6MTYwNzAzOTI1Mzk4NSwiY3JlYXRlZEF0IjoxNjA3MDM5MjUzOTg1LCJzYWx0ZWRSZXF1ZXN0SGFzaCI6LTQ5ODM0ODc3LCJzYWx0ZWRDdXJzb3JIYXNoIjotMjQwMzQ4MjgwfQ=="
          before_cursor: null
          has_more: true
        results: []
    SearchResponseExample:
      value:
        count: 1234
        facets: null
        next_page: "https://foo.zendesk.com/api/v2/search.json?query=\"type:Group hello\"&sort_by=created_at&sort_order=desc&page=2"
        previous_page: null
        results:
        - created_at: "2009-05-13T00:07:08Z"
          id: 211
          name: "Hello DJs"
          result_type: "group"
          updated_at: "2011-07-22T00:11:12Z"
          url: "https://foo.zendesk.com/api/v2/groups/211.json"
        - created_at: "2009-08-26T00:07:08Z"
          id: 122
          name: "Hello MCs"
          result_type: "group"
          updated_at: "2010-05-13T00:07:08Z"
          url: "https://foo.zendesk.com/api/v2/groups/122.json"
    SearchUsersResponseExample:
      value:
        users:
        - id: 35436
          name: "Robert Jones"
          notes: "sigil issue"
        - id: 9873843
          name: "Terry Gilliam"
    SessionResponseExample:
      value:
        session:
        - authenticated_at: "2014-11-18T17:24:29Z"
          id: 3432
          last_seen_at: "2014-11-18T17:30:52Z"
          url: "https://company.zendesk.com/api/v2/users/12345/sessions/3432.json"
          user_id: 12345
    SessionsResponseExample:
      value:
        sessions:
        - authenticated_at: "2014-11-18T17:24:29Z"
          id: 3432
          last_seen_at: "2014-11-18T17:30:52Z"
          url: "https://company.zendesk.com/api/v2/users/12345/sessions/3432.json"
          user_id: 12345
    SharingAgreementCreateResponseExample:
      value:
        sharing_agreement:
          created_at: "2012-02-20T22:55:29Z"
          id: 1
          name: "Foo @ Zendesk"
          partner_name: null
          remote_subdomain: "foo"
          status: "accepted"
          type: "inbound"
          updated_at: "2013-02-20T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/agreements/1.json"
    SharingAgreementResponseExample:
      value:
        sharing_agreement:
          created_at: "2012-02-20T22:55:29Z"
          id: 1
          name: "Foo @ Zendesk"
          partner_name: null
          remote_subdomain: "foo"
          status: "accepted"
          type: "inbound"
          updated_at: "2013-02-20T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/agreements/1.json"
    SharingAgreementUpdateResponseExample:
      value:
        sharing_agreement:
          created_at: "2012-02-20T22:55:29Z"
          id: 1
          name: "Foo @ Zendesk"
          partner_name: null
          remote_subdomain: "foo"
          status: "accepted"
          type: "inbound"
          updated_at: "2013-02-20T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/agreements/1.json"
    SharingAgreementsResponseExample:
      value:
        sharing_agreements:
        - created_at: "2012-02-20T22:55:29Z"
          id: 1
          name: "Foo @ Zendesk"
          partner_name: "jira"
          status: "accepted"
          type: "inbound"
          updated_at: "2013-02-20T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/agreements/1.json"
    ShowDerivedMacroResponseExample:
      value:
        definitions:
          actions:
          - group: "ticket"
            nullable: false
            repeatable: false
            subject: "status"
            title: "Status"
            type: "list"
            values:
            - enabled: true
              title: "Open"
              value: "1"
            - enabled: true
              title: "Pending"
              value: "2"
            - enabled: true
              title: "Solved"
              value: "3"
            - enabled: true
              title: "Closed"
              value: "4"
    ShowJobStatusResponseExample:
      value:
        job_status:
          id: "8b726e606741012ffc2d782bcb7848fe"
          message: "Completed at Fri Apr 13 02:51:53 +0000 2012"
          progress: 2
          results:
          - action: "update"
            id: 380
            status: "Updated"
            success: true
          status: "completed"
          total: 2
          url: "https://company.zendesk.com/api/v2/job_statuses/8b726e606741012ffc2d782bcb7848fe.json"
    ShowManyUsersResponseExample:
      value:
        users:
        - id: 345678
          name: "Johnny Appleseed"
        - id: 901234
          name: "Rupert Root"
    SkillBasedRoutingAttributeCreateResponseExample:
      value:
        attribute:
          created_at: "2018-11-15T23:44:45Z"
          id: "6e279587-e930-11e8-a292-09cfcdea1b75"
          name: "Language"
          updated_at: "2018-11-15T23:44:45Z"
          url: "https://{subdomain}.zendesk.com/api/v2/routing/attributes/6e279587-e930-11e8-a292-09cfcdea1b75.json"
    SkillBasedRoutingAttributeDefinitionsExample:
      value:
        definitions:
          conditions_all:
          - subject: "number_of_incidents"
            title: "Number of incidents"
          conditions_any:
          - subject: "brand"
            title: "Brand"
    SkillBasedRoutingAttributeResponseExample:
      value:
        attribute:
          created_at: "2018-11-15T23:44:45Z"
          id: "6e279587-e930-11e8-a292-09cfcdea1b75"
          name: "Language"
          updated_at: "2018-11-15T23:44:45Z"
          url: "https://{subdomain}.zendesk.com/api/v2/routing/attributes/6e279587-e930-11e8-a292-09cfcdea1b75.json"
    SkillBasedRoutingAttributeUpdateResponseExample:
      value:
        attribute:
          created_at: "2018-11-15T23:44:45Z"
          id: "6e279587-e930-11e8-a292-09cfcdea1b75"
          name: "Lingua"
          updated_at: "2018-11-15T23:44:45Z"
          url: "https://{subdomain}.zendesk.com/api/v2/routing/attributes/6e279587-e930-11e8-a292-09cfcdea1b75.json"
    SkillBasedRoutingAttributeValueCreateResponseExample:
      value:
        attribute_value:
          created_at: "2018-11-08T19:22:58Z"
          id: "6ccddacf-e85e-11e8-a292-ad7686bdff67"
          name: "Japanese"
          updated_at: "2018-11-08T19:22:58Z"
          url: "https://{subdomain}.zendesk.com/api/v2/routing/attributes/afa31619-e38b-11e8-a292-5d17513d969b/values/6ccddacf-e85e-11e8-a292-ad7686bdff67.json"
    SkillBasedRoutingAttributeValueResponseExample:
      value:
        attribute_value:
          created_at: "2018-11-08T19:22:58Z"
          id: "b376b35a-e38b-11e8-a292-e3b6377c5575"
          name: "French"
          updated_at: "2018-11-08T19:22:58Z"
          url: "https://{subdomain}.zendesk.com/api/v2/routing/attributes/afa31619-e38b-11e8-a292-5d17513d969b/values/b376b35a-e38b-11e8-a292-e3b6377c5575.json"
    SkillBasedRoutingAttributeValueUpdateResponseExample:
      value:
        attribute_value:
          created_at: "2018-11-14T22:41:28Z"
          id: "b376b35a-e38b-11e8-a292-e3b6377c5575"
          name: "German (Advanced)"
          updated_at: "2018-11-14T22:45:01Z"
          url: "https://{subdomain}.zendesk.com/api/v2/routing/attributes/afa31619-e38b-11e8-a292-5d17513d969b/values/b376b35a-e38b-11e8-a292-e3b6377c5575.json"
    SkillBasedRoutingAttributeValuesResponseExample:
      value:
        attribute_values:
        - created_at: "2018-11-08T19:22:58Z"
          id: "b376b35a-e38b-11e8-a292-e3b6377c5575"
          name: "French"
          updated_at: "2018-11-08T19:22:58Z"
          url: "https://{subdomain}.zendesk.com/api/v2/routing/attributes/afa31619-e38b-11e8-a292-5d17513d969b/values/b376b35a-e38b-11e8-a292-e3b6377c5575.json"
    SkillBasedRoutingAttributesResponseExample:
      value:
        attributes:
        - created_at: "2017-12-01T19:29:31Z"
          id: "15821cba-7326-11e8-b07e-950ba849aa27"
          name: "Color"
          updated_at: "2017-12-01T19:29:31Z"
        count: 1
        next_page: null
        previous_page: null
    SkillBasedRoutingTicketAttributesResponseExample:
      value:
        attribute_values:
        - attribute_id: "f4a604b1-d6cd-11e7-a492-657e7928664c"
          created_at: "2017-12-01T19:29:41Z"
          id: "fa1131e2-d6cd-11e7-a492-dbdd5500c7e3"
          name: "Ocean"
          updated_at: "2017-12-01T19:35:45Z"
    SkillBasedRoutingTicketFulfilledResponseExample:
      value:
        fulfilled_ticket_ids:
        - 1
        - 17
    SupportAddressCreateResponseExample:
      value:
        recipient_address:
          brand_id: 123
          cname_status: "verified"
          created_at: "2017-04-02T22:55:29Z"
          default: false
          email: "help@example.zendesk.com"
          forwarding_status: "waiting"
          id: 33
          name: "Sales"
          spf_status: "verified"
          updated_at: "2017-04-02T22:55:29Z"
    SupportAddressResponseExample:
      value:
        recipient_address:
          brand_id: 123
          cname_status: "unknown"
          created_at: "2017-04-02T22:55:29Z"
          default: true
          email: "help@example.zendesk.com"
          forwarding_status: "waiting"
          id: 33
          name: "Sales"
          spf_status: "unknown"
          updated_at: "2017-04-02T22:55:29Z"
    SupportAddressUpdateResponseExample:
      value:
        recipient_address:
          brand_id: 123
          created_at: "2017-04-02T22:55:29Z"
          default: true
          email: "name2@example.com"
          forwarding_status: "verified"
          id: 33
          name: "Sales"
          updated_at: "2017-05-02T22:55:29Z"
    SupportAddressesResponseExample:
      value:
        recipient_addresses:
        - brand_id: 123
          cname_status: "verified"
          created_at: "2015-07-20T22:55:29Z"
          default: true
          domain_verification_status: "verified"
          email: "sales@example.zendesk.com"
          forwarding_status: "unknown"
          id: 33
          name: "Sales"
          spf_status: "verified"
          updated_at: "2016-09-21T20:15:20Z"
        - brand_id: 123
          cname_status: "verified"
          created_at: "2015-07-20T22:55:29Z"
          default: false
          domain_verification_status: "verified"
          email: "marketing@example.zendesk.com"
          forwarding_status: "unknown"
          id: 34
          name: "Marketing"
          spf_status: "verified"
          updated_at: "2016-09-21T20:15:20Z"
    SuspendedTicketResponseExample:
      value:
        suspended_ticket:
        - author:
            email: "styx@example.com"
            id: 1
            name: "Mr. Roboto"
          brand_id: 123
          cause: "Detected as spam"
          content: "Out Of Office Reply"
          created_at: "2009-07-20T22:55:29Z"
          id: 3436
          recipient: "john@example.com"
          subject: "Help I need somebody!"
          ticket_id: 67321
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://example.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "web"
    SuspendedTicketsAttachmentsResponseExample:
      value:
        upload:
          attachments:
          - content_type: "application/ics"
            content_url: "https://company.zendesk.com/attachments/token/tyBq1ms40dFaHefSIigxZpwGg/?name=calendar.ics"
            file_name: "calendar.ics"
            id: 367
            size: 1166
            thumbnails: []
            url: "https://company.zendesk.com/api/v2/attachments/367.json"
          token: "yrznqgjoa24iw2f"
    SuspendedTicketsExportResponseExample:
      value:
        export:
          status: "enqueued"
          view_id: "suspended"
    SuspendedTicketsResponseExample:
      value:
        suspended_tickets:
        - attachments: []
          author:
            email: "styx@example.com"
            id: 1
            name: "Mr. Roboto"
          brand_id: 123
          cause: "Detected as spam"
          cause_id: 0
          content: "Out Of Office Reply"
          created_at: "2009-07-20T22:55:29Z"
          error_messages: null
          id: 435
          message_id: "Spambot@spam.co.evil"
          recipient: "john@example.com"
          subject: "Help, my printer is on fire!"
          ticket_id: 67321
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://example.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "email"
            source:
              from:
                address: "totallylegit@emailaddress.com"
                name: "TotallyLegit"
              rel: null
              to:
                address: "support@example.zendesk.com"
                name: "Example Account"
        - attachments: []
          author:
            email: "styx@example.com"
            id: 1
            name: "Mr. Roboto"
          brand_id: 123
          cause: "Automated response mail"
          cause_id: 0
          content: "Out Of Office Reply"
          created_at: "2009-07-20T22:55:29Z"
          error_messages: null
          id: 207623
          message_id: "Spambot@spam.co.evil"
          recipient: "john@example.com"
          subject: "Not just anybody!"
          ticket_id: 67321
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://example.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "email"
            source:
              from:
                address: "totallylegit@emailaddress.com"
                name: "TotallyLegit"
              rel: null
              to:
                address: "support@example.zendesk.com"
                name: "Example Account"
    TagCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 102
    TagsAutocompleteResponseExample:
      value:
        tags:
        - "attention"
        - "attack"
    TagsByObjectIdResponse:
      value:
        tags:
        - "urgent"
        - "printer"
        - "fire"
    TagsResponseExample:
      value:
        tags:
        - count: 10
          name: "Triage"
        count: 1
        next_page: null
        previous_page: null
    TargetCreateResponseExample:
      value:
        target:
          active: true
          created_at: "2009-05-13T00:07:08Z"
          email: "hello@example.com"
          subject: "Test Target"
          title: "Test Email Target"
          type: "email_target"
    TargetFailureResponseExample:
      value:
        target_failure:
          id: 1
          raw_request: "GET /api/v2/tickets.json HTTP/1.1\r\nUser-Agent: Zendesk Target\r\n ..."
          raw_response: "HTTP/1.1 401 Unauthorized\r\nServer: nginx\r\n ..."
          status_code: 401
          target_name: "My URL Target"
    TargetFailuresResponseExample:
      value:
        target_failures:
        - id: 1
          status_code: 401
          target_name: "My URL Target"
        - id: 2
          status_code: 401
          target_name: "My URL Target"
    TargetResponseExample:
      value:
        target:
          active: true
          created_at: "2009-05-13T00:07:08Z"
          id: 211
          title: "Fancy box"
          type: "basecamp_target"
    TargetUpdateResponseExample:
      value:
        target:
          active: true
          created_at: "2009-05-13T00:07:08Z"
          email: "roger@example.com"
          subject: "Test Target"
          title: "Test Email Target"
          type: "email_target"
    TargetsResponseExample:
      value:
        targets:
        - active: true
          created_at: "2009-05-13T00:07:08Z"
          id: 211
          title: "Fancy box"
          type: "basecamp_target"
    TicketAuditResponseExample:
      value:
        audit:
          author_id: 5246746
          created_at: "2011-09-25T22:35:44Z"
          events:
          - attachments: []
            body: "This is a new private comment"
            html_body: "<p>This is a new private comment</p>"
            id: 2127301148
            public: false
            type: "Comment"
          - field_name: "status"
            id: 2127301163
            previous_value: "new"
            type: "Change"
            value: "open"
            via:
              channel: "rule"
              source:
                from:
                  id: 22472716
                  title: "Assign to first responder"
                rel: "trigger"
                to: {}
          - field_name: "custom_status_id"
            id: 2127301164
            previous_value: 1
            type: "Change"
            value: 123
            via:
              channel: "rule"
              source:
                from:
                  id: 22472716
                  title: "Assign to first responder"
                rel: "trigger"
                to: {}
          id: 2127301143
          metadata:
            custom: {}
            system:
              client: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1"
              ip_address: "76.218.201.212"
              location: "San Francisco, CA, United States"
          ticket_id: 666
          via:
            channel: "web"
    TicketAuditsCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 18
    TicketAuditsForTicketResponseExample:
      value:
        audits:
        - author_id: 5246746
          created_at: "2011-09-25T22:35:44Z"
          events:
          - attachments: []
            body: "This is a new private comment"
            html_body: "<p>This is a new private comment</p>"
            id: 2127301148
            public: false
            type: "Comment"
          - field_name: "status"
            id: 2127301163
            previous_value: "new"
            type: "Change"
            value: "open"
            via:
              channel: "rule"
              source:
                from:
                  id: 35079792
                  title: "Assign to first responder"
                rel: "trigger"
                to: {}
          - field_name: "custom_status_id"
            id: 2127301164
            previous_value: 1
            type: "Change"
            value: 123
            via:
              channel: "rule"
              source:
                from:
                  id: 22472716
                  title: "Assign to first responder"
                rel: "trigger"
                to: {}
          id: 2127301143
          metadata:
            custom: {}
            system:
              client: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1"
              ip_address: "76.218.201.212"
              location: "San Francisco, CA, United States"
          ticket_id: 666
          via:
            channel: "web"
        count: 1
        next_page: null
        previous_page: null
    TicketAuditsResponseExample:
      value:
        after_cursor: "MTUwMTYwNzUyMi4wfHwxMzQ3NTMxNjcxfA=="
        after_url: "https://subdomain.zendesk.com/api/v2/ticket_audits.json?cursor=MTUwMTYwNzUyMi4wfHwxMzQ3NTMxNjcxfA%3D%3D&limit=1000"
        audits:
        - author_id: 35436
          created_at: "2011-09-25T22:35:44Z"
          events:
          - attachments: []
            body: "Thanks for your help!"
            id: 1564245
            public: true
            type: "Comment"
          - body: "Ticket #47 has been updated"
            id: 1564246
            subject: "Your ticket has been updated"
            type: "Notification"
          - field_name: "status"
            id: 1564247
            previous_value: "new"
            type: "Change"
            value: "open"
          - field_name: "custom_status_id"
            id: 1564248
            previous_value: 1
            type: "Change"
            value: 123
          id: 2127301143
          metadata:
            custom:
              time_spent: "3m22s"
            system:
              ip_address: "184.106.40.75"
          ticket_id: 123
          via:
            channel: "web"
        before_cursor: "fDE1MDE1NzUxMjIuMHx8MTM0NzM0MzAxMQ=="
        before_url: "https://subdomain.zendesk.com/api/v2/ticket_audits.json?cursor=fDE1MDE1NzUxMjIuMHx8MTM0NzM0MzAxMQ%3D%3D&limit=1000"
    TicketBulkImportRequestExample:
      value:
        tickets:
        - tags:
          - "foo"
          - "bar"
          assignee_id: 19
          comments:
          - author_id: 827
            created_at: "2009-06-25T10:15:18Z"
            value: "This is a comment"
          - author_id: 19
            public: false
            value: "This is a private comment"
          description: "A description"
          requester_id: 827
          subject: "Help"
        - tags:
          - "foo"
          - "bar"
          assignee_id: 21
          comments:
          - author_id: 830
            created_at: "2009-06-25T10:15:18Z"
            value: "This is a comment"
          - author_id: 21
            public: false
            value: "This is a private comment"
          description: "A description"
          requester_id: 830
          subject: "Missing Item"
    TicketChatCommentAttachmentRedactionResponseExample:
      value:
        chat_event:
          id: 1932802680168
          type: "ChatStartedEvent"
          value:
            chat_id: "2109.10502823.Sjuj2YrBpXwei"
            history:
            - chat_index: 0
              filename: "redacted.txt"
              type: "ChatFileAttachment"
            - chat_index: 1
              filename: "redacted.txt"
              type: "ChatFileAttachment"
            visitor_id: "10502823-16EkM3T6VNq7KMd"
    TicketChatCommentRedactionResponseExample:
      value:
        chat_event:
          id: 1932802680168
          type: "ChatStartedEvent"
          value:
            chat_id: "2109.10502823.Sjuj2YrBpXwei"
            history:
            - chat_index: 0
              message: "My ID number is ▇▇▇▇!"
              type: "ChatMessage"
            visitor_id: "10502823-16EkM3T6VNq7KMd"
    TicketCommentStringRedactResponseExample:
      value:
        comment:
          author_id: 1
          id: 35436
          plain_body: "My social security number is ▇▇▇▇!"
          type: "Comment"
    TicketCommentsCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 12
    TicketCommentsRedactionInAgentWorkspaceResponseExample:
      value:
        comment:
          attachments: []
          author_id: 123
          id: 100
          plain_body: "My ID number is ▇▇▇▇!"
          public: true
          type: "Comment"
    TicketCommentsResponseExample:
      value:
        comments:
        - attachments:
          - content_type: "text/plain"
            content_url: "https://company.zendesk.com/attachments/crash.log"
            file_name: "crash.log"
            id: 498483
            size: 2532
            thumbnails: []
          audit_id: 432567
          author_id: 123123
          body: "Thanks for your help!"
          created_at: "2009-07-20T22:55:29Z"
          id: 1274
          metadata:
            system:
              client: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36"
              ip_address: "1.1.1.1"
              latitude: -37
              location: "Melbourne, 07, Australia"
              longitude: 144
            via:
              channel: "web"
              source:
                from: {}
                rel: "web_widget"
                to: {}
          public: true
          type: "Comment"
    TicketCreateRequestExample:
      value:
        ticket:
          comment:
            body: "The smoke is very colorful."
          priority: "urgent"
          subject: "My printer is on fire!"
    TicketCreateTicketViaTalkRequestExample:
      value:
        display_to_agent: 1234
        ticket:
          comment:
            body: "My printer is on fire!"
          priority: "urgent"
          via_id: 46
          voice_comment:
            answered_by_id: 28
            call_duration: 40
            from: "+16617480240"
            location: "Dublin, Ireland"
            recording_url: "http://yourdomain.com/recordings/1.mp3"
            started_at: "2019-04-16T09:14:57Z"
            to: "+16617480123"
            transcription_text: "The transcription of the call"
    TicketFieldCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 102
    TicketFieldResponseExample:
      value:
        ticket_field:
          active: true
          agent_description: "Agent only description"
          collapsed_for_agents: false
          created_at: "2012-04-02T22:55:29Z"
          description: "Age"
          editable_in_portal: false
          id: 89
          position: 9999
          raw_description: "Age"
          raw_title: "Age"
          raw_title_in_portal: "Age"
          regexp_for_validation: null
          required: true
          required_in_portal: false
          tag: null
          title: "Age"
          title_in_portal: "Age"
          type: "text"
          updated_at: "2012-04-02T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/ticket_fields/89.json"
          visible_in_portal: false
    TicketFieldUpdateResponseExample:
      value:
        ticket_field:
          active: true
          agent_description: "Agent only description"
          collapsed_for_agents: false
          created_at: "2012-04-02T22:55:29Z"
          description: "Your age"
          editable_in_portal: false
          id: 89
          position: 9999
          raw_description: "Your age"
          raw_title: "Your age"
          raw_title_in_portal: "Your age"
          regexp_for_validation: null
          required: true
          required_in_portal: false
          tag: null
          title: "Your age"
          title_in_portal: "Your age"
          type: "text"
          updated_at: "2012-04-02T23:11:23Z"
          url: "https://company.zendesk.com/api/v2/ticket_fields/89.json"
          visible_in_portal: false
    TicketFieldsResponseExample:
      value:
        ticket_fields:
        - active: true
          agent_description: "Agent only description"
          collapsed_for_agents: false
          created_at: "2009-07-20T22:55:29Z"
          description: "This is the subject field of a ticket"
          editable_in_portal: true
          id: 34
          position: 21
          raw_description: "This is the subject field of a ticket"
          raw_title: "{{dc.my_title}}"
          raw_title_in_portal: "{{dc.my_title_in_portal}}"
          regexp_for_validation: null
          required: true
          required_in_portal: true
          tag: null
          title: "Subject"
          title_in_portal: "Subject"
          type: "subject"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/ticket_fields/34.json"
          visible_in_portal: true
    TicketFormCreateResponseExample:
      value:
        ticket_form:
          active: true
          agent_conditions:
          - child_fields:
            - id: 44
              is_required: false
              required_on_statuses:
                statuses:
                - "new"
                - "open"
                - "pending"
                - "hold"
                type: "SOME_STATUSES"
            - id: 32
              is_required: true
              required_on_statuses:
                statuses:
                - "solved"
                type: "SOME_STATUSES"
            parent_field_id: 5
            value: "matching_value_1"
          - child_fields:
            - id: 44
              is_required: true
              required_on_statuses:
                type: "ALL_STATUSES"
            - id: 32
              is_required: false
              required_on_statuses:
                type: "NO_STATUSES"
            parent_field_id: 32
            value: "matching_value_2"
          created_at: "2012-04-02T22:55:29Z"
          default: false
          display_name: "Snowboard Damage"
          end_user_conditions:
          - child_fields:
            - id: 32
              is_required: true
            parent_field_id: 5
            value: "matching_value_1"
          - child_fields:
            - id: 44
              is_required: false
            parent_field_id: 32
            value: "matching_value_2"
          end_user_visible: true
          id: 47
          in_all_brands: false
          name: "Snowboard Problem"
          position: 9999
          raw_display_name: "Snowboard Damage"
          raw_name: "Snowboard Problem"
          restricted_brand_ids:
          - 1
          - 4
          - 6
          - 12
          - 34
          ticket_field_ids:
          - 2
          - 4
          - 5
          - 32
          - 44
          updated_at: "2012-04-02T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/ticket_forms/47.json"
    TicketFormResponseExample:
      value:
        ticket_form:
          active: true
          agent_conditions:
          - child_fields:
            - id: 44
              is_required: false
              required_on_statuses:
                statuses:
                - "new"
                - "open"
                - "pending"
                - "hold"
                type: "SOME_STATUSES"
            - id: 32
              is_required: true
              required_on_statuses:
                statuses:
                - "solved"
                type: "SOME_STATUSES"
            parent_field_id: 5
            value: "matching_value_1"
          - child_fields:
            - id: 44
              is_required: true
              required_on_statuses:
                type: "ALL_STATUSES"
            - id: 32
              is_required: false
              required_on_statuses:
                type: "NO_STATUSES"
            parent_field_id: 32
            value: "matching_value_2"
          created_at: "2012-04-02T22:55:29Z"
          default: true
          display_name: "Snowboard Damage"
          end_user_conditions:
          - child_fields:
            - id: 32
              is_required: true
            parent_field_id: 5
            value: "matching_value_1"
          - child_fields:
            - id: 44
              is_required: false
            parent_field_id: 32
            value: "matching_value_2"
          end_user_visible: true
          id: 47
          in_all_brands: false
          name: "Snowboard Problem"
          position: 9999
          raw_display_name: "{{dc.my_display_name}}"
          raw_name: "Snowboard Problem"
          restricted_brand_ids:
          - 1
          - 4
          - 6
          - 12
          - 34
          ticket_field_ids:
          - 2
          - 4
          - 5
          - 32
          - 44
          updated_at: "2012-04-02T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/ticket_forms/47.json"
    TicketFormUpdateResponseExample:
      value:
        ticket_form:
          active: true
          agent_conditions: []
          created_at: "2012-04-02T22:55:29Z"
          default: true
          display_name: "Snowboard has been fixed"
          end_user_conditions: []
          end_user_visible: true
          id: 47
          in_all_brands: true
          name: "Snowboard Fixed"
          position: 9999
          raw_display_name: "Snowboard has been fixed"
          raw_name: "Snowboard Fixed"
          restricted_brand_ids: []
          ticket_field_ids:
          - 2
          - 4
          - 5
          - 32
          - 44
          updated_at: "2012-04-02T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/ticket_forms/47.json"
    TicketFormsResponseExample:
      value:
        ticket_forms:
        - active: true
          agent_conditions:
          - child_fields:
            - id: 44
              is_required: false
              required_on_statuses:
                statuses:
                - "new"
                - "open"
                - "pending"
                - "hold"
                type: "SOME_STATUSES"
            - id: 32
              is_required: true
              required_on_statuses:
                statuses:
                - "solved"
                type: "SOME_STATUSES"
            parent_field_id: 5
            value: "matching_value_1"
          - child_fields:
            - id: 44
              is_required: true
              required_on_statuses:
                type: "ALL_STATUSES"
            - id: 32
              is_required: false
              required_on_statuses:
                type: "NO_STATUSES"
            parent_field_id: 32
            value: "matching_value_2"
          created_at: "2012-04-02T22:55:29Z"
          default: true
          display_name: "Snowboard Damage"
          end_user_conditions:
          - child_fields:
            - id: 32
              is_required: true
            parent_field_id: 5
            value: "matching_value_1"
          - child_fields:
            - id: 44
              is_required: false
            parent_field_id: 32
            value: "matching_value_2"
          end_user_visible: true
          id: 47
          in_all_brands: false
          name: "Snowboard Problem"
          position: 9999
          raw_display_name: "{{dc.my_display_name}}"
          raw_name: "Snowboard Problem"
          restricted_brand_ids:
          - 1
          - 4
          - 6
          - 12
          - 34
          ticket_field_ids:
          - 2
          - 4
          - 5
          - 32
          - 44
          updated_at: "2012-04-02T22:55:29Z"
          url: "https://company.zendesk.com/api/v2/ticket_forms/47.json"
    TicketImportRequestExample:
      value:
        ticket:
          tags:
          - "foo"
          - "bar"
          assignee_id: 19
          comments:
          - author_id: 827
            created_at: "2009-06-25T10:15:18Z"
            value: "This is a comment"
          - author_id: 19
            public: false
            value: "This is a private comment"
          description: "A description"
          requester_id: 827
          subject: "Help"
    TicketMergeInputExample:
      value:
        ids:
        - 123
        - 456
        - 789
        source_comment: "Closing in favor of #111"
        target_comment: "Combining with #123, #456, #789"
    TicketMetricEventsResponseExample:
      value:
        count: 3
        end_time: 1603716792
        next_page: "https://company.zendesk.com/api/v2/incremental/ticket_metric_events.json?start_time=1603716792"
        ticket_metric_events:
        - id: 926232157301
          instance_id: 0
          metric: "agent_work_time"
          ticket_id: 155
          time: "2020-10-26T12:53:12Z"
          type: "measure"
        - id: 926232757371
          instance_id: 1
          metric: "agent_work_time"
          ticket_id: 155
          time: "2020-10-26T12:53:12Z"
          type: "activate"
        - id: 926232927415
          instance_id: 0
          metric: "pausable_update_time"
          ticket_id: 155
          time: "2020-10-26T12:53:12Z"
          type: "measure"
    TicketMetricResponseExample:
      value:
        ticket_metric:
        - agent_wait_time_in_minutes:
            business: 0
            calendar: 0
          assigned_at: "2020-07-20T06:21:26Z"
          assignee_stations: 0
          assignee_updated_at: "2020-07-20T06:21:26Z"
          created_at: "2020-07-21T01:01:42Z"
          first_resolution_time_in_minutes:
            business: 0
            calendar: 0
          full_resolution_time_in_minutes:
            business: 0
            calendar: 0
          group_stations: 0
          id: 33
          initially_assigned_at: "2020-07-20T06:21:26Z"
          latest_comment_added_at: "2020-07-21T01:17:16Z"
          on_hold_time_in_minutes:
            business: 0
            calendar: 0
          reopens: 0
          replies: 1
          reply_time_in_minutes:
            business: 16
            calendar: 16
          reply_time_in_seconds:
            calendar: 960
          requester_updated_at: "2020-07-21T01:17:16Z"
          requester_wait_time_in_minutes:
            business: 0
            calendar: 0
          solved_at: "2020-07-20T06:21:26Z"
          status_updated_at: "2020-07-21T01:01:41Z"
          ticket_id: 1517
          updated_at: "2020-07-21T01:17:16Z"
          url: "https://example.zendesk.com/api/v2/ticket_metrics/33.json"
    TicketMetricsResponseExample:
      value:
        ticket_metrics:
        - agent_wait_time_in_minutes:
            business: 0
            calendar: 0
          assigned_at: "2020-07-20T06:21:26Z"
          assignee_stations: 0
          assignee_updated_at: "2020-07-20T06:21:26Z"
          created_at: "2020-07-21T01:01:42Z"
          first_resolution_time_in_minutes:
            business: 0
            calendar: 0
          full_resolution_time_in_minutes:
            business: 0
            calendar: 0
          group_stations: 0
          id: 33
          initially_assigned_at: "2020-07-20T06:21:26Z"
          latest_comment_added_at: "2020-07-21T01:17:16Z"
          on_hold_time_in_minutes:
            business: 0
            calendar: 0
          reopens: 0
          replies: 1
          reply_time_in_minutes:
            business: 16
            calendar: 16
          reply_time_in_seconds:
            calendar: 960
          requester_updated_at: "2020-07-21T01:17:16Z"
          requester_wait_time_in_minutes:
            business: 0
            calendar: 0
          solved_at: "2020-07-20T06:21:26Z"
          status_updated_at: "2020-07-21T01:01:41Z"
          ticket_id: 1517
          updated_at: "2020-07-21T01:17:16Z"
          url: "https://example.zendesk.com/api/v2/ticket_metrics/33.json"
        - agent_wait_time_in_minutes:
            business: 0
            calendar: 0
          assigned_at: "2020-07-20T06:21:26Z"
          assignee_stations: 0
          assignee_updated_at: "2020-07-20T06:21:26Z"
          created_at: "2020-07-20T06:21:27Z"
          first_resolution_time_in_minutes:
            business: 0
            calendar: 0
          full_resolution_time_in_minutes:
            business: 0
            calendar: 0
          group_stations: 0
          id: 34
          initially_assigned_at: "2020-07-20T06:21:26Z"
          latest_comment_added_at: "2020-07-20T06:21:26Z"
          on_hold_time_in_minutes:
            business: 0
            calendar: 0
          reopens: 0
          replies: 0
          reply_time_in_minutes:
            business: 0
            calendar: 0
          reply_time_in_seconds:
            calendar: 0
          requester_updated_at: "2020-07-20T06:21:26Z"
          requester_wait_time_in_minutes:
            business: 0
            calendar: 0
          solved_at: "2020-07-20T06:21:26Z"
          status_updated_at: "2020-07-20T06:21:26Z"
          ticket_id: 1511
          updated_at: "2020-07-20T06:21:27Z"
          url: "https://example.zendesk.com/api/v2/ticket_metrics/34.json"
    TicketRelatedInformationExample:
      value:
        followup_source_ids: []
        from_archive: false
        incidents: 7
        topic_id: null
        twitter:
          direct: false
          handle_id: 10
          profile:
            created_at: "2013/01/08 23:24:49 -0800"
            description: "Zendesk is the leading ..."
    TicketResponseExample:
      value:
        ticket:
          tags:
          - "enterprise"
          - "other_tag"
          assignee_id: 235323
          collaborator_ids:
          - 35334
          - 234
          created_at: "2009-07-20T22:55:29Z"
          custom_fields:
          - id: 27642
            value: "745"
          - id: 27648
            value: "yes"
          custom_status_id: 123
          description: "The fire is very colorful."
          due_at: null
          external_id: "ahg35h3jh"
          follower_ids:
          - 35334
          - 234
          from_messaging_channel: false
          group_id: 98738
          has_incidents: false
          id: 35436
          organization_id: 509974
          priority: "high"
          problem_id: 9873764
          raw_subject: "{{dc.printer_on_fire}}"
          recipient: "support@company.com"
          requester_id: 20978392
          satisfaction_rating:
            comment: "Great support!"
            id: 1234
            score: "good"
          sharing_agreement_ids:
          - 84432
          status: "open"
          subject: "Help, my printer is on fire!"
          submitter_id: 76872
          type: "incident"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "web"
    TicketSkipCreationExample:
      value:
        skip:
          created_at: "2015-09-30T21:44:03Z"
          id: 1
          reason: "I have no idea."
          ticket:
            tags:
            - "enterprise"
            - "other_tag"
            assignee_id: 235323
            collaborator_ids:
            - 35334
            - 234
            created_at: "2009-07-20T22:55:29Z"
            custom_fields:
            - id: 27642
              value: "745"
            - id: 27648
              value: "yes"
            description: "The fire is very colorful."
            due_at: null
            external_id: "ahg35h3jh"
            follower_ids:
            - 35334
            - 234
            from_messaging_channel: false
            group_id: 98738
            has_incidents: false
            id: 123
            organization_id: 509974
            priority: "high"
            problem_id: 9873764
            raw_subject: "{{dc.printer_on_fire}}"
            recipient: "support@company.com"
            requester_id: 20978392
            satisfaction_rating:
              comment: "Great support!"
              id: 1234
              score: "good"
            sharing_agreement_ids:
            - 84432
            status: "open"
            subject: "Help, my printer is on fire!"
            submitter_id: 76872
            type: "incident"
            updated_at: "2011-05-05T10:38:52Z"
            url: "https://company.zendesk.com/api/v2/tickets/35436.json"
            via:
              channel: "web"
          ticket_id: 123
          updated_at: "2015-09-30T21:44:03Z"
          user_id: 456
    TicketSkipResponseExample:
      value:
        skips:
        - created_at: "2015-09-30T21:44:03Z"
          id: 1
          reason: "I have no idea."
          ticket:
            tags:
            - "enterprise"
            - "other_tag"
            assignee_id: 235323
            collaborator_ids:
            - 35334
            - 234
            created_at: "2009-07-20T22:55:29Z"
            custom_fields:
            - id: 27642
              value: "745"
            - id: 27648
              value: "yes"
            description: "The fire is very colorful."
            due_at: null
            external_id: "ahg35h3jh"
            follower_ids:
            - 35334
            - 234
            from_messaging_channel: false
            group_id: 98738
            has_incidents: false
            id: 123
            organization_id: 509974
            priority: "high"
            problem_id: 9873764
            raw_subject: "{{dc.printer_on_fire}}"
            recipient: "support@company.com"
            requester_id: 20978392
            satisfaction_rating:
              comment: "Great support!"
              id: 1234
              score: "good"
            sharing_agreement_ids:
            - 84432
            status: "open"
            subject: "Help, my printer is on fire!"
            submitter_id: 76872
            type: "incident"
            updated_at: "2011-05-05T10:38:52Z"
            url: "https://company.zendesk.com/api/v2/tickets/35436.json"
            via:
              channel: "web"
          ticket_id: 123
          updated_at: "2015-09-30T21:44:03Z"
          user_id: 456
        - created_at: "2015-10-01T21:44:03Z"
          id: 2
          reason: "I am lost."
          ticket:
            tags:
            - "enterprise"
            - "other_tag"
            assignee_id: 235323
            collaborator_ids:
            - 35334
            - 234
            created_at: "2009-07-20T22:55:29Z"
            custom_fields:
            - id: 27642
              value: "745"
            - id: 27648
              value: "yes"
            description: "The fire is very colorful."
            due_at: null
            external_id: "ahg35h3jh"
            follower_ids:
            - 35334
            - 234
            from_messaging_channel: false
            group_id: 98738
            has_incidents: false
            id: 321
            organization_id: 509974
            priority: "high"
            problem_id: 9873764
            raw_subject: "{{dc.printer_on_fire}}"
            recipient: "support@company.com"
            requester_id: 20978392
            satisfaction_rating:
              comment: "Great support!"
              id: 1234
              score: "good"
            sharing_agreement_ids:
            - 84432
            status: "open"
            subject: "Help, my printer is on fire!"
            submitter_id: 76872
            type: "incident"
            updated_at: "2011-05-05T10:38:52Z"
            url: "https://company.zendesk.com/api/v2/tickets/35436.json"
            via:
              channel: "web"
          ticket_id: 321
          updated_at: "2015-10-01T21:44:03Z"
          user_id: 654
    TicketUpdateRequestExample:
      value:
        ticket:
          comment:
            body: "Thanks for choosing Acme Jet Motors."
            public: true
          custom_status_id: 321
          status: "solved"
    TicketUpdateResponseExample:
      value:
        audit:
          events:
          - field_name: "subject"
            id: 206091192546
            type: "Create"
            value: "My printer is on fire!"
          - body: "The smoke is very colorful."
            id: 206091192547
            type: "Comment"
          - field_name: "status"
            id: 206091192548
            type: "Create"
            value: "open"
          - field_name: "custom_status_id"
            id: 206091192549
            type: "Create"
            value: 123
        ticket:
          custom_status_id: 123
          id: 35436
          requester_id: 123453
          status: "open"
          subject: "My printer is on fire!"
    TicketsCreateRequestExample:
      value:
        tickets:
        - comment:
            body: "The smoke is very colorful."
          priority: "urgent"
          subject: "My printer is on fire!"
        - comment:
            body: "This is a comment"
          priority: "normal"
          subject: "Help"
    TicketsResponseExample:
      value:
        tickets:
        - tags:
          - "enterprise"
          - "other_tag"
          assignee_id: 235323
          collaborator_ids:
          - 35334
          - 234
          created_at: "2009-07-20T22:55:29Z"
          custom_fields:
          - id: 27642
            value: "745"
          - id: 27648
            value: "yes"
          custom_status_id: 123
          description: "The fire is very colorful."
          due_at: null
          external_id: "ahg35h3jh"
          follower_ids:
          - 35334
          - 234
          from_messaging_channel: false
          group_id: 98738
          has_incidents: false
          id: 35436
          organization_id: 509974
          priority: "high"
          problem_id: 9873764
          raw_subject: "{{dc.printer_on_fire}}"
          recipient: "support@company.com"
          requester_id: 20978392
          satisfaction_rating:
            comment: "Great support!"
            id: 1234
            score: "good"
          sharing_agreement_ids:
          - 84432
          status: "open"
          subject: "Help, my printer is on fire!"
          submitter_id: 76872
          type: "incident"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "web"
    TimeBasedExportIncrementalTicketsResponseExample:
      value:
        count: 2
        end_of_stream: true
        end_time: 1390362485
        next_page: "https://{subdomain}.zendesk.com/api/v2/incremental/tickets.json?per_page=3&start_time=1390362485"
        tickets:
        - tags:
          - "enterprise"
          - "other_tag"
          assignee_id: 235323
          collaborator_ids:
          - 35334
          - 234
          created_at: "2009-07-20T22:55:29Z"
          custom_fields:
          - id: 27642
            value: "745"
          - id: 27648
            value: "yes"
          description: "The fire is very colorful."
          due_at: null
          external_id: "ahg35h3jh"
          follower_ids:
          - 35334
          - 234
          from_messaging_channel: false
          group_id: 98738
          has_incidents: false
          id: 35436
          organization_id: 509974
          priority: "high"
          problem_id: 9873764
          raw_subject: "{{dc.printer_on_fire}}"
          recipient: "support@company.com"
          requester_id: 20978392
          satisfaction_rating:
            comment: "Great support!"
            id: 1234
            score: "good"
          sharing_agreement_ids:
          - 84432
          status: "open"
          subject: "Help, my printer is on fire!"
          submitter_id: 76872
          type: "incident"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/tickets/35436.json"
          via:
            channel: "web"
    TimeBasedExportIncrementalUsersResponseExample:
      value:
        count: 1
        end_of_stream: true
        end_time: 1601357503
        next_page: "https://example.zendesk.com/api/v2/incremental/ticket_events.json?start_time=1601357503"
        users:
        - tags:
          - "enterprise"
          - "other_tag"
          active: true
          alias: "Mr. Johnny"
          created_at: "2009-07-20T22:55:29Z"
          custom_role_id: 9373643
          details: ""
          email: "johnny@example.com"
          external_id: "sai989sur98w9"
          id: 35436
          last_login_at: "2011-05-05T10:38:52Z"
          locale: "en-US"
          locale_id: 1
          moderator: true
          name: "Johnny Agent"
          notes: "Johnny is a nice guy!"
          only_private_comments: false
          organization_id: 57542
          phone: "+15551234567"
          photo:
            content_type: "image/png"
            content_url: "https://company.zendesk.com/photos/my_funny_profile_pic.png"
            id: 928374
            name: "my_funny_profile_pic.png"
            size: 166144
            thumbnails:
            - content_type: "image/png"
              content_url: "https://company.zendesk.com/photos/my_funny_profile_pic_thumb.png"
              id: 928375
              name: "my_funny_profile_pic_thumb.png"
              size: 58298
          restricted_agent: true
          role: "agent"
          role_type: 0
          shared: false
          shared_agent: false
          signature: "Have a nice day, Johnny"
          suspended: true
          ticket_restriction: "assigned"
          time_zone: "Copenhagen"
          updated_at: "2011-05-05T10:38:52Z"
          url: "https://company.zendesk.com/api/v2/users/35436.json"
          user_fields:
            user_date: "2012-07-23T00:00:00Z"
            user_decimal: 5.1
            user_dropdown: "option_1"
          verified: true
    TrialAccountResponseExample:
      value:
        account:
          name: "Sample Partner Account"
          subdomain: "partner12345"
          url: "https://partner12345.zendesk.com"
    TriggerBulkUpdateRequestExample:
      value:
        triggers:
        - id: 25
          position: 5
        - active: false
          id: 26
        - category_id: "10027"
          id: 27
    TriggerDefinitionResponseExample:
      value:
        definitions:
          actions:
          - group: "ticket"
            nullable: false
            repeatable: false
            subject: "status"
            title: "Status"
            type: "list"
            values:
            - enabled: true
              title: "Open"
              value: "open"
            - enabled: true
              title: "Pending"
              value: "pending"
            - enabled: true
              title: "Solved"
              value: "solved"
            - enabled: true
              title: "Closed"
              value: "closed"
          conditions_all:
          - group: "ticket"
            nullable: false
            operators:
            - terminal: false
              title: "Is"
              value: "is"
            - terminal: false
              title: "Is not"
              value: "is_not"
            - terminal: false
              title: "Less than"
              value: "less_than"
            - terminal: false
              title: "Greater than"
              value: "greater_than"
            - terminal: true
              title: "Changed"
              value: "changed"
            - terminal: false
              title: "Changed to"
              value: "value"
            - terminal: false
              title: "Changed from"
              value: "value_previous"
            - terminal: true
              title: "Not changed"
              value: "not_changed"
            - terminal: false
              title: "Not changed to"
              value: "not_value"
            - terminal: false
              title: "Not changed from"
              value: "not_value_previous"
            repeatable: false
            subject: "status"
            title: "Status"
            type: "list"
            values:
            - enabled: true
              title: "New"
              value: "new"
            - enabled: true
              title: "Open"
              value: "open"
            - enabled: true
              title: "Pending"
              value: "pending"
            - enabled: true
              title: "Solved"
              value: "solved"
            - enabled: true
              title: "Closed"
              value: "closed"
          conditions_any:
          - group: "ticket"
            nullable: true
            operators:
            - terminal: true
              title: "Present"
              value: "present"
            - terminal: true
              title: "Not present"
              value: "not_present"
            repeatable: false
            subject: "custom_fields_20513432"
            title: "Happy Gilmore"
            type: "list"
          - group: "ticket"
            nullable: true
            operators:
            - terminal: true
              title: "Present"
              value: "present"
            - terminal: true
              title: "Not present"
              value: "not_present"
            repeatable: false
            subject: "custom_fields_86492341"
            title: "total_time_field"
            type: "list"
    TriggerResponseExample:
      value:
        trigger:
          actions: []
          active: true
          category_id: "10026"
          conditions: {}
          created_at: "2012-09-25T22:50:26Z"
          description: "Close and save a ticket"
          id: 25
          position: 8
          raw_title: "Close and Save"
          title: "Close and Save"
          updated_at: "2012-09-25T22:50:26Z"
          url: "http://{subdomain}.zendesk.com/api/v2/triggers/25.json"
    TriggerRevisionResponseExample:
      value:
        trigger_revision:
          author_id: 3343
          created_at: "2020-05-28T06:41:43Z"
          id: 1
          snapshot:
            actions:
            - field: "notification_target"
              value:
              - "510312"
              - "{}"
            active: true
            conditions:
              all: []
              any:
              - field: "current_tags"
                operator: "includes"
                value: "fire_bulk_1"
            description: null
            title: "bulk_test_trigger_1"
          url: "https://example.zendesk.com/api/v2/triggers/261303831/revisions/1.json"
    TriggerRevisionsResponseExample:
      value:
        after_cursor: "MTUwMTYwNzUyMi4wfHwxMzQ3NTMxNjcxfA=="
        after_url: "https://{subdomain}.zendesk.com/api/v2/triggers/{trigger_id}/revisions.json?cursor=MTUwMTYwNzUyMi4wfHwxMzQ3NTMxNjcxfA%3D%3D&limit=20"
        before_cursor: "fDE1MDE1NzUxMjIuMHx8MTM0NzM0MzAxMQ=="
        before_url: "https://{subdomain}.zendesk.com/api/v2/triggers/{trigger_id}/revisions.json?cursor=fDE1MDE1NzUxMjIuMHx8MTM0NzM0MzAxMQ%3D%3D&limit=20"
        count: 1
        trigger_revisions:
        - author_id: 2
          created_at: "2016-08-15T16:04:06Z"
          diff:
            actions: []
            active: []
            conditions: {}
            description: []
            source_id: 1
            target_id: 2
            title: []
          id: 100
          snapshot:
            actions:
            - field: "notification_target"
              value:
              - "510312"
              - "{}"
            active: true
            conditions:
              all: []
              any:
              - field: "current_tags"
                operator: "includes"
                value: "fire_bulk_1"
            description: "Notifies requester that a comment was updated"
            title: "Notify requester of comment update"
          url: "https://{subdomain}.zendesk.com/api/v2/trigger/123/revisions/100.json"
    TriggerWithCategoryRequestExample:
      value:
        trigger:
          actions:
          - field: "group_id"
            value: "20455932"
          category_id: "10026"
          conditions:
            all:
            - field: "status"
              operator: "is"
              value: "open"
            - field: "priority"
              operator: "less_than"
              value: "high"
          title: "Roger Wilco"
    TriggersActiveResponseExample:
      value:
        count: 2
        next_page: null
        previous_page: null
        triggers:
        - actions: []
          active: true
          conditions: {}
          created_at: "2012-09-25T22:50:26Z"
          description: "Close and save a ticket"
          id: 25
          position: 8
          raw_title: "Close and Save"
          title: "Close and Save"
          updated_at: "2012-09-25T22:50:26Z"
          url: "http://{subdomain}.zendesk.com/api/v2/triggers/25.json"
        - actions: []
          active: true
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "status"
              operator: "less_than"
              value: "solved"
          created_at: "2012-09-25T22:50:26Z"
          description: "Assign a ticket with a priority tag"
          id: 26
          position: 9
          raw_title: "{{dc.assign_priority_tag}}"
          title: "Assign priority tag"
          updated_at: "2012-09-25T22:50:26Z"
          url: "http://{subdomain}.zendesk.com/api/v2/triggers/26.json"
    TriggersResponseExample:
      value:
        count: 2
        next_page: null
        previous_page: null
        triggers:
        - actions: []
          active: true
          conditions: {}
          created_at: "2012-09-25T22:50:26Z"
          description: "Close and save a ticket"
          id: 25
          position: 8
          raw_title: "Close and Save"
          title: "Close and Save"
          updated_at: "2012-09-25T22:50:26Z"
          url: "http://{subdomain}.zendesk.com/api/v2/triggers/25.json"
        - actions: []
          active: false
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "custom_status_id"
              operator: "includes"
              value:
              - "1"
              - "2"
          created_at: "2012-09-25T22:50:26Z"
          description: "Assign a ticket with a priority tag"
          id: 26
          position: 9
          raw_title: "{{dc.assign_priority_tag}}"
          title: "Assign priority tag"
          updated_at: "2012-09-25T22:50:26Z"
          url: "http://{subdomain}.zendesk.com/api/v2/triggers/26.json"
    TriggersSearchResponseExample:
      value:
        count: 2
        next_page: null
        previous_page: null
        triggers:
        - actions: []
          active: true
          conditions:
            all:
            - field: "status"
              operator: "less_than"
              value: "solved"
            - field: "assignee_id"
              operator: "is"
              value: "296220096"
            any:
            - field: "status"
              operator: "less_than"
              value: "solved"
          created_at: "2012-09-25T22:50:26Z"
          description: "Close and save a ticket"
          id: 25
          position: 9
          raw_title: "Close and Save"
          title: "Close and Save"
          updated_at: "2012-09-25T22:50:26Z"
        - actions: []
          active: true
          conditions: {}
          created_at: "2012-09-25T22:50:26Z"
          id: 28
          position: 9
          raw_title: "{{dc.close_and_redirect}}"
          title: "Close and redirect to topics"
          updated_at: "2012-09-25T22:50:26Z"
    TwitterChannelResponseExample:
      value:
        monitored_twitter_handle:
          created_at: "2010-05-13T22:07:08Z"
          id: 431
          screen_name: "@zendeskops"
          twitter_user_id: 67923318930
          updated_at: "2011-07-22T00:15:19Z"
    TwitterChannelTwicketStatusResponseExample:
      value:
        statuses:
        - favorited: true
          id: 834
          retweeted: false
          user_followed: true
    TwitterChannelsResponseExample:
      value:
        monitored_twitter_handles:
        - created_at: "2009-05-13T00:07:08Z"
          id: 211
          screen_name: "@zendesk"
          twitter_user_id: 67462376832
          updated_at: "2011-07-22T00:11:12Z"
        - created_at: "2010-05-13T22:07:08Z"
          id: 431
          screen_name: "@zendeskops"
          twitter_user_id: 67923318930
          updated_at: "2011-07-22T00:15:19Z"
    UpdateDeletionScheduleRequestExample:
      value:
        deletion_schedule:
          active: true
          conditions:
            all:
            - field: "duration_since_last_update"
              operator: "greater_than"
              value: "P1Y"
            any: []
          description: "Delete tickets older than 1 year"
          title: "some schedule"
    UpdateDeletionScheduleResponseExample:
      value:
        deletion_schedule:
          active: true
          conditions:
            all:
            - field: "duration_since_last_update"
              operator: "greater_than"
              value: "P1Y"
            any: []
          default: false
          description: "Delete tickets older than 1 year"
          id: 7772196094461
          title: "some schedule"
          url: "https://{some domain}.zendesk.com/api/v2/deletion_schedules/7772196094461.json"
    UpdateMacroResponseExample:
      value:
        macro:
          actions:
          - field: "status"
            value: "solved"
          active: true
          description: "Sets the ticket status to `solved`"
          id: 25
          position: 42
          restriction: {}
          title: "Close and Save"
    UpdateManyUsersRequestExample:
      value:
        user:
          organization_id: 1
    UpdateOrganizationResponseExample:
      value:
        organization:
          tags:
          - "smiley"
          - "teapot_kettle"
          created_at: "2018-11-14T00:14:52Z"
          details: "caterpillar =)"
          domain_names:
          - "remain.com"
          external_id: null
          group_id: 1835962
          id: 4112492
          name: "Groablet Enterprises"
          notes: "Something Interesting"
          organization_fields:
            datepudding: "2018-11-04T00:00:00+00:00"
            org_field_1: "happy happy"
            org_field_2: "teapot_kettle"
          shared_comments: false
          shared_tickets: false
          updated_at: "2018-11-14T00:54:22Z"
          url: "https://example.zendesk.com/api/v2/organizations/4112492.json"
    UpdateUserRequestExample:
      value:
        user:
          name: "Roger Wilco II"
    UpdateUserResponseExample:
      value:
        user:
          id: 9873843
          name: "Roger Wilco II"
    UserCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 102
    UserCreateResponseExample:
      value:
        user:
          custom_role_id: 123456
          email: "roge@example.org"
          id: 9873843
          name: "Roger Wilco"
          organization_id: 57542
          role: "agent"
          role_type: 0
    UserFieldCreateResponseExample:
      value:
        user_field:
          active: true
          created_at: "2013-02-27T20:35:55Z"
          description: "This field describes the support plan this user has"
          id: 75
          key: "support_description"
          position: 0
          raw_description: "This field describes the support plan this user has"
          raw_title: "Support description"
          regexp_for_validation: null
          title: "Support description"
          type: "text"
          updated_at: "2013-02-27T20:35:55Z"
          url: "https://company.zendesk.com/api/v2/user_fields/75.json"
    UserFieldResponseExample:
      value:
        user_field:
          active: true
          created_at: "2012-10-16T16:04:06Z"
          description: "Description of Custom Field"
          id: 7
          key: "custom_field_1"
          position: 9999
          raw_description: "{{dc.my_description}}"
          raw_title: "Custom Field 1"
          regexp_for_validation: null
          title: "Custom Field 1"
          type: "text"
          updated_at: "2012-10-16T16:04:06Z"
          url: "https://company.zendesk.com/api/v2/user_fields/7.json"
    UserFieldUpdateResponseExample:
      value:
        user_field:
          active: true
          created_at: "2013-02-27T20:35:55Z"
          description: "This field describes the support plan this user has"
          id: 75
          key: "support_description"
          position: 0
          raw_description: "This field describes the support plan this user has"
          raw_title: "Support description"
          regexp_for_validation: null
          title: "Support description"
          type: "text"
          updated_at: "2013-02-27T20:35:55Z"
          url: "https://company.zendesk.com/api/v2/user_fields/75.json"
    UserFieldsResponseExample:
      value:
        count: 1
        next_page: null
        previous_page: null
        user_fields:
        - active: true
          created_at: "2012-10-16T16:04:06Z"
          description: "Description of Custom Field"
          id: 7
          key: "custom_field_1"
          position: 9999
          raw_description: "{{dc.my_description}}"
          raw_title: "Custom Field 1"
          regexp_for_validation: null
          title: "Custom Field 1"
          type: "text"
          updated_at: "2012-10-16T16:04:06Z"
          url: "https://company.zendesk.com/api/v2/user_fields/7.json"
    UserIdentitiesResponseExample:
      value:
        identities:
        - created_at: "2011-07-20T22:55:29Z"
          id: 35436
          primary: true
          type: "email"
          updated_at: "2011-07-20T22:55:29Z"
          user_id: 135
          value: "someone@example.com"
          verified: true
        - created_at: "2012-02-12T14:25:21Z"
          id: 77136
          primary: false
          type: "twitter"
          updated_at: "2012-02-12T14:25:21Z"
          user_id: 135
          value: "didgeridooboy"
          verified: true
        - created_at: "2012-02-12T14:25:21Z"
          id: 88136
          primary: true
          type: "phone_number"
          updated_at: "2012-02-12T14:25:21Z"
          user_id: 135
          value: "+1 555-123-4567"
          verified: true
    UserIdentityCreateResponseExample:
      value:
        identity:
          created_at: "2012-02-12T14:25:21Z"
          id: 77938
          primary: false
          type: "twitter"
          updated_at: "2012-02-12T14:25:21Z"
          user_id: 13531
          value: "cabanaboy"
          verified: false
    UserIdentityResponseExample:
      value:
        identity:
          created_at: "2012-02-12T14:25:21Z"
          id: 77938
          primary: false
          type: "twitter"
          updated_at: "2012-02-12T14:25:21Z"
          user_id: 13531
          value: "cabanaboy"
          verified: false
    UserIdentityUpdateResponseExample:
      value:
        identity:
          created_at: "2011-07-20T22:55:29Z"
          deliverable_state: "deliverable"
          id: 35436
          primary: true
          type: "email"
          updated_at: "2011-07-20T22:55:29Z"
          user_id: 135
          value: "someone@example.com"
          verified: true
    UserPasswordRequirementsResponseExample:
      value:
        requirements:
        - "must be at least 5 characters"
        - "must be different from email address"
    UserRelatedResponseExample:
      value:
        user_related:
          assigned_tickets: 5
          ccd_tickets: 3
          organization_subscriptions: 1
          requested_tickets: 10
    UserRequestExample:
      value:
        user:
          custom_role_id: 123456
          email: "roge@example.org"
          identities:
          - type: "email"
            value: "test@user.com"
          - type: "twitter"
            value: "tester84"
          name: "Roger Wilco"
          organization:
            name: "VIP Customers"
          role: "agent"
    UserResponseExample:
      value:
        user:
          id: 35436
          name: "Johnny Agent"
    UsersCreateManyRequestExample:
      value:
        users:
        - email: "roge@example.org"
          name: "Roger Wilco"
          organization_id: 567812345
          role: "agent"
        - email: "woge@example.org"
          name: "Woger Rilco"
          role: "admin"
    UsersRequestExample:
      value:
        users:
        - custom_role_id: 123456
          email: "roge@example.org"
          identities:
          - type: "email"
            value: "test@user.com"
          - type: "twitter"
            value: "tester84"
          name: "Roger Wilco"
          organization:
            name: "VIP Customers"
          role: "agent"
        - email: "woge@example.org"
          external_id: "account_54321"
          name: "Woger Rilco"
          role: "admin"
    UsersResponseExample:
      value:
        users:
        - id: 223443
          name: "Johnny Agent"
        - id: 8678530
          name: "James A. Rosen"
    ViewCountResponseExample:
      value:
        view_count:
          fresh: true
          pretty: "~700"
          url: "https://company.zendesk.com/api/v2/views/25/count.json"
          value: 719
          view_id: 25
    ViewCountsResponseExample:
      value:
        view_counts:
        - fresh: true
          pretty: "~700"
          url: "https://company.zendesk.com/api/v2/views/25/count.json"
          value: 719
          view_id: 25
        - fresh: false
          pretty: "..."
          url: "https://company.zendesk.com/api/v2/views/78/count.json"
          value: null
          view_id: 78
    ViewCreateResponseExample:
      value:
        view:
          active: true
          conditions:
            all:
            - field: "status"
              operator: "is"
              value: "open"
            - field: "priority"
              operator: "less_than"
              value: "high"
            any:
            - field: "current_tags"
              operator: "includes"
              value: "hello"
          id: 9873843
          title: "Roger Wilco"
    ViewExecuteResponseExample:
      value:
        columns:
        - id: "locale"
          title: "Locale"
        - id: 5
          title: "Account"
        groups: []
        rows:
        - group: 1
          locale: "en-US"
          ticket: {}
        view:
          id: 25
    ViewExportResponseExample:
      value:
        export:
          status: "starting"
          view_id: 25
    ViewListTicketsResponseEXample:
      value:
        tickets:
        - id: 35436
          requester_id: 20978392
          subject: "Help I need somebody!"
        - id: 20057623
          requester_id: 20978392
          subject: "Not just anybody!"
    ViewPreviewResponseExample:
      value:
        columns:
        - id: "subject"
          title: "Subject"
        rows:
        - subject: "en-US"
          ticket: {}
    ViewResponseExample:
      value:
        view:
          active: true
          conditions: {}
          description: "View for recent tickets"
          execution: {}
          id: 25
          position: 3
          restriction: {}
          title: "Tickets updated less than 12 Hours"
    ViewUpdateResponseExample:
      value:
        view:
          active: true
          conditions: {}
          description: "View for recent tickets"
          execution: {}
          id: 25
          position: 3
          restriction: {}
          title: "Roger Wilco II"
    ViewsActiveResponseExample:
      value:
        count: 2
        next_page: null
        previous_page: null
        views:
        - active: true
          conditions: {}
          description: "View for recent tickets"
          execution: {}
          id: 25
          position: 3
          restriction: {}
          title: "Tickets updated less than 12 Hours"
        - active: true
          conditions: {}
          description: "View for tickets that are not assigned"
          execution: {}
          id: 23
          position: 7
          restriction: {}
          title: "Unassigned tickets"
    ViewsCountResponseExample:
      value:
        count:
          refreshed_at: "2020-04-06T02:18:17Z"
          value: 16
    ViewsResponseExample:
      value:
        count: 2
        next_page: null
        previous_page: null
        views:
        - active: true
          conditions: {}
          description: "View for recent tickets"
          execution: {}
          id: 25
          position: 3
          restriction: {}
          title: "Tickets updated less than 12 Hours"
        - active: false
          conditions: {}
          description: "View for tickets that are not assigned"
          execution: {}
          id: 23
          position: 7
          restriction: {}
          title: "Unassigned tickets"
    ViewsUpdateManyResponseExample:
      value:
        views:
        - active: true
          conditions: {}
          description: "View for recent tickets"
          execution: {}
          id: 123
          position: 8
          restriction: {}
          title: "Tickets updated less than 12 Hours"

